{"version":3,"sources":["utils/format.ts","components/content/detail/searchDetail/childCpn/playlist/style.tsx","components/content/detail/searchDetail/childCpn/playlist/index.tsx"],"names":["formatTime","dateS","fmt","date","Date","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","PlaylistWrapper","styled","ul","Playlist","props","playlist","useSelector","state","getIn","playlistRouter","item","index","history","push","pathname","id","map","className","toString","padStart","onClick","e","src","coverUrl","alt","name","createTime","user","userName","style","height","display","alignItems","justifyContent","image","Empty","PRESENTED_IMAGE_SIMPLE","description","memo"],"mappings":"yHACO,SAASA,EAAWC,EAAwBC,GACjD,IAAIC,EAAa,IAAIC,KAAKH,GACtB,OAAOI,KAAKH,KACdA,EAAMA,EAAII,QAAQC,OAAOC,IAAKL,EAAKM,cAAgB,IAAIC,OAAO,EAAIH,OAAOC,GAAGG,UAE9E,IAAIC,EAAI,CACN,KAAMT,EAAKU,WAAa,EACxB,KAAMV,EAAKW,UACX,KAAMX,EAAKY,WACX,KAAMZ,EAAKa,aACX,KAAMb,EAAKc,cAEb,IAAK,IAAIC,KAAKN,EACZ,GAAI,IAAIL,OAAJ,WAAeW,EAAf,MAAqBb,KAAKH,GAAM,CAElC,IAAIiB,EAAMP,EAAEM,GAAK,GACjBhB,EAAMA,EAAII,QAAQC,OAAOC,GAAyB,IAArBD,OAAOC,GAAGG,OAAeQ,EAAMC,EAAYD,IAG5E,OAAOjB,GAAO,GAGhB,SAASkB,EAAYD,GACnB,OAAQ,KAAOA,GAAKT,OAAOS,EAAIR,QAxBjC,mC,6ECCaU,E,MAAkBC,EAAOC,GAAV,8xB,gBCStBC,EAAoC,SAACC,GAAyB,IAC1DC,EAAaC,aAAqD,SAACC,GACzE,OAAOA,EAAMC,MAAM,CAAC,gBAAiB,oBAD/BH,SAGFI,EAAiB,SAACC,EAAiBC,GACvCP,EAAMQ,QAAQC,KAAK,CACjBC,SAAU,uBACVP,MAAO,CACLQ,GAAIL,EAAKK,OAIf,OACE,eAACf,EAAD,WACuB,IAApBK,EAASf,QACRe,EAASW,KAAI,SAACN,EAAiBC,GAC7B,OACE,+BACE,qBAAKM,UAAU,QAAf,UAAyBN,EAAQ,GAAGO,WAAWC,SAAS,EAAG,OAC3D,qBAAKF,UAAU,gBAAgBG,QAAS,SAACC,GAAD,OAAOZ,EAAeC,IAA9D,SACE,qBAAKY,IAAKZ,EAAKa,SAAUC,IAAI,mBAE/B,qBAAKP,UAAU,OAAOG,QAAS,SAACC,GAAD,OAAOZ,EAAeC,IAArD,SACGA,EAAKe,OAER,qBAAKR,UAAU,aAAf,SAA6BtC,YAAW+B,EAAKgB,WAAY,gBACxDhB,EAAKiB,MAAQ,qBAAKV,UAAU,UAAf,SAA0BP,EAAKiB,KAAKC,aAT3ClB,EAAKK,OAaC,IAApBV,EAASf,QACR,qBACEuC,MAAO,CACLC,OAAQ,QACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,UALpB,SAQE,cAAC,IAAD,CAAOC,MAAOC,IAAMC,uBAAwBC,YAAa,mCAMpDC,yBAAKnC","file":"static/js/54.0d30d80f.chunk.js","sourcesContent":["/*格式化时间*/\nexport function formatTime(dateS: number | string, fmt: string) {\n  let date: Date = new Date(dateS);\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n  }\n  let o = {\n    'M+': date.getMonth() + 1,\n    'd+': date.getDate(),\n    'h+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds()\n  };\n  for (let k in o) {\n    if (new RegExp(`(${k})`).test(fmt)) {\n      // @ts-ignore\n      let str = o[k] + '';\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\n    }\n  }\n  return fmt || '';\n}\n\nfunction padLeftZero(str: string) {\n  return ('00' + str).substr(str.length);\n}\n","import styled from 'styled-components';\nexport const PlaylistWrapper = styled.ul`\n  & > li {\n    display: flex;\n    align-items: center;\n    padding: 10px 20px;\n    &:nth-child(odd) {\n      background-color: #f9f9f9;\n    }\n    &:hover {\n      background-color: #f0f1f2;\n    }\n    .index {\n      padding: 0 15px 0 0;\n      color: #cacad9;\n    }\n    .img-container {\n      width: 60px;\n      height: 60px;\n      overflow: hidden;\n      border-radius: 5px;\n      margin: 0 20px 0 0;\n      cursor: pointer;\n      img {\n        width: 100%;\n      }\n    }\n    .name {\n      width: 30%;\n      color: #656565;\n      font-size: 13px;\n      cursor: pointer;\n    }\n    .createTime {\n      font-size: 12px;\n      color: #676767;\n      width: 20%;\n    }\n    .creator {\n      font-size: 13px;\n      color: #656565;\n    }\n  }\n`;\n","import React, { memo, FC, ReactElement } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Map } from 'immutable';\nimport { Empty } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { PlaylistWrapper } from './style';\nimport { IPlaylist } from '../../../../../../constant/playlist';\nimport { formatTime } from '../../../../../../utils/format';\nimport { ISearchStore } from '../../../../../../constant/store/search';\n\nconst Playlist: FC<RouteComponentProps> = (props): ReactElement => {\n  const { playlist } = useSelector<Map<string, ISearchStore>, ISearchStore>((state) => {\n    return state.getIn(['searchReducer', 'searchResult']);\n  });\n  const playlistRouter = (item: IPlaylist, index: number) => {\n    props.history.push({\n      pathname: '/Home/playlistDetail',\n      state: {\n        id: item.id\n      }\n    });\n  };\n  return (\n    <PlaylistWrapper>\n      {playlist.length !== 0 &&\n        playlist.map((item: IPlaylist, index: number) => {\n          return (\n            <li key={item.id}>\n              <div className=\"index\">{(index + 1).toString().padStart(2, '0')}</div>\n              <div className=\"img-container\" onClick={(e) => playlistRouter(item, index)}>\n                <img src={item.coverUrl} alt=\"歌单\" />\n              </div>\n              <div className=\"name\" onClick={(e) => playlistRouter(item, index)}>\n                {item.name}\n              </div>\n              <div className=\"createTime\">{formatTime(item.createTime, 'yyyy-MM-dd')}</div>\n              {item.user && <div className=\"creator\">{item.user.userName}</div>}\n            </li>\n          );\n        })}\n      {playlist.length === 0 && (\n        <div\n          style={{\n            height: '350px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'暂无歌单'} />\n        </div>\n      )}\n    </PlaylistWrapper>\n  );\n};\nexport default memo(Playlist);\n"],"sourceRoot":""}