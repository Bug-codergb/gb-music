{"version":3,"sources":["utils/format.ts","utils/holder.ts","components/content/msgItem/style.tsx","components/content/msgItem/index.tsx","components/content/detail/searchDetail/childCpn/video/style.tsx","components/content/detail/searchDetail/childCpn/video/index.tsx"],"names":["formatTime","dateS","fmt","date","Date","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","holder","count","line","s","i","Math","ceil","push","MsgItemWrapper","styled","div","props","widthProps","parseInt","scale","MsgItem","img","state","playCount","isShowPlayCount","itemWidth","dt","userName","cover","onClick","userRouter","className","e","memo","VideoWrapper","ul","Video","video","useSelector","getIn","map","item","index","name","src","coverUrl","alt","history","pathname","id","videoRouter","user","type","userId","style","height","width","display","alignItems","justifyContent","image","Empty","PRESENTED_IMAGE_SIMPLE","description"],"mappings":"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","file":"static/js/52.2627a25e.chunk.js","sourcesContent":["/*格式化时间*/\r\nexport function formatTime(dateS: number | string, fmt: string) {\r\n  let date: Date = new Date(dateS);\r\n  if (/(y+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n  }\r\n  let o = {\r\n    'M+': date.getMonth() + 1,\r\n    'd+': date.getDate(),\r\n    'h+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds()\r\n  };\r\n  for (let k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      // @ts-ignore\r\n      let str = o[k] + '';\r\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\r\n    }\r\n  }\r\n  return fmt || '';\r\n}\r\n\r\nfunction padLeftZero(str: string) {\r\n  return ('00' + str).substr(str.length);\r\n}\r\n","export function holder(count: number, line: number): number[] {\r\n  let s: number[] = [];\r\n  for (let i = 0; i < Math.ceil(count / line) * line - count; i++) {\r\n    s.push(i);\r\n  }\r\n  return s;\r\n}\r\n","import styled from 'styled-components';\r\n/*interface IProps{\r\n    widthProps:string\r\n}*/\r\nexport const MsgItemWrapper: any = styled.div`\r\n  position: relative;\r\n  width: ${(props) => (props as any).widthProps};\r\n  .img-container {\r\n    width: ${(props) => (props as any).widthProps};\r\n    height: ${(props) => parseInt((props as any).widthProps) * (props as any).scale + 'px'};\r\n    overflow: hidden;\r\n    border-radius: 3px;\r\n    background-color: #fff;\r\n    position: relative;\r\n    img {\r\n      width: 100%;\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n  .play-count {\r\n    position: absolute;\r\n    left: 100%;\r\n    top: 0;\r\n    color: #fff;\r\n    transform: translate(-110%, 10%);\r\n    white-space: nowrap;\r\n  }\r\n  .dt {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 100%;\r\n    color: #fff;\r\n    transform: translate(-110%, -110%);\r\n  }\r\n  .state {\r\n    margin: 10px 0 5px 0;\r\n    color: #373737;\r\n  }\r\n  .user-name {\r\n    color: #507daf;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { memo, FC, ReactElement } from 'react';\r\n//样式\r\nimport { MsgItemWrapper } from './style';\r\nimport { formatTime } from '../../../utils/format';\r\ninterface IProps {\r\n  img: ReactElement;\r\n  state: ReactElement;\r\n  playCount?: number;\r\n  isShowPlayCount: boolean;\r\n  itemWidth: string;\r\n  scale: number;\r\n  dt?: number;\r\n  userName?: string;\r\n  cover?: ReactElement;\r\n  onClick?: () => void;\r\n}\r\nconst MsgItem: FC<IProps> = ({\r\n  img,\r\n  state,\r\n  playCount,\r\n  isShowPlayCount,\r\n  itemWidth,\r\n  scale,\r\n  dt,\r\n  userName,\r\n  cover,\r\n  onClick\r\n}): ReactElement => {\r\n  const userRouter = () => {\r\n    if (onClick) {\r\n      onClick();\r\n    }\r\n  };\r\n  return (\r\n    <MsgItemWrapper widthProps={itemWidth} scale={scale}>\r\n      <div className=\"img-container\">\r\n        {cover}\r\n        {img}\r\n        {dt && <div className=\"dt\">{formatTime(dt, 'mm:ss')}</div>}\r\n      </div>\r\n      <div className=\"state text-nowrap\">{state}</div>\r\n      <div className=\"play-count\">\r\n        {isShowPlayCount && <i className=\"iconfont icon-play\"> </i>}\r\n        {playCount}\r\n      </div>\r\n      {userName && (\r\n        <div className=\"user-name\" onClick={(e) => userRouter()}>\r\n          {userName}\r\n        </div>\r\n      )}\r\n    </MsgItemWrapper>\r\n  );\r\n};\r\nexport default memo(MsgItem);\r\n","import styled from 'styled-components';\r\nexport const VideoWrapper = styled.ul`\r\n  padding: 0 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  li {\r\n    margin: 0 0 15px 0;\r\n    width: 190px;\r\n  }\r\n`;\r\n","import React, { memo, FC, ReactElement } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Map } from 'immutable';\r\nimport { VideoWrapper } from './style';\r\nimport { useSelector } from 'react-redux';\r\nimport MsgItem from '../../../../msgItem';\r\nimport { IVideo } from '../../../../../../constant/video';\r\nimport { holder } from '../../../../../../utils/holder';\r\nimport { Empty } from 'antd';\r\nimport { ISearchStore } from '../../../../../../constant/store/search';\r\nconst Video: FC<RouteComponentProps> = (props): ReactElement => {\r\n  const { video } = useSelector<Map<string, ISearchStore>, ISearchStore>((state) => {\r\n    return state.getIn(['searchReducer', 'searchResult']);\r\n  });\r\n  const videoRouter = (item: IVideo, index: number): void => {\r\n    props.history.push({\r\n      pathname: '/Home/videoDetail',\r\n      state: {\r\n        id: item.id\r\n      }\r\n    });\r\n  };\r\n  const userRouter = (item: IVideo) => {\r\n    if (item.type === 0) {\r\n      if ('userId' in item.user) {\r\n        props.history.push({\r\n          pathname: '/Home/userDetail',\r\n          state: {\r\n            userId: item.user.userId\r\n          }\r\n        });\r\n      }\r\n    } else if (item.type === 1) {\r\n      if ('id' in item.user) {\r\n        props.history.push({\r\n          pathname: '/Home/artistDetail',\r\n          state: {\r\n            id: item.user.id\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <VideoWrapper>\r\n      {video &&\r\n        video.length !== 0 &&\r\n        video.map((item: IVideo, index: number) => {\r\n          return (\r\n            <li key={item.id}>\r\n              <MsgItem\r\n                state={<span>{item.name}</span>}\r\n                img={<img src={item.coverUrl} alt={item.name} onClick={(e) => videoRouter(item, index)} />}\r\n                isShowPlayCount={true}\r\n                playCount={item.playCount}\r\n                scale={0.6}\r\n                itemWidth=\"190px\"\r\n                userName={'userName' in item.user ? item.user.userName : item.user.name}\r\n                onClick={() => userRouter(item)}\r\n                dt={item.dt}\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      {video &&\r\n        video.length !== 0 &&\r\n        holder(video.length, 4).map((item: number) => {\r\n          return <li key={item}> </li>;\r\n        })}\r\n      {video.length === 0 && (\r\n        <div\r\n          style={{\r\n            height: '350px',\r\n            width: '100%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'暂无视频'} />\r\n        </div>\r\n      )}\r\n    </VideoWrapper>\r\n  );\r\n};\r\nexport default memo(Video);\r\n"],"sourceRoot":""}