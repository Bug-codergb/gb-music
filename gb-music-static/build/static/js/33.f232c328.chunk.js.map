{"version":3,"sources":["views/Login/store/actionCreators.tsx","network/user/index.ts","network/login/index.tsx","utils/format.ts","components/content/playCoin/store/actionCreators.ts","utils/formatLyric.ts","network/song/index.ts","utils/getRandom.ts","utils/verify.ts","store/playType/actionCreators.ts","components/common/vip-mv/style.tsx","components/common/vip-mv/index.tsx","components/content/detail/searchDetail/childCpn/song/style.tsx","components/content/detail/searchDetail/childCpn/song/index.tsx","network/request.tsx"],"names":["changeUserMsg","res","type","userMsg","changeLoginType","loginType","changeUserDetailAction","dispatch","getUserDetail","then","data","love","follow","window","localStorage","setItem","JSON","stringify","userDetail","loginAction","userName","password","props","a","login","token","updateUserExpire","code","changeShow","auth","vip","history","push","pathname","console","log","message","warning","content","style","fontSize","marginTop","logoutAction","clear","userId","avatarUrl","createTime","updateTime","manage","subscriber","thumb","songId","setUserFavorite","id","request","url","method","headers","authorization","store","getState","getIn","getUserFavorite","offset","limit","params","cancelFavorite","getUserSub","uploadAvatar","formData","getOtherUserDetail","getUserChannel","getUserSubPlaylist","getUserMomentData","getUserAllMoment","getSimpleUserInfo","register","formatTime","dateS","fmt","date","Date","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","changeSongURL","songUrl","changeSongDetail","document","title","name","artist","channel","songDetail","changeLyric","lyric","changeLyricLine","lyricLine","changeCurrentLyricIndex","index","currentLyricIndex","changeCurrentIndex","currentIndex","changePlayMode","playMode","changeSongDetailAction","playlist","flag","findIndex","item","changePlayType","getSongDetail","changeSongURLAction","changeSongLyric","newPlaylist","addSongPlayCount","changeCurrentSongAction","tag","rand","getRandom","getSongURL","mp3Url","verifyURL","getLyric","lyricArray","lyricExp","lineLyric","split","result","exec","lyricObj","duration","trim","getFormatLyric","getRecSong","downloadSong","fetch","HOST_NAME","body","fileStream","streamSaver","createWriteStream","size","get","readableStream","WritableStream","pipeTo","writer","getWriter","reader","getReader","pump","read","done","close","write","value","start","end","Math","floor","random","jwt","verify","algorithms","playType","VipMvWrapper","styled","div","VipMv","isShowMv","isShowVip","onClick","videoClick","e","stopPropagation","className","withRouter","memo","SongWrapper","ul","Song","song","useSelector","state","useDispatch","map","toString","padStart","songPlay","video","videoRouter","artistRouter","album","albumRouter","height","display","alignItems","justifyContent","image","Empty","PRESENTED_IMAGE_SIMPLE","description","config","instance","axios","create","baseURL","timeout","interceptors","use","err","response","status","createBrowserHistory"],"mappings":"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","file":"static/js/33.f232c328.chunk.js","sourcesContent":["import { message } from 'antd';\nimport { login } from '../../../network/login';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getUserDetail, updateUserExpire } from '../../../network/user';\nimport { changeShow } from '../../../components/common/toast/store/actionCreators';\nimport { ILoginUserAction } from './type';\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\n\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\n  return {\n    type: 'changeUserMsg',\n    userMsg: res\n  };\n}\nfunction changeLoginType(res: number): ILoginUserAction {\n  return {\n    type: 'changeLoginType',\n    loginType: res\n  };\n}\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: res\n  };\n}\nfunction deleteUserDetail(): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: {\n      userId: '',\n      userName: '',\n      avatarUrl: '',\n      subscriber: [],\n      thumb: [],\n      follow: [{ userId: '' }],\n      love: [{ songId: '' }]\n    }\n  };\n}\nexport function changeUserDetailAction() {\n  return (dispatch: any) => {\n    getUserDetail().then((data: any) => {\n      const { love, follow } = data;\n      if (!love) {\n        data.love = [];\n      }\n      if (!follow) {\n        data.follow = [];\n      }\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\n      dispatch(changeUserDetail(data));\n    });\n  };\n}\n\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\n  return async (dispatch: any) => {\n    try {\n      const data: any = await login(userName, password);\n      if (data) {\n        const { token } = data;\n        const res: any = await updateUserExpire(token);\n        if (res.code * 1 === 200) {\n          dispatch(changeShow('您的VIP已经过期，开通VIP后畅想', 3500));\n          data.auth = 0;\n          delete data.vip;\n        }\n        await dispatch(changeUserMsg(data));\n        await dispatch(changeLoginType(1));\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\n        window.localStorage.setItem('loginType', '1');\n        await dispatch(changeUserDetailAction());\n        props.history.push({\n          pathname: '/Home'\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      message.warning({\n        content: '用户名或者密码错误',\n        style: {\n          fontSize: '20px',\n          marginTop: '5vh'\n        }\n      });\n    }\n  };\n}\n//退出登录\nexport function logoutAction() {\n  return (dispatch: any) => {\n    window.localStorage.clear();\n    dispatch(changeLoginType(0));\n    dispatch(\n      changeUserMsg({\n        token: '',\n        userName: '',\n        userId: '',\n        avatarUrl: '',\n        createTime: '',\n        updateTime: '',\n        manage: -1,\n        auth: -1\n      })\n    );\n    dispatch(deleteUserDetail());\n  };\n}\n","import request from '../request';\nimport store from '../../store/index';\n//用户喜欢歌曲\nexport function setUserFavorite(id: string) {\n  return request({\n    url: '/user/favorite',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户喜欢歌曲\nexport function getUserFavorite(offset: number, limit: number) {\n  return request({\n    url: '/user/favorite',\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//取消用户喜欢\nexport function cancelFavorite(songId: string) {\n  return request({\n    url: '/user/favorite/cancel',\n    method: 'post',\n    data: {\n      songId: songId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户收藏\nexport function getUserSub(url: string, offset: number, limit: number) {\n  return request({\n    url: `/sub/user/${url}`,\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取当前登录用户详情\nexport function getUserDetail() {\n  return request({\n    url: '/user/detail',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//上传用户头像\nexport function uploadAvatar(formData: FormData) {\n  return request({\n    url: '/user/upload/avatar',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  });\n}\n//获取其它用户详情\nexport function getOtherUserDetail<T>(userId: string) {\n  return request<T>({\n    url: '/user/other/detail',\n    method: 'post',\n    data: {\n      userId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户创建的电台\nexport function getUserChannel(userId: string, offset: number, limit: number) {\n  return request({\n    url: '/user/channel',\n    method: 'post',\n    data: {\n      userId,\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户收藏的歌单\nexport function getUserSubPlaylist<T>(userId: string, offset: number, limit: number) {\n  return request<T>({\n    url: '/sub/user/playlist',\n    method: 'post',\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      userId\n    }\n  });\n}\n//用户VIP是否·过期\nexport function updateUserExpire(token: string) {\n  return request({\n    url: '/user/expire',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: token\n    }\n  });\n}\n//获取用户动态数据\nexport function getUserMomentData() {\n  return request({\n    url: '/user/data/moment',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户全部动态\nexport function getUserAllMoment(offset: string, limit: string) {\n  return request({\n    url: '/user/moment',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户简略信息\nexport function getSimpleUserInfo<T>(userId: string) {\n  return request<T>({\n    url: '/user/simple',\n    params: {\n      userId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n","import request from '../request';\n//登录\nexport function login(userName: string, password: string) {\n  return request({\n    url: '/login',\n    method: 'post',\n    data: {\n      userName,\n      password\n    }\n  });\n}\n//注册\nexport function register(userName: string, password: string) {\n  return request({\n    url: '/register',\n    method: 'post',\n    data: {\n      userName,\n      password\n    }\n  });\n}\n","/*格式化时间*/\nexport function formatTime(dateS: number | string, fmt: string) {\n  let date: Date = new Date(dateS);\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n  }\n  let o = {\n    'M+': date.getMonth() + 1,\n    'd+': date.getDate(),\n    'h+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds()\n  };\n  for (let k in o) {\n    if (new RegExp(`(${k})`).test(fmt)) {\n      // @ts-ignore\n      let str = o[k] + '';\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\n    }\n  }\n  return fmt || '';\n}\n\nfunction padLeftZero(str: string) {\n  return ('00' + str).substr(str.length);\n}\n","import { addSongPlayCount, getLyric, getSongDetail, getSongURL } from '../../../../network/song';\nimport { ISong } from '../../../../constant/song';\nimport { getRandom } from '../../../../utils/getRandom';\nimport { changePlayType } from '../../../../store/playType/actionCreators';\nimport { getFormatLyric } from '../../../../utils/formatLyric';\nimport { verifyURL } from '../../../../utils/verify';\nimport { ISongStore } from '../../../../constant/store/song';\n\nexport function changeSongURL(res: string) {\n  return {\n    type: 'changeSongURL',\n    songUrl: res\n  };\n}\nexport function changeSongDetail(res: any) {\n  document.title = `${res.name} - ${res.artist ? res.artist.name : res.channel.name} - gb-music`;\n  return {\n    type: 'changeSongDetail',\n    songDetail: res\n  };\n}\nexport function changeLyric(res: any) {\n  return {\n    type: 'changeLyric',\n    lyric: res\n  };\n}\nexport function changeLyricLine(lyric: string) {\n  return {\n    type: 'changeLyricLine',\n    lyricLine: lyric\n  };\n}\nexport function changeCurrentLyricIndex(index: number) {\n  return {\n    type: 'changeCurrentLyricIndex',\n    currentLyricIndex: index\n  };\n}\n//添加到播放列表\nfunction changePlaylist(res: ISong[]) {\n  return {\n    type: 'changePlaylist',\n    playlist: res\n  };\n}\n//播放列表中歌曲索引\nfunction changeCurrentIndex(res: number) {\n  return {\n    type: 'changeCurrentIndex',\n    currentIndex: res\n  };\n}\n//改变播放模式\nexport function changePlayMode(res: number) {\n  return {\n    type: 'changePlayMode',\n    playMode: res\n  };\n}\nexport function changeSongDetailAction(id: string) {\n  return (dispatch: any, getState: any) => {\n    const { playlist } = getState().getIn(['songReducer', 'song']);\n    let flag = playlist.findIndex((item: ISong, index: number) => {\n      return item.id === id;\n    });\n    dispatch(changePlayType(0));\n    //播放列表中不存在\n    if (flag === -1) {\n      getSongDetail(id).then((data: any) => {\n        dispatch(changeSongDetail(data));\n        dispatch(changeSongURLAction(id));\n        dispatch(changeSongLyric(id));\n        const newPlaylist = [...playlist];\n        newPlaylist.push(data);\n        dispatch(changePlaylist(newPlaylist));\n        dispatch(changeCurrentIndex(newPlaylist.length - 1));\n      });\n      addSongPlayCount(id);\n    }\n    //播放列表中存在\n    if (flag !== -1) {\n      dispatch(changeCurrentIndex(flag));\n      dispatch(changeSongDetail(playlist[flag]));\n      dispatch(changeSongURLAction(id));\n      dispatch(changeSongLyric(id));\n      addSongPlayCount(id);\n    }\n  };\n}\nexport function changeCurrentSongAction(tag: number) {\n  return (dispatch: any, getState: any) => {\n    const { playMode }: ISongStore = getState().getIn(['songReducer', 'song']);\n    const { playlist }: ISongStore = getState().getIn(['songReducer', 'song']);\n    let { currentIndex }: ISongStore = getState().getIn(['songReducer', 'song']);\n    switch (playMode) {\n      case 1:\n        if (playlist.length !== 1) {\n          let rand = getRandom(0, playlist.length - 1);\n          while (rand === currentIndex) {\n            rand = getRandom(0, playlist.length - 1);\n          }\n          currentIndex = rand;\n        } else if (playlist.length === 1 || playlist.length === 0) {\n          currentIndex = 0;\n        }\n        break;\n      default:\n        currentIndex += tag;\n        if (currentIndex < 0) currentIndex = playlist.length - 1;\n        if (currentIndex > playlist.length - 1) currentIndex = 0;\n    }\n    dispatch(changeCurrentIndex(currentIndex));\n    dispatch(changeSongDetail(playlist[currentIndex]));\n    dispatch(changeSongURLAction(playlist[currentIndex].id));\n  };\n}\nexport function changeSongURLAction(id: string) {\n  return (dispatch: any) => {\n    getSongURL(id).then((data: any) => {\n      const { mp3Url } = data;\n      const url = verifyURL(mp3Url);\n      dispatch(changeSongURL(url));\n    });\n  };\n}\nexport function changeSongLyric(id: string) {\n  return (dispatch: any) => {\n    getLyric(id).then((data: any) => {\n      if (data.lyric) {\n        dispatch(changeLyric(getFormatLyric(data.lyric)));\n      } else {\n        dispatch(changeLyric('暂无歌词'));\n      }\n    });\n  };\n}\n","export const getFormatLyric = (lyric: string) => {\n  const lyricArray = [];\n  const lyricExp = /\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})\\]/;\n  const lineLyric = lyric.split('\\n');\n\n  for (let item of lineLyric) {\n    if (item) {\n      const result = lyricExp.exec(item);\n      if (!result) continue;\n      // @ts-ignore\n      const time1: any = result[1] * 60 * 1000;\n      // @ts-ignore\n      const time2: any = result[2] * 1000;\n      // @ts-ignore\n      const time3: any = result[3].length === 3 ? result[3] * 1 : result[3] * 10;\n      const duration = time1 + time2 + time3;\n      const content = item.replace(lyricExp, '').trim();\n      const lyricObj = { duration, content };\n      lyricArray.push(lyricObj);\n    }\n  }\n  return lyricArray;\n};\n","import request from '../request';\nimport store from '../../store';\n// @ts-ignore\nimport streamSaver from 'streamsaver';\nimport { HOST_NAME } from '../../config';\n\n//获取推荐歌曲\nexport function getRecSong<T>(offset: number = 0, limit: number = 30) {\n  return request<T>({\n    url: '/song/recommend',\n    params: {\n      offset,\n      limit\n    }\n  });\n}\n//获取歌曲播放地址\nexport function getSongURL(id: string) {\n  return request({\n    url: '/song/url',\n    params: {\n      id\n    }\n  });\n}\n//获取歌曲详情\nexport function getSongDetail(id: String) {\n  return request({\n    url: '/song/detail',\n    params: {\n      id\n    }\n  });\n}\n//获取歌词\nexport function getLyric(id: string) {\n  return request({\n    url: '/song/lyric',\n    params: {\n      id\n    }\n  });\n}\n//为歌曲添加播放量\nexport function addSongPlayCount(id: string) {\n  return request({\n    url: '/song/playCount',\n    method: 'post',\n    data: {\n      id\n    }\n  });\n}\n//下载歌曲\nexport function downloadSong(id: string, name: string) {\n  fetch(`${HOST_NAME}/song/download`, {\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ id })\n  }).then((res) => {\n    const fileStream = streamSaver.createWriteStream(name + '.mp3', {\n      size: res.headers.get('content-length')\n    });\n    const readableStream = res.body;\n    // @ts-ignore\n    if (window.WritableStream && readableStream.pipeTo) {\n      // @ts-ignore\n      return readableStream.pipeTo(fileStream).then(() => {});\n    }\n    // @ts-ignore\n    window.writer = fileStream.getWriter();\n    // @ts-ignore\n    const reader = res.body.getReader();\n    // @ts-ignore\n    const pump = () =>\n      reader.read().then((res) =>\n        // @ts-ignore\n        res.done ? window.writer.close() : window.writer.write(res.value).then(pump)\n      );\n    pump();\n  });\n}\n","const getRandom = (start: number, end: number): number => {\n  return Math.floor(Math.random() * (end - start + 1)) + start;\n};\nexport { getRandom };\n","import jwt from 'jsonwebtoken';\nfunction verifyURL(url: string) {\n  const publicKey: string = `-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDVngqLlcT4xs9q18KCEWGaNYIa\nEMwSIus02VG3XVt8IGwT5Ws8Z1qCULz7jxERDKgSyfUM0EMOQ2KH/Z/ZhhZAld1r\nDCjxhiWLwXx5qYWJo9U862aYMQUjb3J5iqf2Wg+OuHPYkZ9oUvQl01kMRTkEkprf\nkNSJkagkgGMGph5OywIDAQAB\n-----END PUBLIC KEY-----`;\n  const result: any = jwt.verify(url, publicKey, {\n    algorithms: ['RS256']\n  });\n  if ((result && result.url) || (result && result.mp3Url)) {\n    return result.url || result.mp3Url;\n  } else {\n    return '';\n  }\n}\nexport { verifyURL };\n","export function changePlayType(type: number) {\n  return {\n    type: 'changePlayType',\n    playType: type\n  };\n}\n","import styled from 'styled-components';\nexport const VipMvWrapper = styled.div`\n  .vip-mv {\n    display: flex;\n    align-items: center;\n    .vip,\n    .mv {\n      font-size: 12px;\n      padding: 0 4px 1px 4px;\n      border-radius: 4px;\n      line-height: 13px;\n      margin: 0 2px 0 0;\n      transform: scale(0.85);\n    }\n    .vip {\n      border: 2px solid #fa8153;\n      color: #fa8153;\n      font-weight: 600;\n    }\n    .mv {\n      border: 2px solid #ec4747;\n      color: #ec4747;\n      font-weight: bold;\n      cursor: pointer;\n    }\n  }\n`;\n","/*\n@Name guo'bin\n@Description gb-music\n@author guo'bin\n@date 2021/10/22\n*/\nimport React, { memo, ReactElement, FC, MouseEvent } from 'react';\nimport { VipMvWrapper } from './style';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\ninterface IProps extends RouteComponentProps {\n  isShowVip: boolean;\n  isShowMv: boolean;\n  onClick: () => void;\n}\nconst VipMv: FC<IProps> = (props): ReactElement => {\n  const { isShowMv, isShowVip, onClick } = props;\n  const videoClick = (e: MouseEvent<HTMLLIElement>) => {\n    e.stopPropagation();\n    onClick();\n  };\n  return (\n    <VipMvWrapper>\n      <ul className=\"vip-mv\">\n        {isShowVip && (\n          <li className=\"vip\" onClick={(e) => e.stopPropagation()}>\n            VIP\n          </li>\n        )}\n        {isShowMv && (\n          <li className=\"mv\" onClick={(e) => videoClick(e)}>\n            MV\n          </li>\n        )}\n      </ul>\n    </VipMvWrapper>\n  );\n};\nexport default withRouter(memo(VipMv));\n","import styled from 'styled-components';\nexport const SongWrapper = styled.ul`\n  & > li {\n    display: flex;\n    align-items: center;\n    padding: 10px 20px;\n    &:nth-child(odd) {\n      background-color: #f9f9f9;\n    }\n    &:hover {\n      background-color: #f0f1f2;\n    }\n    .index {\n      color: #cfd2d9;\n      font-size: 13px;\n      padding: 0 15px 0 0;\n    }\n    .name {\n      width: 30%;\n      color: #0086b3;\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      & > span {\n        font-size: 13px;\n        max-width: 155px;\n        display: inline-block;\n        margin: 0 5px 0 0;\n      }\n    }\n    .album-name,\n    .artist-name {\n      color: #656565;\n      font-size: 13px;\n      width: 20%;\n      cursor: pointer;\n    }\n    .dt {\n      color: #9b9b9b;\n      font-size: 12px;\n    }\n  }\n`;\n","import React, { memo, FC, ReactElement } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Map } from 'immutable';\nimport { SongWrapper } from './style';\nimport { ISong } from '../../../../../../constant/song';\nimport { formatTime } from '../../../../../../utils/format';\n\nimport { changeSongDetailAction } from '../../../../playCoin/store/actionCreators';\nimport { Empty } from 'antd';\nimport VipMv from '../../../../../common/vip-mv';\nimport { ISearchStore } from '../../../../../../constant/store/search';\n\nconst Song: FC<RouteComponentProps> = (props): ReactElement => {\n  const { song } = useSelector<Map<string, ISearchStore>, ISearchStore>((state) => {\n    return state.getIn(['searchReducer', 'searchResult']);\n  });\n  const dispatch = useDispatch();\n  const songPlay = (item: ISong, index: number): void => {\n    dispatch(changeSongDetailAction(item.id));\n  };\n  const artistRouter = (item: ISong, index: number) => {\n    props.history.push({\n      pathname: '/Home/artistDetail',\n      state: {\n        id: item.artist.id\n      }\n    });\n  };\n  const albumRouter = (item: ISong, index: number): void => {\n    props.history.push({\n      pathname: '/Home/albumDetail',\n      state: {\n        id: item.album.id\n      }\n    });\n  };\n  const videoRouter = (item: ISong) => {\n    props.history.push({\n      pathname: '/Home/videoDetail',\n      state: {\n        id: item.video.id\n      }\n    });\n  };\n  return (\n    <SongWrapper>\n      {song &&\n        song.length !== 0 &&\n        song.map((item: ISong, index: number) => {\n          return (\n            <li key={item.id}>\n              <div className=\"index\">{(index + 1).toString().padStart(2, '0')}</div>\n              <div className=\"name text-nowrap\" onClick={(e) => songPlay(item, index)}>\n                <span className=\"text-nowrap\">{item.name}</span>\n                <VipMv isShowVip={item.vip === 1} isShowMv={item.video} onClick={() => videoRouter(item)} />\n              </div>\n              <div className=\"artist-name\" onClick={(e) => artistRouter(item, index)}>\n                {item.artist.name}\n              </div>\n              <div className=\"album-name\" onClick={(e) => albumRouter(item, index)}>\n                {item.album.name}\n              </div>\n              <div className=\"dt\">{formatTime(item.duration!, 'mm:ss')}</div>\n            </li>\n          );\n        })}\n      {song && song.length === 0 && (\n        <div\n          style={{\n            height: '350px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'暂无歌曲'} />\n        </div>\n      )}\n    </SongWrapper>\n  );\n};\nexport default memo(Song);\n","/*\n@Name guobin\n@Description gb-music\n@author guobin\n@date 2021/9/21\n*/\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { HOST_NAME } from '../config';\nimport store from '../store';\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\nimport { createBrowserHistory } from 'history';\nfunction request<T>(config: AxiosRequestConfig) {\n  const instance: AxiosInstance = axios.create({\n    baseURL: HOST_NAME,\n    timeout: 15000\n  });\n  instance.interceptors.request.use(\n    (config) => {\n      return config;\n    },\n    (err) => {\n      console.log(err);\n      return err;\n    }\n  );\n  instance.interceptors.response.use(\n    (res) => {\n      return res.data;\n    },\n    (err) => {\n      if (err.response) {\n        const { status, data } = err.response;\n        if (status * 1 === 403 && data.message === '请登录') {\n          // @ts-ignore\n          store.dispatch(logoutAction());\n          store.dispatch(\n            changeUserMsg({\n              token: '',\n              userName: '',\n              userId: '',\n              avatarUrl: '',\n              createTime: '',\n              updateTime: '',\n              manage: -1,\n              auth: -1\n            })\n          );\n          createBrowserHistory().push({\n            pathname: '/Login'\n          });\n        } else {\n          throw err;\n        }\n      }\n    }\n  );\n  return instance.request<any, T>(config);\n}\nexport default request;\n"],"sourceRoot":""}