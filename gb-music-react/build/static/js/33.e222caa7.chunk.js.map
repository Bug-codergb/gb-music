{"version":3,"sources":["views/Login/store/actionCreators.tsx","network/user/index.ts","network/login/index.tsx","utils/format.ts","components/content/playCoin/store/actionCreators.ts","utils/formatLyric.ts","network/song/index.ts","utils/getRandom.ts","utils/verify.ts","store/playType/actionCreators.ts","components/common/vip-mv/style.tsx","components/common/vip-mv/index.tsx","components/content/detail/searchDetail/childCpn/song/style.tsx","components/content/detail/searchDetail/childCpn/song/index.tsx","network/request.tsx"],"names":["changeUserMsg","res","type","userMsg","changeLoginType","loginType","changeUserDetailAction","dispatch","getUserDetail","then","data","love","follow","window","localStorage","setItem","JSON","stringify","userDetail","loginAction","userName","password","props","a","login","token","updateUserExpire","code","changeShow","auth","vip","history","push","pathname","console","log","message","warning","content","style","fontSize","marginTop","logoutAction","clear","userId","avatarUrl","createTime","updateTime","manage","subscriber","thumb","songId","setUserFavorite","id","request","url","method","headers","authorization","store","getState","getIn","getUserFavorite","offset","limit","params","cancelFavorite","getUserSub","uploadAvatar","formData","getOtherUserDetail","getUserChannel","getUserSubPlaylist","getUserMomentData","getUserAllMoment","getSimpleUserInfo","register","formatTime","dateS","fmt","date","Date","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","changeSongURL","songUrl","changeSongDetail","document","title","name","artist","channel","songDetail","changeLyric","lyric","changeLyricLine","lyricLine","changeCurrentLyricIndex","index","currentLyricIndex","changeCurrentIndex","currentIndex","changePlayMode","playMode","changeSongDetailAction","playlist","flag","findIndex","item","changePlayType","getSongDetail","changeSongURLAction","changeSongLyric","newPlaylist","addSongPlayCount","changeCurrentSongAction","tag","rand","getRandom","getSongURL","mp3Url","verifyURL","getLyric","lyricArray","lyricExp","lineLyric","split","result","exec","lyricObj","duration","trim","getFormatLyric","getRecSong","downloadSong","fetch","HOST_NAME","body","fileStream","streamSaver","createWriteStream","size","get","readableStream","WritableStream","pipeTo","writer","getWriter","reader","getReader","pump","read","done","close","write","value","start","end","Math","floor","random","jwt","verify","algorithms","playType","VipMvWrapper","styled","div","VipMv","isShowMv","isShowVip","onClick","videoClick","e","stopPropagation","className","withRouter","memo","SongWrapper","ul","Song","song","useSelector","state","useDispatch","map","toString","padStart","songPlay","video","videoRouter","artistRouter","album","albumRouter","height","display","alignItems","justifyContent","image","Empty","PRESENTED_IMAGE_SIMPLE","description","config","instance","axios","create","baseURL","timeout","interceptors","use","err","response","status","createBrowserHistory"],"mappings":"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","file":"static/js/33.e222caa7.chunk.js","sourcesContent":["import { message } from 'antd';\r\nimport { login } from '../../../network/login';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { getUserDetail, updateUserExpire } from '../../../network/user';\r\nimport { changeShow } from '../../../components/common/toast/store/actionCreators';\r\nimport { ILoginUserAction } from './type';\r\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\r\n\r\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserMsg',\r\n    userMsg: res\r\n  };\r\n}\r\nfunction changeLoginType(res: number): ILoginUserAction {\r\n  return {\r\n    type: 'changeLoginType',\r\n    loginType: res\r\n  };\r\n}\r\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserDetail',\r\n    userDetail: res\r\n  };\r\n}\r\nfunction deleteUserDetail(): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserDetail',\r\n    userDetail: {\r\n      userId: '',\r\n      userName: '',\r\n      avatarUrl: '',\r\n      subscriber: [],\r\n      thumb: [],\r\n      follow: [{ userId: '' }],\r\n      love: [{ songId: '' }]\r\n    }\r\n  };\r\n}\r\nexport function changeUserDetailAction() {\r\n  return (dispatch: any) => {\r\n    getUserDetail().then((data: any) => {\r\n      const { love, follow } = data;\r\n      if (!love) {\r\n        data.love = [];\r\n      }\r\n      if (!follow) {\r\n        data.follow = [];\r\n      }\r\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\r\n      dispatch(changeUserDetail(data));\r\n    });\r\n  };\r\n}\r\n\r\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const data: any = await login(userName, password);\r\n      if (data) {\r\n        const { token } = data;\r\n        const res: any = await updateUserExpire(token);\r\n        if (res.code * 1 === 200) {\r\n          dispatch(changeShow('您的VIP已经过期，开通VIP后畅想', 3500));\r\n          data.auth = 0;\r\n          delete data.vip;\r\n        }\r\n        await dispatch(changeUserMsg(data));\r\n        await dispatch(changeLoginType(1));\r\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\r\n        window.localStorage.setItem('loginType', '1');\r\n        await dispatch(changeUserDetailAction());\r\n        props.history.push({\r\n          pathname: '/Home'\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      message.warning({\r\n        content: '用户名或者密码错误',\r\n        style: {\r\n          fontSize: '20px',\r\n          marginTop: '5vh'\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n//退出登录\r\nexport function logoutAction() {\r\n  return (dispatch: any) => {\r\n    window.localStorage.clear();\r\n    dispatch(changeLoginType(0));\r\n    dispatch(\r\n      changeUserMsg({\r\n        token: '',\r\n        userName: '',\r\n        userId: '',\r\n        avatarUrl: '',\r\n        createTime: '',\r\n        updateTime: '',\r\n        manage: -1,\r\n        auth: -1\r\n      })\r\n    );\r\n    dispatch(deleteUserDetail());\r\n  };\r\n}\r\n","import request from '../request';\r\nimport store from '../../store/index';\r\n//用户喜欢歌曲\r\nexport function setUserFavorite(id: string) {\r\n  return request({\r\n    url: '/user/favorite',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户喜欢歌曲\r\nexport function getUserFavorite(offset: number, limit: number) {\r\n  return request({\r\n    url: '/user/favorite',\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//取消用户喜欢\r\nexport function cancelFavorite(songId: string) {\r\n  return request({\r\n    url: '/user/favorite/cancel',\r\n    method: 'post',\r\n    data: {\r\n      songId: songId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户收藏\r\nexport function getUserSub(url: string, offset: number, limit: number) {\r\n  return request({\r\n    url: `/sub/user/${url}`,\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取当前登录用户详情\r\nexport function getUserDetail() {\r\n  return request({\r\n    url: '/user/detail',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//上传用户头像\r\nexport function uploadAvatar(formData: FormData) {\r\n  return request({\r\n    url: '/user/upload/avatar',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\r\n      'Content-Type': 'multipart/form-data'\r\n    },\r\n    data: formData\r\n  });\r\n}\r\n//获取其它用户详情\r\nexport function getOtherUserDetail<T>(userId: string) {\r\n  return request<T>({\r\n    url: '/user/other/detail',\r\n    method: 'post',\r\n    data: {\r\n      userId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n\r\n//获取用户创建的电台\r\nexport function getUserChannel(userId: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/user/channel',\r\n    method: 'post',\r\n    data: {\r\n      userId,\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n\r\n//获取用户收藏的歌单\r\nexport function getUserSubPlaylist<T>(userId: string, offset: number, limit: number) {\r\n  return request<T>({\r\n    url: '/sub/user/playlist',\r\n    method: 'post',\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    data: {\r\n      userId\r\n    }\r\n  });\r\n}\r\n//用户VIP是否·过期\r\nexport function updateUserExpire(token: string) {\r\n  return request({\r\n    url: '/user/expire',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: token\r\n    }\r\n  });\r\n}\r\n//获取用户动态数据\r\nexport function getUserMomentData() {\r\n  return request({\r\n    url: '/user/data/moment',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户全部动态\r\nexport function getUserAllMoment(offset: string, limit: string) {\r\n  return request({\r\n    url: '/user/moment',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户简略信息\r\nexport function getSimpleUserInfo<T>(userId: string) {\r\n  return request<T>({\r\n    url: '/user/simple',\r\n    params: {\r\n      userId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n","import request from '../request';\r\n//登录\r\nexport function login(userName: string, password: string) {\r\n  return request({\r\n    url: '/login',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n//注册\r\nexport function register(userName: string, password: string) {\r\n  return request({\r\n    url: '/register',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n","/*格式化时间*/\r\nexport function formatTime(dateS: number | string, fmt: string) {\r\n  let date: Date = new Date(dateS);\r\n  if (/(y+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n  }\r\n  let o = {\r\n    'M+': date.getMonth() + 1,\r\n    'd+': date.getDate(),\r\n    'h+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds()\r\n  };\r\n  for (let k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      // @ts-ignore\r\n      let str = o[k] + '';\r\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\r\n    }\r\n  }\r\n  return fmt || '';\r\n}\r\n\r\nfunction padLeftZero(str: string) {\r\n  return ('00' + str).substr(str.length);\r\n}\r\n","import { addSongPlayCount, getLyric, getSongDetail, getSongURL } from '../../../../network/song';\r\nimport { ISong } from '../../../../constant/song';\r\nimport { getRandom } from '../../../../utils/getRandom';\r\nimport { changePlayType } from '../../../../store/playType/actionCreators';\r\nimport { getFormatLyric } from '../../../../utils/formatLyric';\r\nimport { verifyURL } from '../../../../utils/verify';\r\nimport { ISongStore } from '../../../../constant/store/song';\r\n\r\nexport function changeSongURL(res: string) {\r\n  return {\r\n    type: 'changeSongURL',\r\n    songUrl: res\r\n  };\r\n}\r\nexport function changeSongDetail(res: any) {\r\n  document.title = `${res.name} - ${res.artist ? res.artist.name : res.channel.name} - gb-music`;\r\n  return {\r\n    type: 'changeSongDetail',\r\n    songDetail: res\r\n  };\r\n}\r\nexport function changeLyric(res: any) {\r\n  return {\r\n    type: 'changeLyric',\r\n    lyric: res\r\n  };\r\n}\r\nexport function changeLyricLine(lyric: string) {\r\n  return {\r\n    type: 'changeLyricLine',\r\n    lyricLine: lyric\r\n  };\r\n}\r\nexport function changeCurrentLyricIndex(index: number) {\r\n  return {\r\n    type: 'changeCurrentLyricIndex',\r\n    currentLyricIndex: index\r\n  };\r\n}\r\n//添加到播放列表\r\nfunction changePlaylist(res: ISong[]) {\r\n  return {\r\n    type: 'changePlaylist',\r\n    playlist: res\r\n  };\r\n}\r\n//播放列表中歌曲索引\r\nfunction changeCurrentIndex(res: number) {\r\n  return {\r\n    type: 'changeCurrentIndex',\r\n    currentIndex: res\r\n  };\r\n}\r\n//改变播放模式\r\nexport function changePlayMode(res: number) {\r\n  return {\r\n    type: 'changePlayMode',\r\n    playMode: res\r\n  };\r\n}\r\nexport function changeSongDetailAction(id: string) {\r\n  return (dispatch: any, getState: any) => {\r\n    const { playlist } = getState().getIn(['songReducer', 'song']);\r\n    let flag = playlist.findIndex((item: ISong, index: number) => {\r\n      return item.id === id;\r\n    });\r\n    dispatch(changePlayType(0));\r\n    //播放列表中不存在\r\n    if (flag === -1) {\r\n      getSongDetail(id).then((data: any) => {\r\n        dispatch(changeSongDetail(data));\r\n        dispatch(changeSongURLAction(id));\r\n        dispatch(changeSongLyric(id));\r\n        const newPlaylist = [...playlist];\r\n        newPlaylist.push(data);\r\n        dispatch(changePlaylist(newPlaylist));\r\n        dispatch(changeCurrentIndex(newPlaylist.length - 1));\r\n      });\r\n      addSongPlayCount(id);\r\n    }\r\n    //播放列表中存在\r\n    if (flag !== -1) {\r\n      dispatch(changeCurrentIndex(flag));\r\n      dispatch(changeSongDetail(playlist[flag]));\r\n      dispatch(changeSongURLAction(id));\r\n      dispatch(changeSongLyric(id));\r\n      addSongPlayCount(id);\r\n    }\r\n  };\r\n}\r\nexport function changeCurrentSongAction(tag: number) {\r\n  return (dispatch: any, getState: any) => {\r\n    const { playMode }: ISongStore = getState().getIn(['songReducer', 'song']);\r\n    const { playlist }: ISongStore = getState().getIn(['songReducer', 'song']);\r\n    let { currentIndex }: ISongStore = getState().getIn(['songReducer', 'song']);\r\n    switch (playMode) {\r\n      case 1:\r\n        if (playlist.length !== 1) {\r\n          let rand = getRandom(0, playlist.length - 1);\r\n          while (rand === currentIndex) {\r\n            rand = getRandom(0, playlist.length - 1);\r\n          }\r\n          currentIndex = rand;\r\n        } else if (playlist.length === 1 || playlist.length === 0) {\r\n          currentIndex = 0;\r\n        }\r\n        break;\r\n      default:\r\n        currentIndex += tag;\r\n        if (currentIndex < 0) currentIndex = playlist.length - 1;\r\n        if (currentIndex > playlist.length - 1) currentIndex = 0;\r\n    }\r\n    dispatch(changeCurrentIndex(currentIndex));\r\n    dispatch(changeSongDetail(playlist[currentIndex]));\r\n    dispatch(changeSongURLAction(playlist[currentIndex].id));\r\n  };\r\n}\r\nexport function changeSongURLAction(id: string) {\r\n  return (dispatch: any) => {\r\n    getSongURL(id).then((data: any) => {\r\n      const { mp3Url } = data;\r\n      const url = verifyURL(mp3Url);\r\n      dispatch(changeSongURL(url));\r\n    });\r\n  };\r\n}\r\nexport function changeSongLyric(id: string) {\r\n  return (dispatch: any) => {\r\n    getLyric(id).then((data: any) => {\r\n      if (data.lyric) {\r\n        dispatch(changeLyric(getFormatLyric(data.lyric)));\r\n      } else {\r\n        dispatch(changeLyric('暂无歌词'));\r\n      }\r\n    });\r\n  };\r\n}\r\n","export const getFormatLyric = (lyric: string) => {\r\n  const lyricArray = [];\r\n  const lyricExp = /\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})\\]/;\r\n  const lineLyric = lyric.split('\\n');\r\n\r\n  for (let item of lineLyric) {\r\n    if (item) {\r\n      const result = lyricExp.exec(item);\r\n      if (!result) continue;\r\n      // @ts-ignore\r\n      const time1: any = result[1] * 60 * 1000;\r\n      // @ts-ignore\r\n      const time2: any = result[2] * 1000;\r\n      // @ts-ignore\r\n      const time3: any = result[3].length === 3 ? result[3] * 1 : result[3] * 10;\r\n      const duration = time1 + time2 + time3;\r\n      const content = item.replace(lyricExp, '').trim();\r\n      const lyricObj = { duration, content };\r\n      lyricArray.push(lyricObj);\r\n    }\r\n  }\r\n  return lyricArray;\r\n};\r\n","import request from '../request';\r\nimport store from '../../store';\r\n// @ts-ignore\r\nimport streamSaver from 'streamsaver';\r\nimport { HOST_NAME } from '../../config';\r\n\r\n//获取推荐歌曲\r\nexport function getRecSong<T>(offset: number = 0, limit: number = 30) {\r\n  return request<T>({\r\n    url: '/song/recommend',\r\n    params: {\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//获取歌曲播放地址\r\nexport function getSongURL(id: string) {\r\n  return request({\r\n    url: '/song/url',\r\n    params: {\r\n      id\r\n    }\r\n  });\r\n}\r\n//获取歌曲详情\r\nexport function getSongDetail(id: String) {\r\n  return request({\r\n    url: '/song/detail',\r\n    params: {\r\n      id\r\n    }\r\n  });\r\n}\r\n//获取歌词\r\nexport function getLyric(id: string) {\r\n  return request({\r\n    url: '/song/lyric',\r\n    params: {\r\n      id\r\n    }\r\n  });\r\n}\r\n//为歌曲添加播放量\r\nexport function addSongPlayCount(id: string) {\r\n  return request({\r\n    url: '/song/playCount',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    }\r\n  });\r\n}\r\n//下载歌曲\r\nexport function downloadSong(id: string, name: string) {\r\n  fetch(`${HOST_NAME}/song/download`, {\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ id })\r\n  }).then((res) => {\r\n    const fileStream = streamSaver.createWriteStream(name + '.mp3', {\r\n      size: res.headers.get('content-length')\r\n    });\r\n    const readableStream = res.body;\r\n    // @ts-ignore\r\n    if (window.WritableStream && readableStream.pipeTo) {\r\n      // @ts-ignore\r\n      return readableStream.pipeTo(fileStream).then(() => {});\r\n    }\r\n    // @ts-ignore\r\n    window.writer = fileStream.getWriter();\r\n    // @ts-ignore\r\n    const reader = res.body.getReader();\r\n    // @ts-ignore\r\n    const pump = () =>\r\n      reader.read().then((res) =>\r\n        // @ts-ignore\r\n        res.done ? window.writer.close() : window.writer.write(res.value).then(pump)\r\n      );\r\n    pump();\r\n  });\r\n}\r\n","const getRandom = (start: number, end: number): number => {\r\n  return Math.floor(Math.random() * (end - start + 1)) + start;\r\n};\r\nexport { getRandom };\r\n","import jwt from 'jsonwebtoken';\r\nfunction verifyURL(url: string) {\r\n  const publicKey: string = `-----BEGIN PUBLIC KEY-----\r\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDVngqLlcT4xs9q18KCEWGaNYIa\r\nEMwSIus02VG3XVt8IGwT5Ws8Z1qCULz7jxERDKgSyfUM0EMOQ2KH/Z/ZhhZAld1r\r\nDCjxhiWLwXx5qYWJo9U862aYMQUjb3J5iqf2Wg+OuHPYkZ9oUvQl01kMRTkEkprf\r\nkNSJkagkgGMGph5OywIDAQAB\r\n-----END PUBLIC KEY-----`;\r\n  const result: any = jwt.verify(url, publicKey, {\r\n    algorithms: ['RS256']\r\n  });\r\n  if ((result && result.url) || (result && result.mp3Url)) {\r\n    return result.url || result.mp3Url;\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\nexport { verifyURL };\r\n","export function changePlayType(type: number) {\r\n  return {\r\n    type: 'changePlayType',\r\n    playType: type\r\n  };\r\n}\r\n","import styled from 'styled-components';\r\nexport const VipMvWrapper = styled.div`\r\n  .vip-mv {\r\n    display: flex;\r\n    align-items: center;\r\n    .vip,\r\n    .mv {\r\n      font-size: 12px;\r\n      padding: 0 4px 1px 4px;\r\n      border-radius: 4px;\r\n      line-height: 13px;\r\n      margin: 0 2px 0 0;\r\n      transform: scale(0.85);\r\n    }\r\n    .vip {\r\n      border: 2px solid #fa8153;\r\n      color: #fa8153;\r\n      font-weight: 600;\r\n    }\r\n    .mv {\r\n      border: 2px solid #ec4747;\r\n      color: #ec4747;\r\n      font-weight: bold;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","/*\r\n@Name guo'bin\r\n@Description gb-music\r\n@author guo'bin\r\n@date 2021/10/22\r\n*/\r\nimport React, { memo, ReactElement, FC, MouseEvent } from 'react';\r\nimport { VipMvWrapper } from './style';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\ninterface IProps extends RouteComponentProps {\r\n  isShowVip: boolean;\r\n  isShowMv: boolean;\r\n  onClick: () => void;\r\n}\r\nconst VipMv: FC<IProps> = (props): ReactElement => {\r\n  const { isShowMv, isShowVip, onClick } = props;\r\n  const videoClick = (e: MouseEvent<HTMLLIElement>) => {\r\n    e.stopPropagation();\r\n    onClick();\r\n  };\r\n  return (\r\n    <VipMvWrapper>\r\n      <ul className=\"vip-mv\">\r\n        {isShowVip && (\r\n          <li className=\"vip\" onClick={(e) => e.stopPropagation()}>\r\n            VIP\r\n          </li>\r\n        )}\r\n        {isShowMv && (\r\n          <li className=\"mv\" onClick={(e) => videoClick(e)}>\r\n            MV\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </VipMvWrapper>\r\n  );\r\n};\r\nexport default withRouter(memo(VipMv));\r\n","import styled from 'styled-components';\r\nexport const SongWrapper = styled.ul`\r\n  & > li {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px 20px;\r\n    &:nth-child(odd) {\r\n      background-color: #f9f9f9;\r\n    }\r\n    &:hover {\r\n      background-color: #f0f1f2;\r\n    }\r\n    .index {\r\n      color: #cfd2d9;\r\n      font-size: 13px;\r\n      padding: 0 15px 0 0;\r\n    }\r\n    .name {\r\n      width: 30%;\r\n      color: #0086b3;\r\n      display: flex;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      & > span {\r\n        font-size: 13px;\r\n        max-width: 155px;\r\n        display: inline-block;\r\n        margin: 0 5px 0 0;\r\n      }\r\n    }\r\n    .album-name,\r\n    .artist-name {\r\n      color: #656565;\r\n      font-size: 13px;\r\n      width: 20%;\r\n      cursor: pointer;\r\n    }\r\n    .dt {\r\n      color: #9b9b9b;\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n","import React, { memo, FC, ReactElement } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Map } from 'immutable';\r\nimport { SongWrapper } from './style';\r\nimport { ISong } from '../../../../../../constant/song';\r\nimport { formatTime } from '../../../../../../utils/format';\r\n\r\nimport { changeSongDetailAction } from '../../../../playCoin/store/actionCreators';\r\nimport { Empty } from 'antd';\r\nimport VipMv from '../../../../../common/vip-mv';\r\nimport { ISearchStore } from '../../../../../../constant/store/search';\r\n\r\nconst Song: FC<RouteComponentProps> = (props): ReactElement => {\r\n  const { song } = useSelector<Map<string, ISearchStore>, ISearchStore>((state) => {\r\n    return state.getIn(['searchReducer', 'searchResult']);\r\n  });\r\n  const dispatch = useDispatch();\r\n  const songPlay = (item: ISong, index: number): void => {\r\n    dispatch(changeSongDetailAction(item.id));\r\n  };\r\n  const artistRouter = (item: ISong, index: number) => {\r\n    props.history.push({\r\n      pathname: '/Home/artistDetail',\r\n      state: {\r\n        id: item.artist.id\r\n      }\r\n    });\r\n  };\r\n  const albumRouter = (item: ISong, index: number): void => {\r\n    props.history.push({\r\n      pathname: '/Home/albumDetail',\r\n      state: {\r\n        id: item.album.id\r\n      }\r\n    });\r\n  };\r\n  const videoRouter = (item: ISong) => {\r\n    props.history.push({\r\n      pathname: '/Home/videoDetail',\r\n      state: {\r\n        id: item.video.id\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <SongWrapper>\r\n      {song &&\r\n        song.length !== 0 &&\r\n        song.map((item: ISong, index: number) => {\r\n          return (\r\n            <li key={item.id}>\r\n              <div className=\"index\">{(index + 1).toString().padStart(2, '0')}</div>\r\n              <div className=\"name text-nowrap\" onClick={(e) => songPlay(item, index)}>\r\n                <span className=\"text-nowrap\">{item.name}</span>\r\n                <VipMv isShowVip={item.vip === 1} isShowMv={item.video} onClick={() => videoRouter(item)} />\r\n              </div>\r\n              <div className=\"artist-name\" onClick={(e) => artistRouter(item, index)}>\r\n                {item.artist.name}\r\n              </div>\r\n              <div className=\"album-name\" onClick={(e) => albumRouter(item, index)}>\r\n                {item.album.name}\r\n              </div>\r\n              <div className=\"dt\">{formatTime(item.duration!, 'mm:ss')}</div>\r\n            </li>\r\n          );\r\n        })}\r\n      {song && song.length === 0 && (\r\n        <div\r\n          style={{\r\n            height: '350px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'暂无歌曲'} />\r\n        </div>\r\n      )}\r\n    </SongWrapper>\r\n  );\r\n};\r\nexport default memo(Song);\r\n","/*\r\n@Name guobin\r\n@Description gb-music\r\n@author guobin\r\n@date 2021/9/21\r\n*/\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport { HOST_NAME } from '../config';\r\nimport store from '../store';\r\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\r\nimport { createBrowserHistory } from 'history';\r\nfunction request<T>(config: AxiosRequestConfig) {\r\n  const instance: AxiosInstance = axios.create({\r\n    baseURL: HOST_NAME,\r\n    timeout: 15000\r\n  });\r\n  instance.interceptors.request.use(\r\n    (config) => {\r\n      return config;\r\n    },\r\n    (err) => {\r\n      console.log(err);\r\n      return err;\r\n    }\r\n  );\r\n  instance.interceptors.response.use(\r\n    (res) => {\r\n      return res.data;\r\n    },\r\n    (err) => {\r\n      if (err.response) {\r\n        const { status, data } = err.response;\r\n        if (status * 1 === 403 && data.message === '请登录') {\r\n          // @ts-ignore\r\n          store.dispatch(logoutAction());\r\n          store.dispatch(\r\n            changeUserMsg({\r\n              token: '',\r\n              userName: '',\r\n              userId: '',\r\n              avatarUrl: '',\r\n              createTime: '',\r\n              updateTime: '',\r\n              manage: -1,\r\n              auth: -1\r\n            })\r\n          );\r\n          createBrowserHistory().push({\r\n            pathname: '/Login'\r\n          });\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n  );\r\n  return instance.request<any, T>(config);\r\n}\r\nexport default request;\r\n"],"sourceRoot":""}