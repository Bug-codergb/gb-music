{"version":3,"sources":["views/Login/store/actionCreators.tsx","network/user/index.ts","network/login/index.tsx","utils/format.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","network/message/index.ts","utils/holder.ts","components/content/msgItem/style.tsx","components/content/msgItem/index.tsx","network/playlist/index.ts","views/myMusic/childCpn/myPlaylist/style.tsx","views/myMusic/childCpn/myPlaylist/childCpn/createPlayList/style.tsx","views/myMusic/childCpn/myPlaylist/childCpn/createPlayList/index.tsx","views/myMusic/childCpn/myPlaylist/childCpn/userPlaylist/style.tsx","views/myMusic/childCpn/myPlaylist/childCpn/userPlaylist/index.tsx","views/myMusic/childCpn/myPlaylist/index.tsx","network/request.tsx"],"names":["changeUserMsg","res","type","userMsg","changeLoginType","loginType","changeUserDetailAction","dispatch","getUserDetail","then","data","love","follow","window","localStorage","setItem","JSON","stringify","userDetail","loginAction","userName","password","props","a","login","token","updateUserExpire","code","changeShow","auth","vip","history","push","pathname","console","log","message","warning","content","style","fontSize","marginTop","logoutAction","clear","userId","avatarUrl","createTime","updateTime","manage","subscriber","thumb","songId","setUserFavorite","id","request","url","method","headers","authorization","store","getState","getIn","getUserFavorite","offset","limit","params","cancelFavorite","getUserSub","uploadAvatar","formData","getOtherUserDetail","getUserChannel","getUserSubPlaylist","getUserMomentData","getUserAllMoment","getSimpleUserInfo","register","formatTime","dateS","fmt","date","Date","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","publishMessage","uri","getAllMsg","readMessage","ids","getVideoMsg","getCommentMsg","getAlbumMsg","getPlaylistMsg","getChannelMsg","deleteMsg","readSingleMsg","holder","count","line","s","i","Math","ceil","MsgItemWrapper","styled","div","widthProps","parseInt","scale","MsgItem","img","state","playCount","isShowPlayCount","itemWidth","dt","cover","onClick","userRouter","className","e","memo","createPlayList","name","desc","uploadPlayCover","pId","getUserPlaylist","getRecPlaylist","addSongToPlay","getPlaylistDetail","getAllCate","getCatePlaylist","cateId","getPlaylistSub","addPlayCount","getIncludePlaylist","getHotPlaylist","MyPlayList","CreatePlayListWrapper","CreatePlayList","cancelClick","useState","setName","setDesc","file","setFile","define","rows","cols","onInput","target","nameInp","descInp","onChange","files","selectFile","UserPlaylistWrapper","UserPlaylist","userPlaylist","setUserPlay","useSelector","useEffect","playlist","map","item","index","src","coverUrl","alt","playlistRouter","description","withRouter","MyPlaylist","isShow","setIsShow","keyId","setKeyId","f","FormData","append","config","instance","axios","create","baseURL","HOST_NAME","timeout","interceptors","use","err","response","status","createBrowserHistory"],"mappings":"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","file":"static/js/41.bedfb566.chunk.js","sourcesContent":["import { message } from 'antd';\r\nimport { login } from '../../../network/login';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { getUserDetail, updateUserExpire } from '../../../network/user';\r\nimport { changeShow } from '../../../components/common/toast/store/actionCreators';\r\nimport { ILoginUserAction } from './type';\r\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\r\n\r\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserMsg',\r\n    userMsg: res\r\n  };\r\n}\r\nfunction changeLoginType(res: number): ILoginUserAction {\r\n  return {\r\n    type: 'changeLoginType',\r\n    loginType: res\r\n  };\r\n}\r\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserDetail',\r\n    userDetail: res\r\n  };\r\n}\r\nfunction deleteUserDetail(): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserDetail',\r\n    userDetail: {\r\n      userId: '',\r\n      userName: '',\r\n      avatarUrl: '',\r\n      subscriber: [],\r\n      thumb: [],\r\n      follow: [{ userId: '' }],\r\n      love: [{ songId: '' }]\r\n    }\r\n  };\r\n}\r\nexport function changeUserDetailAction() {\r\n  return (dispatch: any) => {\r\n    getUserDetail().then((data: any) => {\r\n      const { love, follow } = data;\r\n      if (!love) {\r\n        data.love = [];\r\n      }\r\n      if (!follow) {\r\n        data.follow = [];\r\n      }\r\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\r\n      dispatch(changeUserDetail(data));\r\n    });\r\n  };\r\n}\r\n\r\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const data: any = await login(userName, password);\r\n      if (data) {\r\n        const { token } = data;\r\n        const res: any = await updateUserExpire(token);\r\n        if (res.code * 1 === 200) {\r\n          dispatch(changeShow('您的VIP已经过期，开通VIP后畅想', 3500));\r\n          data.auth = 0;\r\n          delete data.vip;\r\n        }\r\n        await dispatch(changeUserMsg(data));\r\n        await dispatch(changeLoginType(1));\r\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\r\n        window.localStorage.setItem('loginType', '1');\r\n        await dispatch(changeUserDetailAction());\r\n        props.history.push({\r\n          pathname: '/Home'\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      message.warning({\r\n        content: '用户名或者密码错误',\r\n        style: {\r\n          fontSize: '20px',\r\n          marginTop: '5vh'\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n//退出登录\r\nexport function logoutAction() {\r\n  return (dispatch: any) => {\r\n    window.localStorage.clear();\r\n    dispatch(changeLoginType(0));\r\n    dispatch(\r\n      changeUserMsg({\r\n        token: '',\r\n        userName: '',\r\n        userId: '',\r\n        avatarUrl: '',\r\n        createTime: '',\r\n        updateTime: '',\r\n        manage: -1,\r\n        auth: -1\r\n      })\r\n    );\r\n    dispatch(deleteUserDetail());\r\n  };\r\n}\r\n","import request from '../request';\r\nimport store from '../../store/index';\r\n//用户喜欢歌曲\r\nexport function setUserFavorite(id: string) {\r\n  return request({\r\n    url: '/user/favorite',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户喜欢歌曲\r\nexport function getUserFavorite(offset: number, limit: number) {\r\n  return request({\r\n    url: '/user/favorite',\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//取消用户喜欢\r\nexport function cancelFavorite(songId: string) {\r\n  return request({\r\n    url: '/user/favorite/cancel',\r\n    method: 'post',\r\n    data: {\r\n      songId: songId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户收藏\r\nexport function getUserSub(url: string, offset: number, limit: number) {\r\n  return request({\r\n    url: `/sub/user/${url}`,\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取当前登录用户详情\r\nexport function getUserDetail() {\r\n  return request({\r\n    url: '/user/detail',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//上传用户头像\r\nexport function uploadAvatar(formData: FormData) {\r\n  return request({\r\n    url: '/user/upload/avatar',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\r\n      'Content-Type': 'multipart/form-data'\r\n    },\r\n    data: formData\r\n  });\r\n}\r\n//获取其它用户详情\r\nexport function getOtherUserDetail<T>(userId: string) {\r\n  return request<T>({\r\n    url: '/user/other/detail',\r\n    method: 'post',\r\n    data: {\r\n      userId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n\r\n//获取用户创建的电台\r\nexport function getUserChannel(userId: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/user/channel',\r\n    method: 'post',\r\n    data: {\r\n      userId,\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n\r\n//获取用户收藏的歌单\r\nexport function getUserSubPlaylist<T>(userId: string, offset: number, limit: number) {\r\n  return request<T>({\r\n    url: '/sub/user/playlist',\r\n    method: 'post',\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    data: {\r\n      userId\r\n    }\r\n  });\r\n}\r\n//用户VIP是否·过期\r\nexport function updateUserExpire(token: string) {\r\n  return request({\r\n    url: '/user/expire',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: token\r\n    }\r\n  });\r\n}\r\n//获取用户动态数据\r\nexport function getUserMomentData() {\r\n  return request({\r\n    url: '/user/data/moment',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户全部动态\r\nexport function getUserAllMoment(offset: string, limit: string) {\r\n  return request({\r\n    url: '/user/moment',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户简略信息\r\nexport function getSimpleUserInfo<T>(userId: string) {\r\n  return request<T>({\r\n    url: '/user/simple',\r\n    params: {\r\n      userId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n","import request from '../request';\r\n//登录\r\nexport function login(userName: string, password: string) {\r\n  return request({\r\n    url: '/login',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n//注册\r\nexport function register(userName: string, password: string) {\r\n  return request({\r\n    url: '/register',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n","/*格式化时间*/\r\nexport function formatTime(dateS: number | string, fmt: string) {\r\n  let date: Date = new Date(dateS);\r\n  if (/(y+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n  }\r\n  let o = {\r\n    'M+': date.getMonth() + 1,\r\n    'd+': date.getDate(),\r\n    'h+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds()\r\n  };\r\n  for (let k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      // @ts-ignore\r\n      let str = o[k] + '';\r\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\r\n    }\r\n  }\r\n  return fmt || '';\r\n}\r\n\r\nfunction padLeftZero(str: string) {\r\n  return ('00' + str).substr(str.length);\r\n}\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import request from '../request';\r\nimport store from '../../store';\r\n//创建消息\r\nexport function publishMessage(uri: string, content: string, key: string, id: string) {\r\n  return request({\r\n    url: `/message/${uri}`,\r\n    method: 'post',\r\n    data: {\r\n      content,\r\n      [key]: id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//歌手发布专辑\r\nexport function publishAlbum(arId: string, content: string, alId: string) {\r\n  return request({\r\n    url: '/message/album',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    },\r\n    data: {\r\n      arId,\r\n      content,\r\n      alId\r\n    }\r\n  });\r\n}\r\n//获取所有通知\r\nexport function getAllMsg() {\r\n  return request({\r\n    url: '/message',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//一键已读\r\nexport function readMessage(ids: string[]) {\r\n  return request({\r\n    url: '/message/read',\r\n    method: 'post',\r\n    data: {\r\n      id: ids\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取所有视频通知\r\nexport function getVideoMsg(offset: string, limit: string) {\r\n  return request({\r\n    url: '/message/detail/video',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取所有评论通知\r\nexport function getCommentMsg(offset: string, limit: string) {\r\n  return request({\r\n    url: '/message/detail/comment',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取所有发布专辑通知\r\nexport function getAlbumMsg<T>(offset: string, limit: string) {\r\n  return request<T>({\r\n    url: '/message/detail/album',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取所有创建通知\r\nexport function getPlaylistMsg(offset: string, limit: string) {\r\n  return request({\r\n    url: '/message/detail/playlist',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取所有声音\r\nexport function getChannelMsg(offset: string, limit: string) {\r\n  return request({\r\n    url: '/message/detail/channel',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//删除消息通知\r\nexport function deleteMsg(id: string) {\r\n  return request({\r\n    url: '/message/delete',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//已读消息\r\nexport function readSingleMsg(id: string) {\r\n  return request({\r\n    url: '/message/read/single',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n","export function holder(count: number, line: number): number[] {\r\n  let s: number[] = [];\r\n  for (let i = 0; i < Math.ceil(count / line) * line - count; i++) {\r\n    s.push(i);\r\n  }\r\n  return s;\r\n}\r\n","import styled from 'styled-components';\r\n/*interface IProps{\r\n    widthProps:string\r\n}*/\r\nexport const MsgItemWrapper: any = styled.div`\r\n  position: relative;\r\n  width: ${(props) => (props as any).widthProps};\r\n  .img-container {\r\n    width: ${(props) => (props as any).widthProps};\r\n    height: ${(props) => parseInt((props as any).widthProps) * (props as any).scale + 'px'};\r\n    overflow: hidden;\r\n    border-radius: 3px;\r\n    background-color: #fff;\r\n    position: relative;\r\n    img {\r\n      width: 100%;\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n  .play-count {\r\n    position: absolute;\r\n    left: 100%;\r\n    top: 0;\r\n    color: #fff;\r\n    transform: translate(-110%, 10%);\r\n    white-space: nowrap;\r\n  }\r\n  .dt {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 100%;\r\n    color: #fff;\r\n    transform: translate(-110%, -110%);\r\n  }\r\n  .state {\r\n    margin: 10px 0 5px 0;\r\n    color: #373737;\r\n  }\r\n  .user-name {\r\n    color: #507daf;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { memo, FC, ReactElement } from 'react';\r\n//样式\r\nimport { MsgItemWrapper } from './style';\r\nimport { formatTime } from '../../../utils/format';\r\ninterface IProps {\r\n  img: ReactElement;\r\n  state: ReactElement;\r\n  playCount?: number;\r\n  isShowPlayCount: boolean;\r\n  itemWidth: string;\r\n  scale: number;\r\n  dt?: number;\r\n  userName?: string;\r\n  cover?: ReactElement;\r\n  onClick?: () => void;\r\n}\r\nconst MsgItem: FC<IProps> = ({\r\n  img,\r\n  state,\r\n  playCount,\r\n  isShowPlayCount,\r\n  itemWidth,\r\n  scale,\r\n  dt,\r\n  userName,\r\n  cover,\r\n  onClick\r\n}): ReactElement => {\r\n  const userRouter = () => {\r\n    if (onClick) {\r\n      onClick();\r\n    }\r\n  };\r\n  return (\r\n    <MsgItemWrapper widthProps={itemWidth} scale={scale}>\r\n      <div className=\"img-container\">\r\n        {cover}\r\n        {img}\r\n        {dt && <div className=\"dt\">{formatTime(dt, 'mm:ss')}</div>}\r\n      </div>\r\n      <div className=\"state text-nowrap\">{state}</div>\r\n      <div className=\"play-count\">\r\n        {isShowPlayCount && <i className=\"iconfont icon-play\"> </i>}\r\n        {playCount}\r\n      </div>\r\n      {userName && (\r\n        <div className=\"user-name\" onClick={(e) => userRouter()}>\r\n          {userName}\r\n        </div>\r\n      )}\r\n    </MsgItemWrapper>\r\n  );\r\n};\r\nexport default memo(MsgItem);\r\n","import request from '../request';\r\nimport store from '../../store/index';\r\n//创建歌单\r\nexport function createPlayList(name: string, desc: string) {\r\n  return request({\r\n    url: '/playlist',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    },\r\n    data: {\r\n      name,\r\n      desc\r\n    }\r\n  });\r\n}\r\n//上传歌单封面\r\nexport function uploadPlayCover(formData: FormData, pId: string) {\r\n  return request({\r\n    url: '/playlist/cover',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    },\r\n    params: {\r\n      pId\r\n    },\r\n    data: formData\r\n  });\r\n}\r\n//获取用户歌单\r\nexport function getUserPlaylist(userId: string, offset: number = 0, limit: number = 30) {\r\n  return request({\r\n    url: '/playlist/user',\r\n    params: {\r\n      userId,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//获取推荐歌单\r\nexport function getRecPlaylist<T>(offset: number = 0, limit: number = 30) {\r\n  return request<T>({\r\n    url: '/playlist/recommend',\r\n    params: {\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//为歌单添加歌曲\r\nexport function addSongToPlay(pId: string, songId: string) {\r\n  return request({\r\n    url: '/playlist/song',\r\n    method: 'post',\r\n    data: {\r\n      pId,\r\n      songId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取歌单详情\r\nexport function getPlaylistDetail<T>(pId: string) {\r\n  return request<T>({\r\n    url: '/playlist/detail',\r\n    params: {\r\n      id: pId\r\n    }\r\n  });\r\n}\r\n//获取所有歌单分类\r\nexport function getAllCate<T>(offset: number = 0, limit: number = 30) {\r\n  return request<T>({\r\n    url: '/playlist/cate',\r\n    params: {\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//获取分类下歌单\r\nexport function getCatePlaylist<T>(cateId: string, offset: number, limit: number) {\r\n  return request<T>({\r\n    url: '/playlist/cate/detail',\r\n    params: {\r\n      cateId,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//获取歌单收藏者\r\nexport function getPlaylistSub(id: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/playlist/sub/user',\r\n    params: {\r\n      id,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//为歌单添加播放量\r\nexport function addPlayCount(id: string) {\r\n  return request({\r\n    url: '/playlist/playCount/add',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//包含这首歌的歌单\r\nexport function getIncludePlaylist(id: string) {\r\n  return request({\r\n    url: '/playlist/song/include',\r\n    params: {\r\n      id\r\n    }\r\n  });\r\n}\r\n//获取热门歌单\r\nexport function getHotPlaylist() {\r\n  return request({\r\n    url: '/playlist/hot'\r\n  });\r\n}\r\n","import styled from 'styled-components';\r\nexport const MyPlayList = styled.div`\r\n  position: relative;\r\n  .create-playlist {\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #f27a7a;\r\n    padding: 8px 20px;\r\n    width: 180px;\r\n    color: #fff;\r\n    justify-content: space-between;\r\n    cursor: pointer;\r\n    border-radius: 25px;\r\n    span {\r\n      font-size: 14px;\r\n    }\r\n    i {\r\n      font-size: 20px;\r\n      margin: 0 0 0 20px;\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\nexport const CreatePlayListWrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 0;\n  transform: translate(-50%, 0);\n  z-index: 9999;\n  .create-my-playlist {\n    padding: 40px;\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\n    background-color: #fff;\n    border-radius: 5px;\n    color: #373737;\n    textarea {\n      border: 1px solid #f27a7a;\n      resize: none;\n      height: 35px;\n      border-radius: 4px;\n    }\n    .name,\n    .desc {\n      display: flex;\n      align-items: center;\n      margin: 0 0 15px 0;\n      span {\n        white-space: nowrap;\n        margin: 0 15px 0 0;\n      }\n    }\n    .desc{\n      &>textarea{\n        height: 100px;\n      }\n    }\n    .upload-cover {\n      margin: 10px 0 0 0;\n      width: 100%;\n      background-color: #fef4f4;\n      height: 120px;\n      position: relative;\n      line-height: 120px;\n      text-align: center;\n      input {\n        position: absolute;\n        opacity: 0;\n        width: 100%;\n        height: 100%;\n        display: block;\n      }\n      i {\n        font-size: 40px;\n        color: #f38b86;\n      }\n    }\n    .control-btn {\n      margin: 15px 0 0 0;\n      display: flex;\n      justify-content: flex-end;\n      button {\n        font-size: 13px;\n        background-color: #f38b86;\n        color: #fff;\n        padding: 5px 15px;\n        margin: 0 0 0 20px;\n        border-radius: 4px;\n        &:nth-child(2) {\n          background-color: rgba(0, 0, 0, 0.08);\n          color: #000;\n        }\n      }\n    }\n  }\n`;\n","import React, { memo, FC, ReactElement, useState, MouseEvent, ChangeEvent } from 'react';\nimport { CreatePlayListWrapper } from './style';\ninterface IProps {\n  onClick: Function;\n  cancelClick: Function;\n}\nconst CreatePlayList: FC<IProps> = ({ onClick, cancelClick }): ReactElement => {\n  const [name, setName] = useState<string>('');\n  const [desc, setDesc] = useState<string>('');\n  const [file, setFile] = useState<File>(null!);\n\n  const nameInp = (e: any): void => {\n    setName(e.target.value);\n  };\n  const descInp = (e: any): void => {\n    setDesc(e.target.value);\n  };\n  //确定\n  const define = (): void => {\n    onClick(name, desc, file);\n  };\n  const cancel = (): void => {\n    cancelClick();\n  };\n  //选择封面\n  const selectFile = (e: ChangeEvent<HTMLInputElement>): void => {\n    if (e.target.files) {\n      setFile(e.target.files[0]);\n    }\n  };\n  return (\n    <CreatePlayListWrapper>\n      <div className=\"create-my-playlist\">\n        <div className=\"name\">\n          <span>名称:</span>\n          <textarea rows={2} cols={40} value={name} onInput={(e: any) => nameInp(e)}>\n            {' '}\n          </textarea>\n        </div>\n        <div className=\"desc\">\n          <span>简介:</span>\n          <textarea rows={10} cols={40} value={desc} onInput={(e: any) => descInp(e)}>\n            {' '}\n          </textarea>\n        </div>\n        <div>添加封面</div>\n        <div className=\"upload-cover\">\n          <input\n            type=\"file\"\n            onChange={(e: ChangeEvent<HTMLInputElement>) => {\n              selectFile(e);\n            }}\n          />\n          <i className=\"iconfont icon-tupian\"> </i>\n        </div>\n        <div className=\"control-btn\">\n          <button onClick={(e: MouseEvent<HTMLButtonElement>) => define()}>确定</button>\n          <button onClick={(e: MouseEvent<HTMLButtonElement>) => cancel()}>取消</button>\n        </div>\n      </div>\n    </CreatePlayListWrapper>\n  );\n};\nexport default memo(CreatePlayList);\n","import styled from 'styled-components';\r\nexport const UserPlaylistWrapper = styled.div`\r\n  margin: 30px 0 0 0;\r\n  .play-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    li.play-list-item {\r\n      width: 150px;\r\n      margin: 0 0 20px 0;\r\n    }\r\n    li {\r\n      width: 150px;\r\n    }\r\n  }\r\n  .empty-tip {\r\n    padding: 100px 0;\r\n  }\r\n`;\r\n","//用户歌单\r\nimport React, { memo, FC, ReactElement, useEffect, useState } from 'react';\r\nimport { Empty } from 'antd';\r\nimport { Map } from 'immutable';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getUserPlaylist } from '../../../../../../network/playlist';\r\n\r\n//组件\r\nimport MsgItem from '../../../../../../components/content/msgItem';\r\n//样式\r\nimport { UserPlaylistWrapper } from './style';\r\nimport { holder } from '../../../../../../utils/holder';\r\nimport { ILogin, IUserMsg } from '../../../../../../constant/store/login';\r\n\r\ninterface IPlaylist {\r\n  id: string;\r\n  creatTime: string;\r\n  name: string;\r\n  playCount: number;\r\n  updateTime: string;\r\n  coverUrl: string;\r\n}\r\nconst UserPlaylist: FC<RouteComponentProps> = memo((props): ReactElement => {\r\n  const [userPlaylist, setUserPlay] = useState<IPlaylist[]>([]);\r\n  //redux-hook\r\n  const { userMsg } = useSelector<Map<string, ILogin>, { userMsg: IUserMsg }>((state) => ({\r\n    userMsg: state.getIn(['loginReducer', 'login', 'userMsg'])\r\n  }));\r\n  useEffect(() => {\r\n    getUserPlaylist(userMsg.userId, 0, 30).then((data: any) => {\r\n      if (data && data.playlist !== 0) {\r\n        setUserPlay(data.playlist);\r\n      }\r\n    });\r\n  }, [userMsg.userId]);\r\n  const playlistRouter = (item: IPlaylist, index: number) => {\r\n    props.history.push({\r\n      pathname: '/Home/playlistDetail',\r\n      state: {\r\n        id: item.id\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <UserPlaylistWrapper>\r\n      <ul className=\"play-list\">\r\n        {userPlaylist.length !== 0 &&\r\n          userPlaylist.map((item, index) => {\r\n            return (\r\n              <li key={item.id} className=\"play-list-item\">\r\n                <MsgItem\r\n                  img={<img src={item.coverUrl} alt=\"\" onClick={(e) => playlistRouter(item, index)} />}\r\n                  state={<span>{item.name}</span>}\r\n                  playCount={item.playCount}\r\n                  isShowPlayCount={true}\r\n                  itemWidth=\"150px\"\r\n                  scale={1}\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n        {userPlaylist &&\r\n          holder(userPlaylist.length, 7).map((item: number) => {\r\n            return <li key={item}> </li>;\r\n          })}\r\n      </ul>\r\n      {userPlaylist.length === 0 && (\r\n        <div className=\"empty-tip\">\r\n          <Empty description=\"暂无歌单\" />\r\n        </div>\r\n      )}\r\n    </UserPlaylistWrapper>\r\n  );\r\n});\r\nexport default withRouter(UserPlaylist);\r\n","import React, { memo, FC, ReactElement, useState, MouseEvent } from 'react';\r\nimport { MyPlayList } from './style';\r\nimport CreatePlayList from './childCpn/createPlayList/index';\r\nimport UserPlaylist from './childCpn/userPlaylist';\r\n//网络请求\r\nimport { createPlayList, uploadPlayCover } from '../../../../network/playlist';\r\nimport { publishMessage } from '../../../../network/message';\r\n\r\nconst MyPlaylist: FC = (): ReactElement => {\r\n  const [isShow, setIsShow] = useState<boolean>(false);\r\n  const [keyId, setKeyId] = useState<number>(0);\r\n  const define = (name: string, desc: string, file: File): void => {\r\n    createPlayList(name, desc).then((data: any) => {\r\n      const { id } = data;\r\n      let formData = new FormData();\r\n      formData.append('cover', file);\r\n      uploadPlayCover(formData, id).then((data) => {\r\n        setKeyId(keyId + 1);\r\n      });\r\n      publishMessage('/playlist', '创建了', 'pId', id);\r\n    });\r\n    setIsShow(false);\r\n  };\r\n  const cancel = (): void => {\r\n    setIsShow(false);\r\n  };\r\n  //创建歌单\r\n  const createPlaylist = () => {\r\n    setIsShow(true);\r\n  };\r\n  return (\r\n    <MyPlayList>\r\n      <div className=\"create-playlist\" onClick={(e: MouseEvent<HTMLSpanElement>) => createPlaylist()}>\r\n        <span>新建歌单</span>\r\n        <i className=\"iconfont icon-jia1\"> </i>\r\n      </div>\r\n      {isShow && (\r\n        <CreatePlayList\r\n          onClick={(name: string, desc: string, f: File) => define(name, desc, f)}\r\n          cancelClick={(e: MouseEvent) => cancel()}\r\n        />\r\n      )}\r\n      {/*用户歌单列表*/}\r\n      <UserPlaylist key={keyId} />\r\n    </MyPlayList>\r\n  );\r\n};\r\nexport default memo(MyPlaylist);\r\n","/*\r\n@Name guobin\r\n@Description gb-music\r\n@author guobin\r\n@date 2021/9/21\r\n*/\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport { HOST_NAME } from '../config';\r\nimport store from '../store';\r\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\r\nimport { createBrowserHistory } from 'history';\r\nfunction request<T>(config: AxiosRequestConfig) {\r\n  const instance: AxiosInstance = axios.create({\r\n    baseURL: HOST_NAME,\r\n    timeout: 15000\r\n  });\r\n  instance.interceptors.request.use(\r\n    (config) => {\r\n      return config;\r\n    },\r\n    (err) => {\r\n      console.log(err);\r\n      return err;\r\n    }\r\n  );\r\n  instance.interceptors.response.use(\r\n    (res) => {\r\n      return res.data;\r\n    },\r\n    (err) => {\r\n      if (err.response) {\r\n        const { status, data } = err.response;\r\n        if (status * 1 === 403 && data.message === '请登录') {\r\n          // @ts-ignore\r\n          store.dispatch(logoutAction());\r\n          store.dispatch(\r\n            changeUserMsg({\r\n              token: '',\r\n              userName: '',\r\n              userId: '',\r\n              avatarUrl: '',\r\n              createTime: '',\r\n              updateTime: '',\r\n              manage: -1,\r\n              auth: -1\r\n            })\r\n          );\r\n          createBrowserHistory().push({\r\n            pathname: '/Login'\r\n          });\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n  );\r\n  return instance.request<any, T>(config);\r\n}\r\nexport default request;\r\n"],"sourceRoot":""}