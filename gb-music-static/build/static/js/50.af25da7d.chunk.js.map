{"version":3,"sources":["views/Login/store/actionCreators.tsx","network/user/index.ts","network/login/index.tsx","network/channel/index.ts","views/manage/innovate/pages/radio/style.tsx","views/manage/innovate/pages/radio/index.tsx","network/request.tsx"],"names":["changeUserMsg","res","type","userMsg","changeLoginType","loginType","changeUserDetailAction","dispatch","getUserDetail","then","data","love","follow","window","localStorage","setItem","JSON","stringify","userDetail","loginAction","userName","password","props","a","login","token","updateUserExpire","code","changeShow","auth","vip","history","push","pathname","console","log","message","warning","content","style","fontSize","marginTop","logoutAction","clear","userId","avatarUrl","createTime","updateTime","manage","subscriber","thumb","songId","setUserFavorite","id","request","url","method","headers","authorization","store","getState","getIn","getUserFavorite","offset","limit","params","cancelFavorite","getUserSub","uploadAvatar","formData","getOtherUserDetail","getUserChannel","getUserSubPlaylist","getUserMomentData","getUserAllMoment","getSimpleUserInfo","register","getAllChannel","getContent","getChannelDetail","addContent","cId","name","description","uploadContentCover","getUserChannelCount","addProgram","addProgramSource","addProgramPlayCount","getHotChannel","getHotChannelContent","getProgramDetail","getProgramURL","getChannelSubUser","getUserChannelPlaylist","RadioWrapper","styled","div","memo","withRouter","useState","channel","setChannel","userChannel","setUserChannel","useSelector","state","useEffect","liClick","e","item","index","stopPropagation","className","length","map","backgroundImage","picUrl","onClick","filter","iten","it","count","config","instance","axios","create","baseURL","HOST_NAME","timeout","interceptors","use","err","response","status","createBrowserHistory"],"mappings":"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","file":"static/js/50.af25da7d.chunk.js","sourcesContent":["import { message } from 'antd';\nimport { login } from '../../../network/login';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getUserDetail, updateUserExpire } from '../../../network/user';\nimport { changeShow } from '../../../components/common/toast/store/actionCreators';\nimport { ILoginUserAction } from './type';\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\n\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\n  return {\n    type: 'changeUserMsg',\n    userMsg: res\n  };\n}\nfunction changeLoginType(res: number): ILoginUserAction {\n  return {\n    type: 'changeLoginType',\n    loginType: res\n  };\n}\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: res\n  };\n}\nfunction deleteUserDetail(): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: {\n      userId: '',\n      userName: '',\n      avatarUrl: '',\n      subscriber: [],\n      thumb: [],\n      follow: [{ userId: '' }],\n      love: [{ songId: '' }]\n    }\n  };\n}\nexport function changeUserDetailAction() {\n  return (dispatch: any) => {\n    getUserDetail().then((data: any) => {\n      const { love, follow } = data;\n      if (!love) {\n        data.love = [];\n      }\n      if (!follow) {\n        data.follow = [];\n      }\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\n      dispatch(changeUserDetail(data));\n    });\n  };\n}\n\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\n  return async (dispatch: any) => {\n    try {\n      const data: any = await login(userName, password);\n      if (data) {\n        const { token } = data;\n        const res: any = await updateUserExpire(token);\n        if (res.code * 1 === 200) {\n          dispatch(changeShow('您的VIP已经过期，开通VIP后畅想', 3500));\n          data.auth = 0;\n          delete data.vip;\n        }\n        await dispatch(changeUserMsg(data));\n        await dispatch(changeLoginType(1));\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\n        window.localStorage.setItem('loginType', '1');\n        await dispatch(changeUserDetailAction());\n        props.history.push({\n          pathname: '/Home'\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      message.warning({\n        content: '用户名或者密码错误',\n        style: {\n          fontSize: '20px',\n          marginTop: '5vh'\n        }\n      });\n    }\n  };\n}\n//退出登录\nexport function logoutAction() {\n  return (dispatch: any) => {\n    window.localStorage.clear();\n    dispatch(changeLoginType(0));\n    dispatch(\n      changeUserMsg({\n        token: '',\n        userName: '',\n        userId: '',\n        avatarUrl: '',\n        createTime: '',\n        updateTime: '',\n        manage: -1,\n        auth: -1\n      })\n    );\n    dispatch(deleteUserDetail());\n  };\n}\n","import request from '../request';\nimport store from '../../store/index';\n//用户喜欢歌曲\nexport function setUserFavorite(id: string) {\n  return request({\n    url: '/user/favorite',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户喜欢歌曲\nexport function getUserFavorite(offset: number, limit: number) {\n  return request({\n    url: '/user/favorite',\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//取消用户喜欢\nexport function cancelFavorite(songId: string) {\n  return request({\n    url: '/user/favorite/cancel',\n    method: 'post',\n    data: {\n      songId: songId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户收藏\nexport function getUserSub(url: string, offset: number, limit: number) {\n  return request({\n    url: `/sub/user/${url}`,\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取当前登录用户详情\nexport function getUserDetail() {\n  return request({\n    url: '/user/detail',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//上传用户头像\nexport function uploadAvatar(formData: FormData) {\n  return request({\n    url: '/user/upload/avatar',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  });\n}\n//获取其它用户详情\nexport function getOtherUserDetail<T>(userId: string) {\n  return request<T>({\n    url: '/user/other/detail',\n    method: 'post',\n    data: {\n      userId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户创建的电台\nexport function getUserChannel(userId: string, offset: number, limit: number) {\n  return request({\n    url: '/user/channel',\n    method: 'post',\n    data: {\n      userId,\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户收藏的歌单\nexport function getUserSubPlaylist<T>(userId: string, offset: number, limit: number) {\n  return request<T>({\n    url: '/sub/user/playlist',\n    method: 'post',\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      userId\n    }\n  });\n}\n//用户VIP是否·过期\nexport function updateUserExpire(token: string) {\n  return request({\n    url: '/user/expire',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: token\n    }\n  });\n}\n//获取用户动态数据\nexport function getUserMomentData() {\n  return request({\n    url: '/user/data/moment',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户全部动态\nexport function getUserAllMoment(offset: string, limit: string) {\n  return request({\n    url: '/user/moment',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户简略信息\nexport function getSimpleUserInfo<T>(userId: string) {\n  return request<T>({\n    url: '/user/simple',\n    params: {\n      userId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n","import request from '../request';\n//登录\nexport function login(userName: string, password: string) {\n  return request({\n    url: '/login',\n    method: 'post',\n    data: {\n      userName,\n      password\n    }\n  });\n}\n//注册\nexport function register(userName: string, password: string) {\n  return request({\n    url: '/register',\n    method: 'post',\n    data: {\n      userName,\n      password\n    }\n  });\n}\n","import request from '../request';\nimport store from '../../store';\n//获取所有频道\nexport function getAllChannel() {\n  return request({\n    url: '/channel/all'\n  });\n}\n//获取频道下内容\nexport function getContent(id: string, offset: number, limit: number) {\n  return request({\n    url: '/channel/content',\n    params: {\n      id,\n      offset,\n      limit\n    }\n  });\n}\n//获取频道详情\nexport function getChannelDetail(id: string, offset: number, limit: number) {\n  return request({\n    url: '/channel/detail',\n    params: {\n      id,\n      offset,\n      limit\n    }\n  });\n}\n//添加频道内容\nexport function addContent(cId: string, name: string, description: string) {\n  return request({\n    url: '/channel/content/add',\n    method: 'post',\n    data: {\n      cId,\n      name,\n      description\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//上传频道内容图片\nexport function uploadContentCover(formData: FormData) {\n  return request({\n    url: '/channel/content/upload',\n    data: formData,\n    method: 'post',\n    headers: {\n      'Content-type': 'multipart/form-data',\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户电台数据\nexport function getUserChannelCount(userId: string) {\n  return request({\n    url: '/channel/count',\n    params: {\n      userId\n    }\n  });\n}\n//获取用户电台\nexport function getUserChannel(userId: string, cId: string, offset: number, limit: number) {\n  return request({\n    url: '/channel/user',\n    params: {\n      userId,\n      cId,\n      offset,\n      limit\n    }\n  });\n}\n//添加节目\nexport function addProgram(name: string, cId: string) {\n  return request({\n    url: '/channel/program',\n    method: 'post',\n    data: {\n      name,\n      cId\n    },\n    headers: {\n      //@ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//上传节目\nexport function addProgramSource(id: string, formData: FormData) {\n  return request({\n    url: '/channel/program/source',\n    method: 'post',\n    params: {\n      id\n    },\n    data: formData,\n    headers: {\n      'Content-type': 'multipart/form-data',\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//为节目添加播放量\nexport function addProgramPlayCount(id: string) {\n  return request({\n    url: '/channel/playCount',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取热门电台\nexport function getHotChannel<T>() {\n  return request<T>({\n    url: '/channel/hot'\n  });\n}\n//获取热门电台内容(电台页)\nexport function getHotChannelContent() {\n  return request({\n    url: '/channel/content/hot'\n  });\n}\n\n//获取节目详情(播放)\nexport function getProgramDetail(id: string) {\n  return request({\n    url: '/channel/program/detail',\n    params: {\n      id\n    }\n  });\n}\n//获取节目URL\nexport function getProgramURL(id: string) {\n  return request({\n    url: '/channel/program/url',\n    params: {\n      id\n    }\n  });\n}\n//获取电台收藏者\nexport function getChannelSubUser(cId: string, offset: number, limit: number) {\n  return request({\n    url: '/channel/sub/user',\n    params: {\n      cId,\n      offset,\n      limit\n    }\n  });\n}\n//获取用户播单\nexport function getUserChannelPlaylist<T>() {\n  return request<T>({\n    url: '/channel/program/list',\n    method: 'post',\n    data: {},\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n","import styled from 'styled-components';\nexport const RadioWrapper = styled.div`\n  background-color: #fff;\n  padding: 20px;\n  .channel-list {\n    display: flex;\n    flex-wrap: wrap;\n    & > li {\n      width: 30%;\n      padding: 0 0 0 20px;\n      display: flex;\n      align-items: center;\n      border-right: 2px solid #f3f3f3;\n      border-bottom: 2px solid #f3f3f3;\n      margin: 0 0 15px 0;\n      .right-msg {\n        margin: 0 0 0 40px;\n        flex: 1;\n        height: 100%;\n        .msg {\n          color: #de5e5e;\n          display: flex;\n          align-items: center;\n          height: 100%;\n          cursor: pointer;\n        }\n      }\n    }\n    .img-container {\n      width: 65px;\n      height: 65px;\n      background-repeat: no-repeat;\n      background-size: 100px;\n      background-position: -45px 0;\n    }\n    .channel-name {\n      text-align: center;\n      width: 65px;\n      color: #db5e5e;\n      font-weight: bold;\n    }\n  }\n`;\n","import React, { memo, FC, ReactElement, useEffect, useState, MouseEvent } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Map } from 'immutable';\nimport { getAllChannel, getUserChannelCount } from '../../../../../network/channel';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { RadioWrapper } from './style';\nimport { ILogin, IUserMsg } from '../../../../../constant/store/login';\n\ninterface IUserChannel {\n  id: string;\n  name: string;\n  count: number;\n  channels: { id: string; name: string }[];\n}\nconst Radio: FC<RouteComponentProps> = (props): ReactElement => {\n  const [channel, setChannel] = useState<{ id: string; name: string; picUrl: string }[]>([]);\n  const [userChannel, setUserChannel] = useState<IUserChannel[]>([]);\n  const { userMsg } = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']);\n  });\n  useEffect(() => {\n    getAllChannel().then((data: any) => {\n      setChannel(data);\n    });\n  }, []);\n  useEffect(() => {\n    getUserChannelCount(userMsg.userId).then((data: any) => {\n      setUserChannel(data);\n    });\n  }, [userMsg.userId]);\n  const liClick = (\n    e: MouseEvent<HTMLDivElement> | MouseEvent<HTMLSpanElement>,\n    item: { id: string; name: string; count?: number },\n    index: number\n  ) => {\n    e.stopPropagation();\n    props.history.push({\n      pathname: '/innovate/innovateCon',\n      state: {\n        id: item.id\n      }\n    });\n  };\n  return (\n    <RadioWrapper>\n      <ul className=\"channel-list\">\n        {channel.length !== 0 &&\n          channel.map((item, index) => {\n            return (\n              <li key={item.id}>\n                <div>\n                  <div style={{ backgroundImage: `url(${item.picUrl})` }} className=\"img-container\"></div>\n                  <p className=\"channel-name\">{item.name}</p>\n                </div>\n                <div className=\"right-msg\" onClick={(e) => liClick(e, item, index)}>\n                  {userChannel\n                    .filter((iten, index) => {\n                      return iten.id === item.id;\n                    })\n                    .map((it, index) => {\n                      return (\n                        <span className=\"msg\" key={it.id} onClick={(e) => liClick(e, it, index)}>\n                          共有{it.count}个声音\n                        </span>\n                      );\n                    })}\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </RadioWrapper>\n  );\n};\nexport default memo(withRouter(Radio));\n","/*\n@Name guobin\n@Description gb-music\n@author guobin\n@date 2021/9/21\n*/\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { HOST_NAME } from '../config';\nimport store from '../store';\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\nimport { createBrowserHistory } from 'history';\nfunction request<T>(config: AxiosRequestConfig) {\n  const instance: AxiosInstance = axios.create({\n    baseURL: HOST_NAME,\n    timeout: 15000\n  });\n  instance.interceptors.request.use(\n    (config) => {\n      return config;\n    },\n    (err) => {\n      console.log(err);\n      return err;\n    }\n  );\n  instance.interceptors.response.use(\n    (res) => {\n      return res.data;\n    },\n    (err) => {\n      if (err.response) {\n        const { status, data } = err.response;\n        if (status * 1 === 403 && data.message === '请登录') {\n          // @ts-ignore\n          store.dispatch(logoutAction());\n          store.dispatch(\n            changeUserMsg({\n              token: '',\n              userName: '',\n              userId: '',\n              avatarUrl: '',\n              createTime: '',\n              updateTime: '',\n              manage: -1,\n              auth: -1\n            })\n          );\n          createBrowserHistory().push({\n            pathname: '/Login'\n          });\n        } else {\n          throw err;\n        }\n      }\n    }\n  );\n  return instance.request<any, T>(config);\n}\nexport default request;\n"],"sourceRoot":""}