{"version":3,"sources":["views/Login/store/actionCreators.tsx","network/user/index.ts","network/login/index.tsx","utils/format.ts","network/channel/index.ts","views/manage/innovate/pages/channelPlay/style.tsx","views/manage/innovate/pages/channelPlay/index.tsx","network/request.tsx"],"names":["changeUserMsg","res","type","userMsg","changeLoginType","loginType","changeUserDetailAction","dispatch","getUserDetail","then","data","love","follow","window","localStorage","setItem","JSON","stringify","userDetail","loginAction","userName","password","props","a","login","token","updateUserExpire","code","changeShow","auth","vip","history","push","pathname","console","log","message","warning","content","style","fontSize","marginTop","logoutAction","clear","userId","avatarUrl","createTime","updateTime","manage","subscriber","thumb","songId","setUserFavorite","id","request","url","method","headers","authorization","store","getState","getIn","getUserFavorite","offset","limit","params","cancelFavorite","getUserSub","uploadAvatar","formData","getOtherUserDetail","getUserChannel","getUserSubPlaylist","getUserMomentData","getUserAllMoment","getSimpleUserInfo","register","formatTime","dateS","fmt","date","Date","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","getAllChannel","getContent","getChannelDetail","addContent","cId","name","description","uploadContentCover","getUserChannelCount","addProgram","addProgramSource","addProgramPlayCount","getHotChannel","getHotChannelContent","getProgramDetail","getProgramURL","getChannelSubUser","getUserChannelPlaylist","ChannelPlayWrapper","styled","div","ChannelPlay","useState","channel","setChannel","useEffect","channelRouter","item","state","category","className","map","index","toString","padStart","onClick","e","src","coverUrl","alt","playCount","withRouter","memo","config","instance","axios","create","baseURL","HOST_NAME","timeout","interceptors","use","err","response","status","createBrowserHistory"],"mappings":"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","file":"static/js/49.8fa6f443.chunk.js","sourcesContent":["import { message } from 'antd';\nimport { login } from '../../../network/login';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getUserDetail, updateUserExpire } from '../../../network/user';\nimport { changeShow } from '../../../components/common/toast/store/actionCreators';\nimport { ILoginUserAction } from './type';\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\n\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\n  return {\n    type: 'changeUserMsg',\n    userMsg: res\n  };\n}\nfunction changeLoginType(res: number): ILoginUserAction {\n  return {\n    type: 'changeLoginType',\n    loginType: res\n  };\n}\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: res\n  };\n}\nfunction deleteUserDetail(): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: {\n      userId: '',\n      userName: '',\n      avatarUrl: '',\n      subscriber: [],\n      thumb: [],\n      follow: [{ userId: '' }],\n      love: [{ songId: '' }]\n    }\n  };\n}\nexport function changeUserDetailAction() {\n  return (dispatch: any) => {\n    getUserDetail().then((data: any) => {\n      const { love, follow } = data;\n      if (!love) {\n        data.love = [];\n      }\n      if (!follow) {\n        data.follow = [];\n      }\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\n      dispatch(changeUserDetail(data));\n    });\n  };\n}\n\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\n  return async (dispatch: any) => {\n    try {\n      const data: any = await login(userName, password);\n      if (data) {\n        const { token } = data;\n        const res: any = await updateUserExpire(token);\n        if (res.code * 1 === 200) {\n          dispatch(changeShow('您的VIP已经过期，开通VIP后畅想', 3500));\n          data.auth = 0;\n          delete data.vip;\n        }\n        await dispatch(changeUserMsg(data));\n        await dispatch(changeLoginType(1));\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\n        window.localStorage.setItem('loginType', '1');\n        await dispatch(changeUserDetailAction());\n        props.history.push({\n          pathname: '/Home'\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      message.warning({\n        content: '用户名或者密码错误',\n        style: {\n          fontSize: '20px',\n          marginTop: '5vh'\n        }\n      });\n    }\n  };\n}\n//退出登录\nexport function logoutAction() {\n  return (dispatch: any) => {\n    window.localStorage.clear();\n    dispatch(changeLoginType(0));\n    dispatch(\n      changeUserMsg({\n        token: '',\n        userName: '',\n        userId: '',\n        avatarUrl: '',\n        createTime: '',\n        updateTime: '',\n        manage: -1,\n        auth: -1\n      })\n    );\n    dispatch(deleteUserDetail());\n  };\n}\n","import request from '../request';\nimport store from '../../store/index';\n//用户喜欢歌曲\nexport function setUserFavorite(id: string) {\n  return request({\n    url: '/user/favorite',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户喜欢歌曲\nexport function getUserFavorite(offset: number, limit: number) {\n  return request({\n    url: '/user/favorite',\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//取消用户喜欢\nexport function cancelFavorite(songId: string) {\n  return request({\n    url: '/user/favorite/cancel',\n    method: 'post',\n    data: {\n      songId: songId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户收藏\nexport function getUserSub(url: string, offset: number, limit: number) {\n  return request({\n    url: `/sub/user/${url}`,\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取当前登录用户详情\nexport function getUserDetail() {\n  return request({\n    url: '/user/detail',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//上传用户头像\nexport function uploadAvatar(formData: FormData) {\n  return request({\n    url: '/user/upload/avatar',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  });\n}\n//获取其它用户详情\nexport function getOtherUserDetail<T>(userId: string) {\n  return request<T>({\n    url: '/user/other/detail',\n    method: 'post',\n    data: {\n      userId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户创建的电台\nexport function getUserChannel(userId: string, offset: number, limit: number) {\n  return request({\n    url: '/user/channel',\n    method: 'post',\n    data: {\n      userId,\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户收藏的歌单\nexport function getUserSubPlaylist<T>(userId: string, offset: number, limit: number) {\n  return request<T>({\n    url: '/sub/user/playlist',\n    method: 'post',\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      userId\n    }\n  });\n}\n//用户VIP是否·过期\nexport function updateUserExpire(token: string) {\n  return request({\n    url: '/user/expire',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: token\n    }\n  });\n}\n//获取用户动态数据\nexport function getUserMomentData() {\n  return request({\n    url: '/user/data/moment',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户全部动态\nexport function getUserAllMoment(offset: string, limit: string) {\n  return request({\n    url: '/user/moment',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户简略信息\nexport function getSimpleUserInfo<T>(userId: string) {\n  return request<T>({\n    url: '/user/simple',\n    params: {\n      userId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n","import request from '../request';\n//登录\nexport function login(userName: string, password: string) {\n  return request({\n    url: '/login',\n    method: 'post',\n    data: {\n      userName,\n      password\n    }\n  });\n}\n//注册\nexport function register(userName: string, password: string) {\n  return request({\n    url: '/register',\n    method: 'post',\n    data: {\n      userName,\n      password\n    }\n  });\n}\n","/*格式化时间*/\nexport function formatTime(dateS: number | string, fmt: string) {\n  let date: Date = new Date(dateS);\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n  }\n  let o = {\n    'M+': date.getMonth() + 1,\n    'd+': date.getDate(),\n    'h+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds()\n  };\n  for (let k in o) {\n    if (new RegExp(`(${k})`).test(fmt)) {\n      // @ts-ignore\n      let str = o[k] + '';\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\n    }\n  }\n  return fmt || '';\n}\n\nfunction padLeftZero(str: string) {\n  return ('00' + str).substr(str.length);\n}\n","import request from '../request';\nimport store from '../../store';\n//获取所有频道\nexport function getAllChannel() {\n  return request({\n    url: '/channel/all'\n  });\n}\n//获取频道下内容\nexport function getContent(id: string, offset: number, limit: number) {\n  return request({\n    url: '/channel/content',\n    params: {\n      id,\n      offset,\n      limit\n    }\n  });\n}\n//获取频道详情\nexport function getChannelDetail(id: string, offset: number, limit: number) {\n  return request({\n    url: '/channel/detail',\n    params: {\n      id,\n      offset,\n      limit\n    }\n  });\n}\n//添加频道内容\nexport function addContent(cId: string, name: string, description: string) {\n  return request({\n    url: '/channel/content/add',\n    method: 'post',\n    data: {\n      cId,\n      name,\n      description\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//上传频道内容图片\nexport function uploadContentCover(formData: FormData) {\n  return request({\n    url: '/channel/content/upload',\n    data: formData,\n    method: 'post',\n    headers: {\n      'Content-type': 'multipart/form-data',\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户电台数据\nexport function getUserChannelCount(userId: string) {\n  return request({\n    url: '/channel/count',\n    params: {\n      userId\n    }\n  });\n}\n//获取用户电台\nexport function getUserChannel(userId: string, cId: string, offset: number, limit: number) {\n  return request({\n    url: '/channel/user',\n    params: {\n      userId,\n      cId,\n      offset,\n      limit\n    }\n  });\n}\n//添加节目\nexport function addProgram(name: string, cId: string) {\n  return request({\n    url: '/channel/program',\n    method: 'post',\n    data: {\n      name,\n      cId\n    },\n    headers: {\n      //@ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//上传节目\nexport function addProgramSource(id: string, formData: FormData) {\n  return request({\n    url: '/channel/program/source',\n    method: 'post',\n    params: {\n      id\n    },\n    data: formData,\n    headers: {\n      'Content-type': 'multipart/form-data',\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//为节目添加播放量\nexport function addProgramPlayCount(id: string) {\n  return request({\n    url: '/channel/playCount',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取热门电台\nexport function getHotChannel<T>() {\n  return request<T>({\n    url: '/channel/hot'\n  });\n}\n//获取热门电台内容(电台页)\nexport function getHotChannelContent() {\n  return request({\n    url: '/channel/content/hot'\n  });\n}\n\n//获取节目详情(播放)\nexport function getProgramDetail(id: string) {\n  return request({\n    url: '/channel/program/detail',\n    params: {\n      id\n    }\n  });\n}\n//获取节目URL\nexport function getProgramURL(id: string) {\n  return request({\n    url: '/channel/program/url',\n    params: {\n      id\n    }\n  });\n}\n//获取电台收藏者\nexport function getChannelSubUser(cId: string, offset: number, limit: number) {\n  return request({\n    url: '/channel/sub/user',\n    params: {\n      cId,\n      offset,\n      limit\n    }\n  });\n}\n//获取用户播单\nexport function getUserChannelPlaylist<T>() {\n  return request<T>({\n    url: '/channel/program/list',\n    method: 'post',\n    data: {},\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n","import styled from 'styled-components';\nexport const ChannelPlayWrapper = styled.div`\n  background-color: #fff;\n  padding: 20px 20px 30px 20px;\n  .program-list {\n    & > li {\n      display: flex;\n      align-items: center;\n      padding: 10px 0 10px 10px;\n      &:nth-child(odd) {\n        background-color: #f9f9f9;\n      }\n      &:nth-child(1),\n      &:nth-child(2),\n      &:nth-child(3) {\n        .index {\n          background-color: #ff3a3a;\n        }\n      }\n      .index {\n        margin: 0 15px 0 0;\n        background-color: #cccccc;\n        padding: 5px 6px;\n        border-radius: 8px;\n        font-size: 13px;\n        color: #fff;\n        font-weight: bold;\n      }\n      .img-container {\n        width: 50px;\n        cursor: pointer;\n        img {\n          width: 100%;\n        }\n      }\n      .name {\n        margin: 0 0 0 20px;\n        font-size: 14px;\n        color: #656565;\n        width: 20%;\n        cursor: pointer;\n      }\n      .channel-name {\n        width: 15%;\n        color: #656565;\n      }\n      .cate {\n        width: 15%;\n        font-size: 13px;\n        color: #0086b3;\n      }\n      .create-time {\n        color: #ccc;\n        font-size: 13px;\n        width: 15%;\n      }\n      .play-count {\n        & > span {\n          color: #ccc;\n          margin: 0 0 0 5px;\n        }\n        i {\n          color: #ccc;\n        }\n      }\n    }\n  }\n  .empty {\n    padding: 180px 0;\n  }\n`;\n","import React, { memo, FC, ReactElement, useEffect, useState } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { getUserChannelPlaylist } from '../../../../../network/channel';\nimport { ChannelPlayWrapper } from './style';\nimport { IChannel } from '../../../../../constant/channel';\nimport { formatTime } from '../../../../../utils/format';\nimport { Empty } from 'antd';\n\ninterface IChannelPlaylist {\n  id: string;\n  name: string;\n  playCount: string;\n  createTime: string;\n  dt: string;\n  category: IChannel;\n}\nconst ChannelPlay: FC<RouteComponentProps> = (props): ReactElement => {\n  const [channel, setChannel] = useState<IChannelPlaylist[]>([]);\n  useEffect(() => {\n    getUserChannelPlaylist<IChannelPlaylist[]>().then((data) => {\n      setChannel(data);\n    });\n  }, []);\n  const channelRouter = (item: IChannelPlaylist) => {\n    props.history.push({\n      pathname: '/Home/channelDetail',\n      state: {\n        id: item.category.id\n      }\n    });\n  };\n  return (\n    <ChannelPlayWrapper>\n      <ul className=\"program-list\">\n        {channel &&\n          channel.length !== 0 &&\n          channel.map((item, index) => {\n            return (\n              <li key={item.id}>\n                <div className=\"index\">{(index + 1).toString().padStart(2, '0')}</div>\n                <div className=\"img-container\" onClick={(e) => channelRouter(item)}>\n                  <img src={item.category.coverUrl} alt={item.category.name} />\n                </div>\n                <div className=\"name text-nowrap\" onClick={(e) => channelRouter(item)}>\n                  {item.name}\n                </div>\n                <div className=\"channel-name\">{item.category.name}</div>\n                <div className=\"cate\">{item.category.channel?.name}</div>\n                <div className=\"create-time\">{formatTime(item.createTime, 'yyyy-MM-dd hh:mm')}</div>\n                <div className=\"play-count\">\n                  <i className=\"iconfont icon-play2\"> </i>\n                  <span>{item.playCount}</span>\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n      {channel && channel.length < 1 && (\n        <div className=\"empty\">\n          <Empty description={'暂无声音'} />\n        </div>\n      )}\n    </ChannelPlayWrapper>\n  );\n};\nexport default withRouter(memo(ChannelPlay));\n","/*\n@Name guobin\n@Description gb-music\n@author guobin\n@date 2021/9/21\n*/\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { HOST_NAME } from '../config';\nimport store from '../store';\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\nimport { createBrowserHistory } from 'history';\nfunction request<T>(config: AxiosRequestConfig) {\n  const instance: AxiosInstance = axios.create({\n    baseURL: HOST_NAME,\n    timeout: 15000\n  });\n  instance.interceptors.request.use(\n    (config) => {\n      return config;\n    },\n    (err) => {\n      console.log(err);\n      return err;\n    }\n  );\n  instance.interceptors.response.use(\n    (res) => {\n      return res.data;\n    },\n    (err) => {\n      if (err.response) {\n        const { status, data } = err.response;\n        if (status * 1 === 403 && data.message === '请登录') {\n          // @ts-ignore\n          store.dispatch(logoutAction());\n          store.dispatch(\n            changeUserMsg({\n              token: '',\n              userName: '',\n              userId: '',\n              avatarUrl: '',\n              createTime: '',\n              updateTime: '',\n              manage: -1,\n              auth: -1\n            })\n          );\n          createBrowserHistory().push({\n            pathname: '/Login'\n          });\n        } else {\n          throw err;\n        }\n      }\n    }\n  );\n  return instance.request<any, T>(config);\n}\nexport default request;\n"],"sourceRoot":""}