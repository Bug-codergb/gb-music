{"version":3,"sources":["views/Login/store/actionCreators.tsx","network/user/index.ts","network/login/index.tsx","utils/format.ts","network/channel/index.ts","utils/videoUtils.ts","components/common/upload/style.tsx","components/common/upload/index.tsx","components/content/detail/manage/innovate/innovateCon/style.tsx","components/content/detail/manage/innovate/innovateCon/childCpn/upload/style.tsx","components/content/detail/manage/innovate/innovateCon/childCpn/upload/index.tsx","components/content/detail/manage/innovate/innovateCon/index.tsx","network/request.tsx"],"names":["changeUserMsg","res","type","userMsg","changeLoginType","loginType","changeUserDetailAction","dispatch","getUserDetail","then","data","love","follow","window","localStorage","setItem","JSON","stringify","userDetail","loginAction","userName","password","props","a","login","token","updateUserExpire","code","changeShow","auth","vip","history","push","pathname","console","log","message","warning","content","style","fontSize","marginTop","logoutAction","clear","userId","avatarUrl","createTime","updateTime","manage","subscriber","thumb","songId","setUserFavorite","id","request","url","method","headers","authorization","store","getState","getIn","getUserFavorite","offset","limit","params","cancelFavorite","getUserSub","uploadAvatar","formData","getOtherUserDetail","getUserChannel","getUserSubPlaylist","getUserMomentData","getUserAllMoment","getSimpleUserInfo","register","formatTime","dateS","fmt","date","Date","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","getAllChannel","getContent","getChannelDetail","addContent","cId","name","description","uploadContentCover","getUserChannelCount","addProgram","addProgramSource","addProgramPlayCount","getHotChannel","getHotChannelContent","getProgramDetail","getProgramURL","getChannelSubUser","getUserChannelPlaylist","getVideoBase64","Promise","resolve","reject","canvas","document","createElement","ctx","getContext","video","setAttribute","src","currentTime","oncanplay","height","videoHeight","width","videoWidth","drawImage","dataUrl","toDataURL","getVideoDuration","file","URL","createObjectURL","oVideo","duration","getAudioDuration","audio","UploadCpnWrapper","styled","div","UploadCpn","names","defineBtn","cancelBtn","isShowImgPrev","isShowVioPrev","isShowChannelPrev","useState","isPrevImg","setIsPrevImg","isPrevVio","setIsPrevVio","imgURL","setImgURL","vioURL","setVioURL","dt","setDt","img","setImg","vio","setVio","channel","setChannel","map","item","index","className","cols","rows","onChange","e","fn","title","currentTarget","files","imgChange","alt","vioChange","channelChange","onClick","memo","InnovateConWrapper","UploadWrapper","Upload","setName","desc","setDesc","useDispatch","value","nameChange","descChange","isShowP","defined","canceled","trim","FormData","append","define","InnovateCon","location","state","program","setProgram","isShow","setIsShow","useSelector","useEffect","innovateRouter","toString","padStart","coverUrl","config","instance","axios","create","baseURL","HOST_NAME","timeout","interceptors","use","err","response","status","createBrowserHistory"],"mappings":"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","file":"static/js/45.800fe9ff.chunk.js","sourcesContent":["import { message } from 'antd';\r\nimport { login } from '../../../network/login';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { getUserDetail, updateUserExpire } from '../../../network/user';\r\nimport { changeShow } from '../../../components/common/toast/store/actionCreators';\r\nimport { ILoginUserAction } from './type';\r\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\r\n\r\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserMsg',\r\n    userMsg: res\r\n  };\r\n}\r\nfunction changeLoginType(res: number): ILoginUserAction {\r\n  return {\r\n    type: 'changeLoginType',\r\n    loginType: res\r\n  };\r\n}\r\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserDetail',\r\n    userDetail: res\r\n  };\r\n}\r\nfunction deleteUserDetail(): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserDetail',\r\n    userDetail: {\r\n      userId: '',\r\n      userName: '',\r\n      avatarUrl: '',\r\n      subscriber: [],\r\n      thumb: [],\r\n      follow: [{ userId: '' }],\r\n      love: [{ songId: '' }]\r\n    }\r\n  };\r\n}\r\nexport function changeUserDetailAction() {\r\n  return (dispatch: any) => {\r\n    getUserDetail().then((data: any) => {\r\n      const { love, follow } = data;\r\n      if (!love) {\r\n        data.love = [];\r\n      }\r\n      if (!follow) {\r\n        data.follow = [];\r\n      }\r\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\r\n      dispatch(changeUserDetail(data));\r\n    });\r\n  };\r\n}\r\n\r\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const data: any = await login(userName, password);\r\n      if (data) {\r\n        const { token } = data;\r\n        const res: any = await updateUserExpire(token);\r\n        if (res.code * 1 === 200) {\r\n          dispatch(changeShow('您的VIP已经过期，开通VIP后畅想', 3500));\r\n          data.auth = 0;\r\n          delete data.vip;\r\n        }\r\n        await dispatch(changeUserMsg(data));\r\n        await dispatch(changeLoginType(1));\r\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\r\n        window.localStorage.setItem('loginType', '1');\r\n        await dispatch(changeUserDetailAction());\r\n        props.history.push({\r\n          pathname: '/Home'\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      message.warning({\r\n        content: '用户名或者密码错误',\r\n        style: {\r\n          fontSize: '20px',\r\n          marginTop: '5vh'\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n//退出登录\r\nexport function logoutAction() {\r\n  return (dispatch: any) => {\r\n    window.localStorage.clear();\r\n    dispatch(changeLoginType(0));\r\n    dispatch(\r\n      changeUserMsg({\r\n        token: '',\r\n        userName: '',\r\n        userId: '',\r\n        avatarUrl: '',\r\n        createTime: '',\r\n        updateTime: '',\r\n        manage: -1,\r\n        auth: -1\r\n      })\r\n    );\r\n    dispatch(deleteUserDetail());\r\n  };\r\n}\r\n","import request from '../request';\r\nimport store from '../../store/index';\r\n//用户喜欢歌曲\r\nexport function setUserFavorite(id: string) {\r\n  return request({\r\n    url: '/user/favorite',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户喜欢歌曲\r\nexport function getUserFavorite(offset: number, limit: number) {\r\n  return request({\r\n    url: '/user/favorite',\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//取消用户喜欢\r\nexport function cancelFavorite(songId: string) {\r\n  return request({\r\n    url: '/user/favorite/cancel',\r\n    method: 'post',\r\n    data: {\r\n      songId: songId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户收藏\r\nexport function getUserSub(url: string, offset: number, limit: number) {\r\n  return request({\r\n    url: `/sub/user/${url}`,\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取当前登录用户详情\r\nexport function getUserDetail() {\r\n  return request({\r\n    url: '/user/detail',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//上传用户头像\r\nexport function uploadAvatar(formData: FormData) {\r\n  return request({\r\n    url: '/user/upload/avatar',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\r\n      'Content-Type': 'multipart/form-data'\r\n    },\r\n    data: formData\r\n  });\r\n}\r\n//获取其它用户详情\r\nexport function getOtherUserDetail<T>(userId: string) {\r\n  return request<T>({\r\n    url: '/user/other/detail',\r\n    method: 'post',\r\n    data: {\r\n      userId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n\r\n//获取用户创建的电台\r\nexport function getUserChannel(userId: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/user/channel',\r\n    method: 'post',\r\n    data: {\r\n      userId,\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n\r\n//获取用户收藏的歌单\r\nexport function getUserSubPlaylist<T>(userId: string, offset: number, limit: number) {\r\n  return request<T>({\r\n    url: '/sub/user/playlist',\r\n    method: 'post',\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    data: {\r\n      userId\r\n    }\r\n  });\r\n}\r\n//用户VIP是否·过期\r\nexport function updateUserExpire(token: string) {\r\n  return request({\r\n    url: '/user/expire',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: token\r\n    }\r\n  });\r\n}\r\n//获取用户动态数据\r\nexport function getUserMomentData() {\r\n  return request({\r\n    url: '/user/data/moment',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户全部动态\r\nexport function getUserAllMoment(offset: string, limit: string) {\r\n  return request({\r\n    url: '/user/moment',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户简略信息\r\nexport function getSimpleUserInfo<T>(userId: string) {\r\n  return request<T>({\r\n    url: '/user/simple',\r\n    params: {\r\n      userId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n","import request from '../request';\r\n//登录\r\nexport function login(userName: string, password: string) {\r\n  return request({\r\n    url: '/login',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n//注册\r\nexport function register(userName: string, password: string) {\r\n  return request({\r\n    url: '/register',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n","/*格式化时间*/\r\nexport function formatTime(dateS: number | string, fmt: string) {\r\n  let date: Date = new Date(dateS);\r\n  if (/(y+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n  }\r\n  let o = {\r\n    'M+': date.getMonth() + 1,\r\n    'd+': date.getDate(),\r\n    'h+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds()\r\n  };\r\n  for (let k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      // @ts-ignore\r\n      let str = o[k] + '';\r\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\r\n    }\r\n  }\r\n  return fmt || '';\r\n}\r\n\r\nfunction padLeftZero(str: string) {\r\n  return ('00' + str).substr(str.length);\r\n}\r\n","import request from '../request';\r\nimport store from '../../store';\r\n//获取所有频道\r\nexport function getAllChannel() {\r\n  return request({\r\n    url: '/channel/all'\r\n  });\r\n}\r\n//获取频道下内容\r\nexport function getContent(id: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/channel/content',\r\n    params: {\r\n      id,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//获取频道详情\r\nexport function getChannelDetail(id: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/channel/detail',\r\n    params: {\r\n      id,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//添加频道内容\r\nexport function addContent(cId: string, name: string, description: string) {\r\n  return request({\r\n    url: '/channel/content/add',\r\n    method: 'post',\r\n    data: {\r\n      cId,\r\n      name,\r\n      description\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//上传频道内容图片\r\nexport function uploadContentCover(formData: FormData) {\r\n  return request({\r\n    url: '/channel/content/upload',\r\n    data: formData,\r\n    method: 'post',\r\n    headers: {\r\n      'Content-type': 'multipart/form-data',\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户电台数据\r\nexport function getUserChannelCount(userId: string) {\r\n  return request({\r\n    url: '/channel/count',\r\n    params: {\r\n      userId\r\n    }\r\n  });\r\n}\r\n//获取用户电台\r\nexport function getUserChannel(userId: string, cId: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/channel/user',\r\n    params: {\r\n      userId,\r\n      cId,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//添加节目\r\nexport function addProgram(name: string, cId: string) {\r\n  return request({\r\n    url: '/channel/program',\r\n    method: 'post',\r\n    data: {\r\n      name,\r\n      cId\r\n    },\r\n    headers: {\r\n      //@ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//上传节目\r\nexport function addProgramSource(id: string, formData: FormData) {\r\n  return request({\r\n    url: '/channel/program/source',\r\n    method: 'post',\r\n    params: {\r\n      id\r\n    },\r\n    data: formData,\r\n    headers: {\r\n      'Content-type': 'multipart/form-data',\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//为节目添加播放量\r\nexport function addProgramPlayCount(id: string) {\r\n  return request({\r\n    url: '/channel/playCount',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取热门电台\r\nexport function getHotChannel<T>() {\r\n  return request<T>({\r\n    url: '/channel/hot'\r\n  });\r\n}\r\n//获取热门电台内容(电台页)\r\nexport function getHotChannelContent() {\r\n  return request({\r\n    url: '/channel/content/hot'\r\n  });\r\n}\r\n\r\n//获取节目详情(播放)\r\nexport function getProgramDetail(id: string) {\r\n  return request({\r\n    url: '/channel/program/detail',\r\n    params: {\r\n      id\r\n    }\r\n  });\r\n}\r\n//获取节目URL\r\nexport function getProgramURL(id: string) {\r\n  return request({\r\n    url: '/channel/program/url',\r\n    params: {\r\n      id\r\n    }\r\n  });\r\n}\r\n//获取电台收藏者\r\nexport function getChannelSubUser(cId: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/channel/sub/user',\r\n    params: {\r\n      cId,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//获取用户播单\r\nexport function getUserChannelPlaylist<T>() {\r\n  return request<T>({\r\n    url: '/channel/program/list',\r\n    method: 'post',\r\n    data: {},\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n","export function getVideoBase64(url: string) {\r\n  return new Promise((resolve, reject) => {\r\n    const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n    const ctx: CanvasRenderingContext2D = canvas.getContext('2d')!;\r\n    const video: HTMLVideoElement = document.createElement('video');\r\n    video.setAttribute('controls', 'controls');\r\n    video.src = url;\r\n    video.currentTime = 1;\r\n    video.oncanplay = function () {\r\n      //console.log(video.videoHeight,video.videoWidth)\r\n      canvas.height = video.videoHeight;\r\n      canvas.width = video.videoWidth;\r\n      ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\r\n      let dataUrl: string = canvas.toDataURL('image/png');\r\n      resolve(dataUrl);\r\n    };\r\n  });\r\n}\r\n\r\nexport function getVideoDuration(file: File) {\r\n  let url: string = URL.createObjectURL(file);\r\n  let oVideo: HTMLVideoElement = document.createElement('video');\r\n  oVideo.setAttribute('src', url);\r\n  return new Promise((resolve, reject) => {\r\n    oVideo.oncanplay = () => {\r\n      resolve(oVideo.duration * 1000);\r\n    };\r\n  });\r\n}\r\nexport function getAudioDuration(file: File) {\r\n  let url: string = URL.createObjectURL(file);\r\n  let audio: HTMLAudioElement = document.createElement('audio');\r\n  audio.setAttribute('src', url);\r\n  return new Promise((resolve, reject) => {\r\n    audio.oncanplay = () => {\r\n      resolve(audio.duration * 1000);\r\n    };\r\n  });\r\n}\r\n","import styled from 'styled-components';\r\nexport const UploadCpnWrapper = styled.div`\r\n  background-color: #fff;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\r\n  padding: 40px 50px;\r\n  border-radius: 8px;\r\n  .name {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    margin: 0 0 20px 0;\r\n    span {\r\n      margin: 0 5px 0 0;\r\n      white-space: nowrap;\r\n    }\r\n    textarea {\r\n      resize: none;\r\n      border: 1px solid #dbd9d2;\r\n    }\r\n  }\r\n  .prev-outer {\r\n    display: flex;\r\n    background-color: #f2f2f2;\r\n    height: 100px;\r\n    margin: 0 0 20px 0;\r\n    .prev-img {\r\n      flex: 1;\r\n      height: 100%;\r\n      border-right: 1px dotted #cccac1;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      i {\r\n        font-size: 38px;\r\n        color: #f27a7a;\r\n      }\r\n    }\r\n    .prev-vio {\r\n      flex: 1;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      i {\r\n        font-size: 40px;\r\n        color: #ec4141;\r\n      }\r\n    }\r\n    .prev-channel {\r\n      flex: 1;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n    .prev-vio,\r\n    .prev-img,\r\n    .prev-channel {\r\n      position: relative;\r\n      input {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n      }\r\n      img {\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n  .control-btn {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    button {\r\n      font-size: 13px;\r\n      padding: 5px 15px;\r\n      margin: 0 0 0 30px;\r\n      border-radius: 3px;\r\n      &:nth-child(1) {\r\n        background-color: #f27a7a;\r\n        color: #fff;\r\n      }\r\n      &:nth-child(2) {\r\n        background-color: #efefef;\r\n        color: #000000;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { memo, FC, ReactElement, ChangeEvent, useState } from 'react';\r\nimport { UploadCpnWrapper } from './style';\r\nimport { getVideoBase64, getVideoDuration } from '../../../utils/videoUtils';\r\ninterface IProps {\r\n  names: {\r\n    name: string;\r\n    cols: number;\r\n    rows: number;\r\n    fn: (e: ChangeEvent<HTMLTextAreaElement>) => void;\r\n  }[];\r\n  defineBtn: (img?: File, vio?: File, dt?: number, channel?: File) => void;\r\n  cancelBtn: () => void;\r\n  isShowImgPrev: boolean;\r\n  isShowVioPrev: boolean;\r\n  isShowChannelPrev?: boolean;\r\n}\r\nconst UploadCpn: FC<IProps> = (props): ReactElement => {\r\n  const { names, defineBtn, cancelBtn, isShowImgPrev, isShowVioPrev, isShowChannelPrev } = props;\r\n  const [isPrevImg, setIsPrevImg] = useState<boolean>(false);\r\n  const [isPrevVio, setIsPrevVio] = useState<boolean>(false);\r\n  const [imgURL, setImgURL] = useState<string>('');\r\n  const [vioURL, setVioURL] = useState<string>('');\r\n\r\n  const [dt, setDt] = useState<number>(0);\r\n  const [img, setImg] = useState<File>();\r\n  const [vio, setVio] = useState<File>();\r\n  const [channel, setChannel] = useState<File>();\r\n\r\n  const define = () => {\r\n    defineBtn(img, vio, dt, channel);\r\n  };\r\n  const cancel = () => {\r\n    cancelBtn();\r\n  };\r\n  const imgChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.files) {\r\n      const file = e.currentTarget.files[0];\r\n      setImg(file);\r\n      const url: string = URL.createObjectURL(file);\r\n      setImgURL(url);\r\n      setIsPrevImg(true);\r\n    }\r\n  };\r\n  const vioChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.files) {\r\n      const file = e.currentTarget.files[0];\r\n      const url: string = URL.createObjectURL(file);\r\n      setVio(file);\r\n      getVideoBase64(url).then((data: any) => {\r\n        getVideoDuration(file).then((data: any) => {\r\n          setDt(data);\r\n        });\r\n        setVioURL(data);\r\n        setIsPrevVio(true);\r\n      });\r\n    }\r\n  };\r\n  //上传声音\r\n  const channelChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.files) {\r\n      const file = e.currentTarget.files[0];\r\n      setChannel(file);\r\n    }\r\n  };\r\n  return (\r\n    <UploadCpnWrapper>\r\n      {names.length !== 0 &&\r\n        names.map((item, index) => {\r\n          return (\r\n            <div className=\"name\">\r\n              <span>{item.name}:</span>\r\n              <textarea cols={item.cols} rows={item.rows} onChange={(e) => item.fn(e)}>\r\n                {' '}\r\n              </textarea>\r\n            </div>\r\n          );\r\n        })}\r\n      <div className=\"prev-outer\">\r\n        {isShowImgPrev && (\r\n          <div className=\"prev-img\">\r\n            {!isPrevImg && <input type=\"file\" title=\"请上传封面\" onChange={(e) => imgChange(e)} />}\r\n            {!isPrevImg && <i className=\"iconfont icon-tupian\"> </i>}\r\n            {isPrevImg && <img src={imgURL} alt=\"封面\" />}\r\n          </div>\r\n        )}\r\n        {isShowVioPrev && (\r\n          <div className=\"prev-vio\">\r\n            {!isPrevVio && <input type=\"file\" title=\"请上传视频\" onChange={(e) => vioChange(e)} />}\r\n            {!isPrevVio && <i className=\"iconfont icon-video\"> </i>}\r\n            {isPrevVio && <img src={vioURL} alt=\"视频\" />}\r\n          </div>\r\n        )}\r\n        {isShowChannelPrev && (\r\n          <div className=\"prev-channel\" title=\"请选择声音\">\r\n            {<input type=\"file\" onChange={(e) => channelChange(e)} />}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"control-btn\">\r\n        <button onClick={(e) => define()}>确定</button>\r\n        <button onClick={(e) => cancel()}>取消</button>\r\n      </div>\r\n    </UploadCpnWrapper>\r\n  );\r\n};\r\nexport default memo(UploadCpn);\r\n","import styled from 'styled-components';\r\nexport const InnovateConWrapper = styled.div`\r\n  .control-btn {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    & > button {\r\n      background-color: #ec4141;\r\n      color: #fff;\r\n      padding: 4px 15px;\r\n      display: flex;\r\n      align-items: center;\r\n      border-radius: 18px;\r\n      cursor: pointer;\r\n      & > span {\r\n        font-size: 13px;\r\n        margin: 0 0 0 10px;\r\n      }\r\n      & > i {\r\n        font-size: 18px;\r\n      }\r\n    }\r\n  }\r\n  .program-list {\r\n    & > li {\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 10px 0;\r\n      &:nth-child(odd) {\r\n        background-color: #f9f9f9;\r\n      }\r\n      &:nth-child(even) {\r\n        background-color: #fff;\r\n      }\r\n      &:hover {\r\n        background-color: #f0f1f2;\r\n      }\r\n      .index {\r\n        padding: 0 20px;\r\n        color: #656565;\r\n      }\r\n      .img-container {\r\n        width: 70px;\r\n        height: 70px;\r\n        margin: 0 20px 0 0;\r\n        img {\r\n          width: 100%;\r\n          border-radius: 5px;\r\n        }\r\n      }\r\n      .name {\r\n        width: 26%;\r\n        margin: 0 20px 0 0;\r\n        font-weight: bold;\r\n        font-size: 16px;\r\n        color: #656565;\r\n        cursor: pointer;\r\n      }\r\n      .cate {\r\n        width: 15%;\r\n        color: #5091cb;\r\n        font-size: 13px;\r\n        span {\r\n          color: #959595;\r\n          font-size: 13px;\r\n          margin: 0 4px 0 0;\r\n        }\r\n      }\r\n      .create-time {\r\n        font-size: 13px;\r\n        color: #959595;\r\n        width: 15%;\r\n      }\r\n      .del-btn {\r\n        background-color: #ec4141;\r\n        font-size: 13px;\r\n        padding: 3px 15px;\r\n        color: #fff;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nexport const UploadWrapper = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import React, { memo, FC, ReactElement, useState, ChangeEvent } from 'react';\r\nimport { UploadWrapper } from './style';\r\nimport UploadCpn from '../../../../../../../common/upload';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeShow } from '../../../../../../../common/toast/store/actionCreators';\r\nimport { addContent, uploadContentCover } from '../../../../../../../../network/channel';\r\ninterface IProps {\r\n  id: string;\r\n  isShowP: boolean;\r\n  defined: () => void;\r\n  canceled: () => void;\r\n}\r\nconst Upload: FC<IProps> = (props): ReactElement => {\r\n  const [name, setName] = useState<string>('');\r\n  const [desc, setDesc] = useState<string>('');\r\n  const isShowImgPrev = true;\r\n  const isShowVioPrev = false;\r\n  const dispatch = useDispatch();\r\n  const nameChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const descChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\r\n    setDesc(e.currentTarget.value);\r\n  };\r\n  const names = [\r\n    {\r\n      name: '名称',\r\n      cols: 50,\r\n      rows: 2,\r\n      fn: (e: ChangeEvent<HTMLTextAreaElement>) => nameChange(e)\r\n    },\r\n    {\r\n      name: '简介',\r\n      cols: 50,\r\n      rows: 5,\r\n      fn: (e: ChangeEvent<HTMLTextAreaElement>) => descChange(e)\r\n    }\r\n  ];\r\n  const { id, isShowP, defined, canceled } = props;\r\n  const define = (img: File | undefined, vio: File | undefined, dt: number | undefined) => {\r\n    if (name.trim().length === 0) {\r\n      dispatch(changeShow('名称不能为空', 1500));\r\n    } else if (desc.trim().length === 0) {\r\n      dispatch(changeShow('简介不能为空', 1500));\r\n    } else {\r\n      if (isShowImgPrev) {\r\n        addContent(id, name, desc).then((data: any) => {\r\n          if (data) {\r\n            const { id } = data;\r\n            let formData: FormData = new FormData();\r\n            formData.append('cover', img!);\r\n            formData.append('id', id);\r\n            uploadContentCover(formData).then((data) => {});\r\n          }\r\n        });\r\n      }\r\n      if (isShowVioPrev) {\r\n      }\r\n    }\r\n    defined();\r\n  };\r\n  const cancel = () => {\r\n    canceled();\r\n  };\r\n  return (\r\n    <UploadWrapper>\r\n      {isShowP && (\r\n        <UploadCpn\r\n          names={names}\r\n          defineBtn={(img?: File, vio?: File, dt?: number) => define(img, vio, dt)}\r\n          cancelBtn={() => cancel()}\r\n          isShowImgPrev={isShowImgPrev}\r\n          isShowVioPrev={isShowVioPrev}\r\n        />\r\n      )}\r\n    </UploadWrapper>\r\n  );\r\n};\r\nexport default memo(Upload);\r\n","import React, { memo, FC, ReactElement, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Map } from 'immutable';\r\nimport { InnovateConWrapper } from './style';\r\n\r\nimport { getUserChannel } from '../../../../../../network/channel';\r\n\r\nimport { IChannel } from '../../../../../../constant/channel';\r\nimport { ICategory } from '../../../../../../constant/category';\r\nimport { formatTime } from '../../../../../../utils/format';\r\nimport Upload from './childCpn/upload';\r\nimport { ILogin, IUserMsg } from '../../../../../../constant/store/login';\r\ninterface IPrograms extends IChannel {\r\n  channel: ICategory;\r\n}\r\nconst InnovateCon: FC<RouteComponentProps<any, any, { id: string }>> = (props): ReactElement => {\r\n  const { id } = props.location.state;\r\n  const [program, setProgram] = useState<IPrograms[]>([]);\r\n  const [isShow, setIsShow] = useState<boolean>(false);\r\n  const { userMsg } = useSelector<Map<string, ILogin>, { userMsg: IUserMsg }>((state) => ({\r\n    userMsg: state.getIn(['loginReducer', 'login', 'userMsg'])\r\n  }));\r\n  useEffect(() => {\r\n    getUserChannel(userMsg.userId, id, 0, 30).then((data: any) => {\r\n      setProgram(data);\r\n      console.log(data);\r\n    });\r\n  }, [id, userMsg.userId]);\r\n  const addBtn = () => {\r\n    setIsShow(true);\r\n  };\r\n  const define = () => {\r\n    setIsShow(false);\r\n  };\r\n  const cancel = () => {\r\n    setIsShow(false);\r\n  };\r\n  const innovateRouter = (item: IPrograms, index: number) => {\r\n    console.log(item);\r\n    props.history.push({\r\n      pathname: '/innovate/detail',\r\n      state: {\r\n        id: item.id\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <InnovateConWrapper>\r\n      <div className=\"control-btn\">\r\n        <button onClick={(e) => addBtn()}>\r\n          <i className=\"iconfont icon-jia1\"> </i>\r\n          <span>添加内容</span>\r\n        </button>\r\n      </div>\r\n      <Upload isShowP={isShow} defined={() => define()} canceled={() => cancel()} id={id} />\r\n      <ul className=\"program-list\">\r\n        {program.length !== 0 &&\r\n          program.map((item, index) => {\r\n            return (\r\n              <li key={item.id}>\r\n                <div className=\"index\">{(index + 1).toString().padStart(2, '0')}</div>\r\n                <div className=\"img-container\" onClick={(e) => innovateRouter(item, index)}>\r\n                  <img src={item.coverUrl} alt={item.name} />\r\n                </div>\r\n                <div className=\"name text-nowrap\" onClick={(e) => innovateRouter(item, index)}>\r\n                  {item.name}\r\n                </div>\r\n                <div className=\"cate\">\r\n                  <span>频道:</span>\r\n                  {item.channel.name}\r\n                </div>\r\n                <div className=\"create-time\">\r\n                  创建于:\r\n                  {formatTime(item.createTime, 'yyyy-MM-dd')}\r\n                </div>\r\n                <button className=\"del-btn\">删除</button>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </InnovateConWrapper>\r\n  );\r\n};\r\nexport default memo(InnovateCon);\r\n","/*\r\n@Name guobin\r\n@Description gb-music\r\n@author guobin\r\n@date 2021/9/21\r\n*/\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport { HOST_NAME } from '../config';\r\nimport store from '../store';\r\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\r\nimport { createBrowserHistory } from 'history';\r\nfunction request<T>(config: AxiosRequestConfig) {\r\n  const instance: AxiosInstance = axios.create({\r\n    baseURL: HOST_NAME,\r\n    timeout: 15000\r\n  });\r\n  instance.interceptors.request.use(\r\n    (config) => {\r\n      return config;\r\n    },\r\n    (err) => {\r\n      console.log(err);\r\n      return err;\r\n    }\r\n  );\r\n  instance.interceptors.response.use(\r\n    (res) => {\r\n      return res.data;\r\n    },\r\n    (err) => {\r\n      if (err.response) {\r\n        const { status, data } = err.response;\r\n        if (status * 1 === 403 && data.message === '请登录') {\r\n          // @ts-ignore\r\n          store.dispatch(logoutAction());\r\n          store.dispatch(\r\n            changeUserMsg({\r\n              token: '',\r\n              userName: '',\r\n              userId: '',\r\n              avatarUrl: '',\r\n              createTime: '',\r\n              updateTime: '',\r\n              manage: -1,\r\n              auth: -1\r\n            })\r\n          );\r\n          createBrowserHistory().push({\r\n            pathname: '/Login'\r\n          });\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n  );\r\n  return instance.request<any, T>(config);\r\n}\r\nexport default request;\r\n"],"sourceRoot":""}