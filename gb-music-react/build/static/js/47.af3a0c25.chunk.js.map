{"version":3,"sources":["views/Login/store/actionCreators.tsx","network/user/index.ts","network/login/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","network/message/index.ts","components/content/detail/msgDetail/childCpn/channel/style.tsx","components/content/detail/msgDetail/childCpn/channel/index.tsx","network/request.tsx"],"names":["changeUserMsg","res","type","userMsg","changeLoginType","loginType","changeUserDetailAction","dispatch","getUserDetail","then","data","love","follow","window","localStorage","setItem","JSON","stringify","userDetail","loginAction","userName","password","props","a","login","token","updateUserExpire","code","changeShow","auth","vip","history","push","pathname","console","log","message","warning","content","style","fontSize","marginTop","logoutAction","clear","userId","avatarUrl","createTime","updateTime","manage","subscriber","thumb","songId","setUserFavorite","id","request","url","method","headers","authorization","store","getState","getIn","getUserFavorite","offset","limit","params","cancelFavorite","getUserSub","uploadAvatar","formData","getOtherUserDetail","getUserChannel","getUserSubPlaylist","getUserMomentData","getUserAllMoment","getSimpleUserInfo","register","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","publishMessage","uri","getAllMsg","readMessage","ids","getVideoMsg","getCommentMsg","getAlbumMsg","getPlaylistMsg","getChannelMsg","deleteMsg","readSingleMsg","ChannelWrapper","styled","div","Channel","useState","total","setTotal","channelMsg","setChannelMsg","useDispatch","useEffect","count","userRouter","item","state","className","length","map","index","toString","padStart","checkout","onClick","e","user","src","alt","channel","name","channelRouter","coverUrl","changeMsgAction","deleteMessage","image","Empty","PRESENTED_IMAGE_SIMPLE","description","withRouter","memo","config","instance","axios","create","baseURL","HOST_NAME","timeout","interceptors","use","err","response","status","createBrowserHistory"],"mappings":"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","file":"static/js/47.af3a0c25.chunk.js","sourcesContent":["import { message } from 'antd';\r\nimport { login } from '../../../network/login';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { getUserDetail, updateUserExpire } from '../../../network/user';\r\nimport { changeShow } from '../../../components/common/toast/store/actionCreators';\r\nimport { ILoginUserAction } from './type';\r\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\r\n\r\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserMsg',\r\n    userMsg: res\r\n  };\r\n}\r\nfunction changeLoginType(res: number): ILoginUserAction {\r\n  return {\r\n    type: 'changeLoginType',\r\n    loginType: res\r\n  };\r\n}\r\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserDetail',\r\n    userDetail: res\r\n  };\r\n}\r\nfunction deleteUserDetail(): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserDetail',\r\n    userDetail: {\r\n      userId: '',\r\n      userName: '',\r\n      avatarUrl: '',\r\n      subscriber: [],\r\n      thumb: [],\r\n      follow: [{ userId: '' }],\r\n      love: [{ songId: '' }]\r\n    }\r\n  };\r\n}\r\nexport function changeUserDetailAction() {\r\n  return (dispatch: any) => {\r\n    getUserDetail().then((data: any) => {\r\n      const { love, follow } = data;\r\n      if (!love) {\r\n        data.love = [];\r\n      }\r\n      if (!follow) {\r\n        data.follow = [];\r\n      }\r\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\r\n      dispatch(changeUserDetail(data));\r\n    });\r\n  };\r\n}\r\n\r\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const data: any = await login(userName, password);\r\n      if (data) {\r\n        const { token } = data;\r\n        const res: any = await updateUserExpire(token);\r\n        if (res.code * 1 === 200) {\r\n          dispatch(changeShow('您的VIP已经过期，开通VIP后畅想', 3500));\r\n          data.auth = 0;\r\n          delete data.vip;\r\n        }\r\n        await dispatch(changeUserMsg(data));\r\n        await dispatch(changeLoginType(1));\r\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\r\n        window.localStorage.setItem('loginType', '1');\r\n        await dispatch(changeUserDetailAction());\r\n        props.history.push({\r\n          pathname: '/Home'\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      message.warning({\r\n        content: '用户名或者密码错误',\r\n        style: {\r\n          fontSize: '20px',\r\n          marginTop: '5vh'\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n//退出登录\r\nexport function logoutAction() {\r\n  return (dispatch: any) => {\r\n    window.localStorage.clear();\r\n    dispatch(changeLoginType(0));\r\n    dispatch(\r\n      changeUserMsg({\r\n        token: '',\r\n        userName: '',\r\n        userId: '',\r\n        avatarUrl: '',\r\n        createTime: '',\r\n        updateTime: '',\r\n        manage: -1,\r\n        auth: -1\r\n      })\r\n    );\r\n    dispatch(deleteUserDetail());\r\n  };\r\n}\r\n","import request from '../request';\r\nimport store from '../../store/index';\r\n//用户喜欢歌曲\r\nexport function setUserFavorite(id: string) {\r\n  return request({\r\n    url: '/user/favorite',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户喜欢歌曲\r\nexport function getUserFavorite(offset: number, limit: number) {\r\n  return request({\r\n    url: '/user/favorite',\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//取消用户喜欢\r\nexport function cancelFavorite(songId: string) {\r\n  return request({\r\n    url: '/user/favorite/cancel',\r\n    method: 'post',\r\n    data: {\r\n      songId: songId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户收藏\r\nexport function getUserSub(url: string, offset: number, limit: number) {\r\n  return request({\r\n    url: `/sub/user/${url}`,\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取当前登录用户详情\r\nexport function getUserDetail() {\r\n  return request({\r\n    url: '/user/detail',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//上传用户头像\r\nexport function uploadAvatar(formData: FormData) {\r\n  return request({\r\n    url: '/user/upload/avatar',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\r\n      'Content-Type': 'multipart/form-data'\r\n    },\r\n    data: formData\r\n  });\r\n}\r\n//获取其它用户详情\r\nexport function getOtherUserDetail<T>(userId: string) {\r\n  return request<T>({\r\n    url: '/user/other/detail',\r\n    method: 'post',\r\n    data: {\r\n      userId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n\r\n//获取用户创建的电台\r\nexport function getUserChannel(userId: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/user/channel',\r\n    method: 'post',\r\n    data: {\r\n      userId,\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n\r\n//获取用户收藏的歌单\r\nexport function getUserSubPlaylist<T>(userId: string, offset: number, limit: number) {\r\n  return request<T>({\r\n    url: '/sub/user/playlist',\r\n    method: 'post',\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    data: {\r\n      userId\r\n    }\r\n  });\r\n}\r\n//用户VIP是否·过期\r\nexport function updateUserExpire(token: string) {\r\n  return request({\r\n    url: '/user/expire',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: token\r\n    }\r\n  });\r\n}\r\n//获取用户动态数据\r\nexport function getUserMomentData() {\r\n  return request({\r\n    url: '/user/data/moment',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户全部动态\r\nexport function getUserAllMoment(offset: string, limit: string) {\r\n  return request({\r\n    url: '/user/moment',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户简略信息\r\nexport function getSimpleUserInfo<T>(userId: string) {\r\n  return request<T>({\r\n    url: '/user/simple',\r\n    params: {\r\n      userId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n","import request from '../request';\r\n//登录\r\nexport function login(userName: string, password: string) {\r\n  return request({\r\n    url: '/login',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n//注册\r\nexport function register(userName: string, password: string) {\r\n  return request({\r\n    url: '/register',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import request from '../request';\r\nimport store from '../../store';\r\n//创建消息\r\nexport function publishMessage(uri: string, content: string, key: string, id: string) {\r\n  return request({\r\n    url: `/message/${uri}`,\r\n    method: 'post',\r\n    data: {\r\n      content,\r\n      [key]: id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//歌手发布专辑\r\nexport function publishAlbum(arId: string, content: string, alId: string) {\r\n  return request({\r\n    url: '/message/album',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    },\r\n    data: {\r\n      arId,\r\n      content,\r\n      alId\r\n    }\r\n  });\r\n}\r\n//获取所有通知\r\nexport function getAllMsg() {\r\n  return request({\r\n    url: '/message',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//一键已读\r\nexport function readMessage(ids: string[]) {\r\n  return request({\r\n    url: '/message/read',\r\n    method: 'post',\r\n    data: {\r\n      id: ids\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取所有视频通知\r\nexport function getVideoMsg(offset: string, limit: string) {\r\n  return request({\r\n    url: '/message/detail/video',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取所有评论通知\r\nexport function getCommentMsg(offset: string, limit: string) {\r\n  return request({\r\n    url: '/message/detail/comment',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取所有发布专辑通知\r\nexport function getAlbumMsg<T>(offset: string, limit: string) {\r\n  return request<T>({\r\n    url: '/message/detail/album',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取所有创建通知\r\nexport function getPlaylistMsg(offset: string, limit: string) {\r\n  return request({\r\n    url: '/message/detail/playlist',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取所有声音\r\nexport function getChannelMsg(offset: string, limit: string) {\r\n  return request({\r\n    url: '/message/detail/channel',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//删除消息通知\r\nexport function deleteMsg(id: string) {\r\n  return request({\r\n    url: '/message/delete',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//已读消息\r\nexport function readSingleMsg(id: string) {\r\n  return request({\r\n    url: '/message/read/single',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n","import styled from 'styled-components';\r\nexport const ChannelWrapper = styled.div`\r\n  .video-msg-list {\r\n    & > li {\r\n      padding: 15px 0;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: space-between;\r\n      border-bottom: 1px solid #e0e0e0;\r\n      .video-msg-content {\r\n        display: flex;\r\n        align-items: flex-start;\r\n      }\r\n      .left-content {\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n      .index {\r\n        color: #ccc;\r\n        font-size: 13px;\r\n        margin: 0 10px 0 0;\r\n      }\r\n      .is-read {\r\n        width: 7px;\r\n        height: 7px;\r\n        background-color: #ec4141;\r\n        border-radius: 50%;\r\n        margin: 0 10px 0 0;\r\n      }\r\n      .img-container {\r\n        width: 40px;\r\n        height: 40px;\r\n        position: relative;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        img {\r\n          width: 100%;\r\n          position: absolute;\r\n          left: 50%;\r\n          top: 50%;\r\n          transform: translate(-50%, -50%);\r\n        }\r\n      }\r\n      .right-content {\r\n        margin: 10px 0 0 20px;\r\n        .video-msg-info {\r\n          display: flex;\r\n          align-items: center;\r\n          .operator {\r\n            margin: 0 5px;\r\n          }\r\n          .user-name {\r\n            color: #0086b3;\r\n            cursor: pointer;\r\n          }\r\n          .video-name {\r\n            color: #0086b3;\r\n            cursor: pointer;\r\n          }\r\n        }\r\n        .video-cover {\r\n          margin: 20px 0 0 0;\r\n          width: 170px;\r\n          overflow: hidden;\r\n          cursor: pointer;\r\n          img {\r\n            width: 100%;\r\n          }\r\n        }\r\n      }\r\n      .delete-msg {\r\n        cursor: pointer;\r\n        i.iconfont {\r\n          font-size: 20px;\r\n          color: #9b9b9b;\r\n        }\r\n        &:hover {\r\n          i {\r\n            color: #000;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .empty {\r\n    padding: 150px 0;\r\n  }\r\n`;\r\n","import React, { memo, FC, ReactElement, useEffect, useState } from 'react';\r\nimport { ChannelWrapper } from './style';\r\n\r\nimport { deleteMsg, getChannelMsg, readSingleMsg } from '../../../../../../network/message';\r\nimport { IChannel } from '../../../../../../constant/channel';\r\nimport { IUser } from '../../../../../../constant/user';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Empty } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeShow } from '../../../../../common/toast/store/actionCreators';\r\nimport { changeMsgAction } from '../../../../../common/message/store/actionCreators';\r\n\r\ninterface IChannelMsg {\r\n  id: string;\r\n  content: string;\r\n  checkout: number;\r\n  createTime: string;\r\n  updateTime: string;\r\n  channel: IChannel;\r\n  user: IUser;\r\n}\r\nconst Channel: FC<RouteComponentProps> = (props): ReactElement => {\r\n  const [total, setTotal] = useState<number>(0);\r\n  const [channelMsg, setChannelMsg] = useState<IChannelMsg[]>([]);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    getChannelMsg('0', '15').then((data: any) => {\r\n      setTotal(data.count);\r\n      setChannelMsg(data.message);\r\n    });\r\n  }, []);\r\n  const channelRouter = (item: IChannelMsg) => {\r\n    readSingleMsg(item.id).then((data) => {\r\n      props.history.push({\r\n        pathname: '/Home/channelDetail',\r\n        state: {\r\n          id: item.channel.id\r\n        }\r\n      });\r\n    });\r\n  };\r\n  const userRouter = (item: IUser) => {\r\n    props.history.push({\r\n      pathname: '/Home/userDetail',\r\n      state: {\r\n        userId: item.userId\r\n      }\r\n    });\r\n  };\r\n  const deleteMessage = (item: IChannelMsg) => {\r\n    // @ts-ignore\r\n    dispatch(changeMsgAction(true)).then((data) => {\r\n      if (data) {\r\n        deleteMsg(item.id).then((data) => {\r\n          dispatch(changeShow('删除成功', 1500));\r\n          getChannelMsg('0', '15').then((data: any) => {\r\n            setTotal(data.count);\r\n            setChannelMsg(data.message);\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <ChannelWrapper>\r\n      <ul className=\"video-msg-list\">\r\n        {channelMsg.length !== 0 &&\r\n          channelMsg.map((item, index) => {\r\n            return (\r\n              <li key={item.id}>\r\n                <div className=\"video-msg-content\">\r\n                  <div className=\"left-content\">\r\n                    <div className=\"index\">{(index + 1).toString().padStart(2, '0')}</div>\r\n                    {item.checkout === 0 && <div className=\"is-read\"> </div>}\r\n                    <div className=\"img-container\" onClick={(e) => userRouter(item.user)}>\r\n                      <img src={item.user.avatarUrl} alt={item.user.userName} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"right-content\">\r\n                    <div className=\"video-msg-info\">\r\n                      <div className=\"user-name\" onClick={(e) => userRouter(item.user)}>\r\n                        {item.user.userName}\r\n                      </div>\r\n                      <div className=\"operator\">{item.content}</div>\r\n                      <div className=\"video-name\">{item.channel.name}</div>\r\n                    </div>\r\n                    <div className=\"video-cover\" onClick={(e) => channelRouter(item)}>\r\n                      <img src={item.channel.coverUrl} alt={item.channel.name} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"delete-msg\" onClick={(e) => deleteMessage(item)}>\r\n                  <i className=\"iconfont icon-huishouzhan\"> </i>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n      {total === 0 && (\r\n        <div className=\"empty\">\r\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'暂无通知'} />\r\n        </div>\r\n      )}\r\n    </ChannelWrapper>\r\n  );\r\n};\r\nexport default withRouter(memo(Channel));\r\n","/*\r\n@Name guobin\r\n@Description gb-music\r\n@author guobin\r\n@date 2021/9/21\r\n*/\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport { HOST_NAME } from '../config';\r\nimport store from '../store';\r\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\r\nimport { createBrowserHistory } from 'history';\r\nfunction request<T>(config: AxiosRequestConfig) {\r\n  const instance: AxiosInstance = axios.create({\r\n    baseURL: HOST_NAME,\r\n    timeout: 15000\r\n  });\r\n  instance.interceptors.request.use(\r\n    (config) => {\r\n      return config;\r\n    },\r\n    (err) => {\r\n      console.log(err);\r\n      return err;\r\n    }\r\n  );\r\n  instance.interceptors.response.use(\r\n    (res) => {\r\n      return res.data;\r\n    },\r\n    (err) => {\r\n      if (err.response) {\r\n        const { status, data } = err.response;\r\n        if (status * 1 === 403 && data.message === '请登录') {\r\n          // @ts-ignore\r\n          store.dispatch(logoutAction());\r\n          store.dispatch(\r\n            changeUserMsg({\r\n              token: '',\r\n              userName: '',\r\n              userId: '',\r\n              avatarUrl: '',\r\n              createTime: '',\r\n              updateTime: '',\r\n              manage: -1,\r\n              auth: -1\r\n            })\r\n          );\r\n          createBrowserHistory().push({\r\n            pathname: '/Login'\r\n          });\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n  );\r\n  return instance.request<any, T>(config);\r\n}\r\nexport default request;\r\n"],"sourceRoot":""}