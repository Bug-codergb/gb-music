{"version":3,"sources":["views/Login/store/actionCreators.tsx","network/user/index.ts","network/login/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","network/message/index.ts","components/content/detail/msgDetail/childCpn/channel/style.tsx","components/content/detail/msgDetail/childCpn/channel/index.tsx","network/request.tsx"],"names":["changeUserMsg","res","type","userMsg","changeLoginType","loginType","changeUserDetailAction","dispatch","getUserDetail","then","data","love","follow","window","localStorage","setItem","JSON","stringify","userDetail","loginAction","userName","password","props","a","login","token","updateUserExpire","code","changeShow","auth","vip","history","push","pathname","console","log","message","warning","content","style","fontSize","marginTop","logoutAction","clear","userId","avatarUrl","createTime","updateTime","manage","subscriber","thumb","songId","setUserFavorite","id","request","url","method","headers","authorization","store","getState","getIn","getUserFavorite","offset","limit","params","cancelFavorite","getUserSub","uploadAvatar","formData","getOtherUserDetail","getUserChannel","getUserSubPlaylist","getUserMomentData","getUserAllMoment","getSimpleUserInfo","register","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","publishMessage","uri","getAllMsg","readMessage","ids","getVideoMsg","getCommentMsg","getAlbumMsg","getPlaylistMsg","getChannelMsg","deleteMsg","readSingleMsg","ChannelWrapper","styled","div","Channel","useState","total","setTotal","channelMsg","setChannelMsg","useDispatch","useEffect","count","userRouter","item","state","className","length","map","index","toString","padStart","checkout","onClick","e","user","src","alt","channel","name","channelRouter","coverUrl","changeMsgAction","deleteMessage","image","Empty","PRESENTED_IMAGE_SIMPLE","description","withRouter","memo","config","instance","axios","create","baseURL","HOST_NAME","timeout","interceptors","use","err","response","status","createBrowserHistory"],"mappings":"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","file":"static/js/47.0997b12d.chunk.js","sourcesContent":["import { message } from 'antd';\nimport { login } from '../../../network/login';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getUserDetail, updateUserExpire } from '../../../network/user';\nimport { changeShow } from '../../../components/common/toast/store/actionCreators';\nimport { ILoginUserAction } from './type';\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\n\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\n  return {\n    type: 'changeUserMsg',\n    userMsg: res\n  };\n}\nfunction changeLoginType(res: number): ILoginUserAction {\n  return {\n    type: 'changeLoginType',\n    loginType: res\n  };\n}\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: res\n  };\n}\nfunction deleteUserDetail(): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: {\n      userId: '',\n      userName: '',\n      avatarUrl: '',\n      subscriber: [],\n      thumb: [],\n      follow: [{ userId: '' }],\n      love: [{ songId: '' }]\n    }\n  };\n}\nexport function changeUserDetailAction() {\n  return (dispatch: any) => {\n    getUserDetail().then((data: any) => {\n      const { love, follow } = data;\n      if (!love) {\n        data.love = [];\n      }\n      if (!follow) {\n        data.follow = [];\n      }\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\n      dispatch(changeUserDetail(data));\n    });\n  };\n}\n\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\n  return async (dispatch: any) => {\n    try {\n      const data: any = await login(userName, password);\n      if (data) {\n        const { token } = data;\n        const res: any = await updateUserExpire(token);\n        if (res.code * 1 === 200) {\n          dispatch(changeShow('您的VIP已经过期，开通VIP后畅想', 3500));\n          data.auth = 0;\n          delete data.vip;\n        }\n        await dispatch(changeUserMsg(data));\n        await dispatch(changeLoginType(1));\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\n        window.localStorage.setItem('loginType', '1');\n        await dispatch(changeUserDetailAction());\n        props.history.push({\n          pathname: '/Home'\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      message.warning({\n        content: '用户名或者密码错误',\n        style: {\n          fontSize: '20px',\n          marginTop: '5vh'\n        }\n      });\n    }\n  };\n}\n//退出登录\nexport function logoutAction() {\n  return (dispatch: any) => {\n    window.localStorage.clear();\n    dispatch(changeLoginType(0));\n    dispatch(\n      changeUserMsg({\n        token: '',\n        userName: '',\n        userId: '',\n        avatarUrl: '',\n        createTime: '',\n        updateTime: '',\n        manage: -1,\n        auth: -1\n      })\n    );\n    dispatch(deleteUserDetail());\n  };\n}\n","import request from '../request';\nimport store from '../../store/index';\n//用户喜欢歌曲\nexport function setUserFavorite(id: string) {\n  return request({\n    url: '/user/favorite',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户喜欢歌曲\nexport function getUserFavorite(offset: number, limit: number) {\n  return request({\n    url: '/user/favorite',\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//取消用户喜欢\nexport function cancelFavorite(songId: string) {\n  return request({\n    url: '/user/favorite/cancel',\n    method: 'post',\n    data: {\n      songId: songId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户收藏\nexport function getUserSub(url: string, offset: number, limit: number) {\n  return request({\n    url: `/sub/user/${url}`,\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取当前登录用户详情\nexport function getUserDetail() {\n  return request({\n    url: '/user/detail',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//上传用户头像\nexport function uploadAvatar(formData: FormData) {\n  return request({\n    url: '/user/upload/avatar',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  });\n}\n//获取其它用户详情\nexport function getOtherUserDetail<T>(userId: string) {\n  return request<T>({\n    url: '/user/other/detail',\n    method: 'post',\n    data: {\n      userId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户创建的电台\nexport function getUserChannel(userId: string, offset: number, limit: number) {\n  return request({\n    url: '/user/channel',\n    method: 'post',\n    data: {\n      userId,\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户收藏的歌单\nexport function getUserSubPlaylist<T>(userId: string, offset: number, limit: number) {\n  return request<T>({\n    url: '/sub/user/playlist',\n    method: 'post',\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      userId\n    }\n  });\n}\n//用户VIP是否·过期\nexport function updateUserExpire(token: string) {\n  return request({\n    url: '/user/expire',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: token\n    }\n  });\n}\n//获取用户动态数据\nexport function getUserMomentData() {\n  return request({\n    url: '/user/data/moment',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户全部动态\nexport function getUserAllMoment(offset: string, limit: string) {\n  return request({\n    url: '/user/moment',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户简略信息\nexport function getSimpleUserInfo<T>(userId: string) {\n  return request<T>({\n    url: '/user/simple',\n    params: {\n      userId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n","import request from '../request';\n//登录\nexport function login(userName: string, password: string) {\n  return request({\n    url: '/login',\n    method: 'post',\n    data: {\n      userName,\n      password\n    }\n  });\n}\n//注册\nexport function register(userName: string, password: string) {\n  return request({\n    url: '/register',\n    method: 'post',\n    data: {\n      userName,\n      password\n    }\n  });\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import request from '../request';\nimport store from '../../store';\n//创建消息\nexport function publishMessage(uri: string, content: string, key: string, id: string) {\n  return request({\n    url: `/message/${uri}`,\n    method: 'post',\n    data: {\n      content,\n      [key]: id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//歌手发布专辑\nexport function publishAlbum(arId: string, content: string, alId: string) {\n  return request({\n    url: '/message/album',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    },\n    data: {\n      arId,\n      content,\n      alId\n    }\n  });\n}\n//获取所有通知\nexport function getAllMsg() {\n  return request({\n    url: '/message',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//一键已读\nexport function readMessage(ids: string[]) {\n  return request({\n    url: '/message/read',\n    method: 'post',\n    data: {\n      id: ids\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取所有视频通知\nexport function getVideoMsg(offset: string, limit: string) {\n  return request({\n    url: '/message/detail/video',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取所有评论通知\nexport function getCommentMsg(offset: string, limit: string) {\n  return request({\n    url: '/message/detail/comment',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取所有发布专辑通知\nexport function getAlbumMsg<T>(offset: string, limit: string) {\n  return request<T>({\n    url: '/message/detail/album',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取所有创建通知\nexport function getPlaylistMsg(offset: string, limit: string) {\n  return request({\n    url: '/message/detail/playlist',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取所有声音\nexport function getChannelMsg(offset: string, limit: string) {\n  return request({\n    url: '/message/detail/channel',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//删除消息通知\nexport function deleteMsg(id: string) {\n  return request({\n    url: '/message/delete',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//已读消息\nexport function readSingleMsg(id: string) {\n  return request({\n    url: '/message/read/single',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n","import styled from 'styled-components';\nexport const ChannelWrapper = styled.div`\n  .video-msg-list {\n    & > li {\n      padding: 15px 0;\n      display: flex;\n      align-items: flex-start;\n      justify-content: space-between;\n      border-bottom: 1px solid #e0e0e0;\n      .video-msg-content {\n        display: flex;\n        align-items: flex-start;\n      }\n      .left-content {\n        display: flex;\n        align-items: center;\n      }\n      .index {\n        color: #ccc;\n        font-size: 13px;\n        margin: 0 10px 0 0;\n      }\n      .is-read {\n        width: 7px;\n        height: 7px;\n        background-color: #ec4141;\n        border-radius: 50%;\n        margin: 0 10px 0 0;\n      }\n      .img-container {\n        width: 40px;\n        height: 40px;\n        position: relative;\n        border-radius: 50%;\n        overflow: hidden;\n        img {\n          width: 100%;\n          position: absolute;\n          left: 50%;\n          top: 50%;\n          transform: translate(-50%, -50%);\n        }\n      }\n      .right-content {\n        margin: 10px 0 0 20px;\n        .video-msg-info {\n          display: flex;\n          align-items: center;\n          .operator {\n            margin: 0 5px;\n          }\n          .user-name {\n            color: #0086b3;\n            cursor: pointer;\n          }\n          .video-name {\n            color: #0086b3;\n            cursor: pointer;\n          }\n        }\n        .video-cover {\n          margin: 20px 0 0 0;\n          width: 170px;\n          overflow: hidden;\n          cursor: pointer;\n          img {\n            width: 100%;\n          }\n        }\n      }\n      .delete-msg {\n        cursor: pointer;\n        i.iconfont {\n          font-size: 20px;\n          color: #9b9b9b;\n        }\n        &:hover {\n          i {\n            color: #000;\n          }\n        }\n      }\n    }\n  }\n  .empty {\n    padding: 150px 0;\n  }\n`;\n","import React, { memo, FC, ReactElement, useEffect, useState } from 'react';\nimport { ChannelWrapper } from './style';\n\nimport { deleteMsg, getChannelMsg, readSingleMsg } from '../../../../../../network/message';\nimport { IChannel } from '../../../../../../constant/channel';\nimport { IUser } from '../../../../../../constant/user';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { Empty } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { changeShow } from '../../../../../common/toast/store/actionCreators';\nimport { changeMsgAction } from '../../../../../common/message/store/actionCreators';\n\ninterface IChannelMsg {\n  id: string;\n  content: string;\n  checkout: number;\n  createTime: string;\n  updateTime: string;\n  channel: IChannel;\n  user: IUser;\n}\nconst Channel: FC<RouteComponentProps> = (props): ReactElement => {\n  const [total, setTotal] = useState<number>(0);\n  const [channelMsg, setChannelMsg] = useState<IChannelMsg[]>([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getChannelMsg('0', '15').then((data: any) => {\n      setTotal(data.count);\n      setChannelMsg(data.message);\n    });\n  }, []);\n  const channelRouter = (item: IChannelMsg) => {\n    readSingleMsg(item.id).then((data) => {\n      props.history.push({\n        pathname: '/Home/channelDetail',\n        state: {\n          id: item.channel.id\n        }\n      });\n    });\n  };\n  const userRouter = (item: IUser) => {\n    props.history.push({\n      pathname: '/Home/userDetail',\n      state: {\n        userId: item.userId\n      }\n    });\n  };\n  const deleteMessage = (item: IChannelMsg) => {\n    // @ts-ignore\n    dispatch(changeMsgAction(true)).then((data) => {\n      if (data) {\n        deleteMsg(item.id).then((data) => {\n          dispatch(changeShow('删除成功', 1500));\n          getChannelMsg('0', '15').then((data: any) => {\n            setTotal(data.count);\n            setChannelMsg(data.message);\n          });\n        });\n      }\n    });\n  };\n  return (\n    <ChannelWrapper>\n      <ul className=\"video-msg-list\">\n        {channelMsg.length !== 0 &&\n          channelMsg.map((item, index) => {\n            return (\n              <li key={item.id}>\n                <div className=\"video-msg-content\">\n                  <div className=\"left-content\">\n                    <div className=\"index\">{(index + 1).toString().padStart(2, '0')}</div>\n                    {item.checkout === 0 && <div className=\"is-read\"> </div>}\n                    <div className=\"img-container\" onClick={(e) => userRouter(item.user)}>\n                      <img src={item.user.avatarUrl} alt={item.user.userName} />\n                    </div>\n                  </div>\n                  <div className=\"right-content\">\n                    <div className=\"video-msg-info\">\n                      <div className=\"user-name\" onClick={(e) => userRouter(item.user)}>\n                        {item.user.userName}\n                      </div>\n                      <div className=\"operator\">{item.content}</div>\n                      <div className=\"video-name\">{item.channel.name}</div>\n                    </div>\n                    <div className=\"video-cover\" onClick={(e) => channelRouter(item)}>\n                      <img src={item.channel.coverUrl} alt={item.channel.name} />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"delete-msg\" onClick={(e) => deleteMessage(item)}>\n                  <i className=\"iconfont icon-huishouzhan\"> </i>\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n      {total === 0 && (\n        <div className=\"empty\">\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'暂无通知'} />\n        </div>\n      )}\n    </ChannelWrapper>\n  );\n};\nexport default withRouter(memo(Channel));\n","/*\n@Name guobin\n@Description gb-music\n@author guobin\n@date 2021/9/21\n*/\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { HOST_NAME } from '../config';\nimport store from '../store';\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\nimport { createBrowserHistory } from 'history';\nfunction request<T>(config: AxiosRequestConfig) {\n  const instance: AxiosInstance = axios.create({\n    baseURL: HOST_NAME,\n    timeout: 15000\n  });\n  instance.interceptors.request.use(\n    (config) => {\n      return config;\n    },\n    (err) => {\n      console.log(err);\n      return err;\n    }\n  );\n  instance.interceptors.response.use(\n    (res) => {\n      return res.data;\n    },\n    (err) => {\n      if (err.response) {\n        const { status, data } = err.response;\n        if (status * 1 === 403 && data.message === '请登录') {\n          // @ts-ignore\n          store.dispatch(logoutAction());\n          store.dispatch(\n            changeUserMsg({\n              token: '',\n              userName: '',\n              userId: '',\n              avatarUrl: '',\n              createTime: '',\n              updateTime: '',\n              manage: -1,\n              auth: -1\n            })\n          );\n          createBrowserHistory().push({\n            pathname: '/Login'\n          });\n        } else {\n          throw err;\n        }\n      }\n    }\n  );\n  return instance.request<any, T>(config);\n}\nexport default request;\n"],"sourceRoot":""}