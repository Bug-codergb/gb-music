{"version":3,"sources":["views/Login/store/actionCreators.tsx","network/user/index.ts","network/login/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","network/message/index.ts","network/channel/index.ts","assets/img/channel/radio.png","views/manage/innovate/pages/publish/childCpn/radio/style.tsx","views/manage/innovate/pages/publish/childCpn/radio/index.tsx","network/request.tsx"],"names":["changeUserMsg","res","type","userMsg","changeLoginType","loginType","changeUserDetailAction","dispatch","getUserDetail","then","data","love","follow","window","localStorage","setItem","JSON","stringify","userDetail","loginAction","userName","password","props","a","login","token","updateUserExpire","code","changeShow","auth","vip","history","push","pathname","console","log","message","warning","content","style","fontSize","marginTop","logoutAction","clear","userId","avatarUrl","createTime","updateTime","manage","subscriber","thumb","songId","setUserFavorite","id","request","url","method","headers","authorization","store","getState","getIn","getUserFavorite","offset","limit","params","cancelFavorite","getUserSub","uploadAvatar","formData","getOtherUserDetail","getUserChannel","getUserSubPlaylist","getUserMomentData","getUserAllMoment","getSimpleUserInfo","register","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","publishMessage","uri","getAllMsg","readMessage","ids","getVideoMsg","getCommentMsg","getAlbumMsg","getPlaylistMsg","getChannelMsg","deleteMsg","readSingleMsg","getAllChannel","getContent","getChannelDetail","addContent","cId","name","description","uploadContentCover","getUserChannelCount","addProgram","addProgramSource","addProgramPlayCount","getHotChannel","getHotChannelContent","getProgramDetail","getProgramURL","getChannelSubUser","getUserChannelPlaylist","RadioWrapper","styled","div","Radio","useState","channel","setChannel","currentIndex","setCurrentIndex","isShow","setIsShow","setName","desc","setDesc","setCid","prevImgURL","setPrevImg","imgFile","setImgFile","isShowPrev","setIsShowPrev","useDispatch","useEffect","className","src","radioImg","alt","onClick","e","rows","cols","onChange","currentTarget","nameChange","descChange","files","URL","createObjectURL","inpChange","length","map","item","index","liClick","trim","FormData","append","undefined","memo","config","instance","axios","create","baseURL","HOST_NAME","timeout","interceptors","use","err","response","status","createBrowserHistory"],"mappings":"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","file":"static/js/46.a6fc2802.chunk.js","sourcesContent":["import { message } from 'antd';\nimport { login } from '../../../network/login';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getUserDetail, updateUserExpire } from '../../../network/user';\nimport { changeShow } from '../../../components/common/toast/store/actionCreators';\nimport { ILoginUserAction } from './type';\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\n\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\n  return {\n    type: 'changeUserMsg',\n    userMsg: res\n  };\n}\nfunction changeLoginType(res: number): ILoginUserAction {\n  return {\n    type: 'changeLoginType',\n    loginType: res\n  };\n}\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: res\n  };\n}\nfunction deleteUserDetail(): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: {\n      userId: '',\n      userName: '',\n      avatarUrl: '',\n      subscriber: [],\n      thumb: [],\n      follow: [{ userId: '' }],\n      love: [{ songId: '' }]\n    }\n  };\n}\nexport function changeUserDetailAction() {\n  return (dispatch: any) => {\n    getUserDetail().then((data: any) => {\n      const { love, follow } = data;\n      if (!love) {\n        data.love = [];\n      }\n      if (!follow) {\n        data.follow = [];\n      }\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\n      dispatch(changeUserDetail(data));\n    });\n  };\n}\n\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\n  return async (dispatch: any) => {\n    try {\n      const data: any = await login(userName, password);\n      if (data) {\n        const { token } = data;\n        const res: any = await updateUserExpire(token);\n        if (res.code * 1 === 200) {\n          dispatch(changeShow('您的VIP已经过期，开通VIP后畅想', 3500));\n          data.auth = 0;\n          delete data.vip;\n        }\n        await dispatch(changeUserMsg(data));\n        await dispatch(changeLoginType(1));\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\n        window.localStorage.setItem('loginType', '1');\n        await dispatch(changeUserDetailAction());\n        props.history.push({\n          pathname: '/Home'\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      message.warning({\n        content: '用户名或者密码错误',\n        style: {\n          fontSize: '20px',\n          marginTop: '5vh'\n        }\n      });\n    }\n  };\n}\n//退出登录\nexport function logoutAction() {\n  return (dispatch: any) => {\n    window.localStorage.clear();\n    dispatch(changeLoginType(0));\n    dispatch(\n      changeUserMsg({\n        token: '',\n        userName: '',\n        userId: '',\n        avatarUrl: '',\n        createTime: '',\n        updateTime: '',\n        manage: -1,\n        auth: -1\n      })\n    );\n    dispatch(deleteUserDetail());\n  };\n}\n","import request from '../request';\nimport store from '../../store/index';\n//用户喜欢歌曲\nexport function setUserFavorite(id: string) {\n  return request({\n    url: '/user/favorite',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户喜欢歌曲\nexport function getUserFavorite(offset: number, limit: number) {\n  return request({\n    url: '/user/favorite',\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//取消用户喜欢\nexport function cancelFavorite(songId: string) {\n  return request({\n    url: '/user/favorite/cancel',\n    method: 'post',\n    data: {\n      songId: songId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户收藏\nexport function getUserSub(url: string, offset: number, limit: number) {\n  return request({\n    url: `/sub/user/${url}`,\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取当前登录用户详情\nexport function getUserDetail() {\n  return request({\n    url: '/user/detail',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//上传用户头像\nexport function uploadAvatar(formData: FormData) {\n  return request({\n    url: '/user/upload/avatar',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  });\n}\n//获取其它用户详情\nexport function getOtherUserDetail<T>(userId: string) {\n  return request<T>({\n    url: '/user/other/detail',\n    method: 'post',\n    data: {\n      userId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户创建的电台\nexport function getUserChannel(userId: string, offset: number, limit: number) {\n  return request({\n    url: '/user/channel',\n    method: 'post',\n    data: {\n      userId,\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户收藏的歌单\nexport function getUserSubPlaylist<T>(userId: string, offset: number, limit: number) {\n  return request<T>({\n    url: '/sub/user/playlist',\n    method: 'post',\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      userId\n    }\n  });\n}\n//用户VIP是否·过期\nexport function updateUserExpire(token: string) {\n  return request({\n    url: '/user/expire',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: token\n    }\n  });\n}\n//获取用户动态数据\nexport function getUserMomentData() {\n  return request({\n    url: '/user/data/moment',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户全部动态\nexport function getUserAllMoment(offset: string, limit: string) {\n  return request({\n    url: '/user/moment',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户简略信息\nexport function getSimpleUserInfo<T>(userId: string) {\n  return request<T>({\n    url: '/user/simple',\n    params: {\n      userId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n","import request from '../request';\n//登录\nexport function login(userName: string, password: string) {\n  return request({\n    url: '/login',\n    method: 'post',\n    data: {\n      userName,\n      password\n    }\n  });\n}\n//注册\nexport function register(userName: string, password: string) {\n  return request({\n    url: '/register',\n    method: 'post',\n    data: {\n      userName,\n      password\n    }\n  });\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import request from '../request';\nimport store from '../../store';\n//创建消息\nexport function publishMessage(uri: string, content: string, key: string, id: string) {\n  return request({\n    url: `/message/${uri}`,\n    method: 'post',\n    data: {\n      content,\n      [key]: id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//歌手发布专辑\nexport function publishAlbum(arId: string, content: string, alId: string) {\n  return request({\n    url: '/message/album',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    },\n    data: {\n      arId,\n      content,\n      alId\n    }\n  });\n}\n//获取所有通知\nexport function getAllMsg() {\n  return request({\n    url: '/message',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//一键已读\nexport function readMessage(ids: string[]) {\n  return request({\n    url: '/message/read',\n    method: 'post',\n    data: {\n      id: ids\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取所有视频通知\nexport function getVideoMsg(offset: string, limit: string) {\n  return request({\n    url: '/message/detail/video',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取所有评论通知\nexport function getCommentMsg(offset: string, limit: string) {\n  return request({\n    url: '/message/detail/comment',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取所有发布专辑通知\nexport function getAlbumMsg<T>(offset: string, limit: string) {\n  return request<T>({\n    url: '/message/detail/album',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取所有创建通知\nexport function getPlaylistMsg(offset: string, limit: string) {\n  return request({\n    url: '/message/detail/playlist',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取所有声音\nexport function getChannelMsg(offset: string, limit: string) {\n  return request({\n    url: '/message/detail/channel',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//删除消息通知\nexport function deleteMsg(id: string) {\n  return request({\n    url: '/message/delete',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//已读消息\nexport function readSingleMsg(id: string) {\n  return request({\n    url: '/message/read/single',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n","import request from '../request';\nimport store from '../../store';\n//获取所有频道\nexport function getAllChannel() {\n  return request({\n    url: '/channel/all'\n  });\n}\n//获取频道下内容\nexport function getContent(id: string, offset: number, limit: number) {\n  return request({\n    url: '/channel/content',\n    params: {\n      id,\n      offset,\n      limit\n    }\n  });\n}\n//获取频道详情\nexport function getChannelDetail(id: string, offset: number, limit: number) {\n  return request({\n    url: '/channel/detail',\n    params: {\n      id,\n      offset,\n      limit\n    }\n  });\n}\n//添加频道内容\nexport function addContent(cId: string, name: string, description: string) {\n  return request({\n    url: '/channel/content/add',\n    method: 'post',\n    data: {\n      cId,\n      name,\n      description\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//上传频道内容图片\nexport function uploadContentCover(formData: FormData) {\n  return request({\n    url: '/channel/content/upload',\n    data: formData,\n    method: 'post',\n    headers: {\n      'Content-type': 'multipart/form-data',\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户电台数据\nexport function getUserChannelCount(userId: string) {\n  return request({\n    url: '/channel/count',\n    params: {\n      userId\n    }\n  });\n}\n//获取用户电台\nexport function getUserChannel(userId: string, cId: string, offset: number, limit: number) {\n  return request({\n    url: '/channel/user',\n    params: {\n      userId,\n      cId,\n      offset,\n      limit\n    }\n  });\n}\n//添加节目\nexport function addProgram(name: string, cId: string) {\n  return request({\n    url: '/channel/program',\n    method: 'post',\n    data: {\n      name,\n      cId\n    },\n    headers: {\n      //@ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//上传节目\nexport function addProgramSource(id: string, formData: FormData) {\n  return request({\n    url: '/channel/program/source',\n    method: 'post',\n    params: {\n      id\n    },\n    data: formData,\n    headers: {\n      'Content-type': 'multipart/form-data',\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//为节目添加播放量\nexport function addProgramPlayCount(id: string) {\n  return request({\n    url: '/channel/playCount',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取热门电台\nexport function getHotChannel<T>() {\n  return request<T>({\n    url: '/channel/hot'\n  });\n}\n//获取热门电台内容(电台页)\nexport function getHotChannelContent() {\n  return request({\n    url: '/channel/content/hot'\n  });\n}\n\n//获取节目详情(播放)\nexport function getProgramDetail(id: string) {\n  return request({\n    url: '/channel/program/detail',\n    params: {\n      id\n    }\n  });\n}\n//获取节目URL\nexport function getProgramURL(id: string) {\n  return request({\n    url: '/channel/program/url',\n    params: {\n      id\n    }\n  });\n}\n//获取电台收藏者\nexport function getChannelSubUser(cId: string, offset: number, limit: number) {\n  return request({\n    url: '/channel/sub/user',\n    params: {\n      cId,\n      offset,\n      limit\n    }\n  });\n}\n//获取用户播单\nexport function getUserChannelPlaylist<T>() {\n  return request<T>({\n    url: '/channel/program/list',\n    method: 'post',\n    data: {},\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n","export default __webpack_public_path__ + \"static/media/radio.b03184fc.png\";","import styled from 'styled-components';\nexport const RadioWrapper = styled.div`\n  position: relative;\n  .upload-radio {\n    width: 500px;\n    height: 300px;\n    margin: 30px auto;\n    border: 1px dotted #cccccc;\n    text-align: center;\n    border-radius: 8px;\n    img {\n      width: 200px;\n    }\n    .tip {\n      color: #5091cb;\n      text-decoration: underline;\n      cursor: pointer;\n    }\n  }\n  .upload-content {\n    padding: 30px 50px;\n    background-color: #fff;\n    border-radius: 8px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);\n    .name,\n    .desc {\n      display: flex;\n      margin: 0 0 20px 0;\n      textarea {\n        resize: none;\n        border: 1px solid #cccac1;\n      }\n      span {\n        margin: 0 5px 0 0;\n      }\n    }\n    .prev-img {\n      width: 92%;\n      height: 100px;\n      background-color: #f2f2f2;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n      margin: 0 0 20px 0;\n      input {\n        position: absolute;\n        height: 100%;\n        width: 100%;\n        opacity: 0;\n        cursor: pointer;\n      }\n      i.iconfont {\n        font-size: 40px;\n        color: #ff3a3a;\n        display: inline-block;\n      }\n      img {\n        height: 100%;\n      }\n    }\n    .channel-list {\n      display: flex;\n      flex-wrap: wrap;\n      width: 450px;\n      & > li {\n        white-space: nowrap;\n        margin: 0 15px 15px 0;\n        background-color: #f7b3b3;\n        font-size: 13px;\n        color: #fff;\n        padding: 4px 15px;\n        border-radius: 5px;\n        cursor: pointer;\n        &:hover {\n          background-color: #f27a7a;\n        }\n        &.active {\n          background-color: #f27a7a;\n        }\n      }\n    }\n    .control-btn {\n      display: flex;\n      justify-content: flex-end;\n      button {\n        color: #fff;\n        font-size: 13px;\n        padding: 4px 15px;\n        margin: 0 0 0 30px;\n        cursor: pointer;\n        &:nth-child(1) {\n          background-color: #f27a7a;\n        }\n        &:nth-child(2) {\n          background-color: #efefef;\n          color: #656565;\n        }\n      }\n    }\n  }\n`;\n","import React, { memo, FC, ReactElement, useEffect, useState, ChangeEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport radioImg from '../../../../../../../assets/img/channel/radio.png';\nimport { RadioWrapper } from './style';\nimport { addContent, getAllChannel, uploadContentCover } from '../../../../../../../network/channel';\nimport { IChannel } from '../../../../../../../constant/channel';\nimport { changeShow } from '../../../../../../../components/common/toast/store/actionCreators';\nimport { publishMessage } from '../../../../../../../network/message';\n\nconst Radio: FC = (): ReactElement => {\n  const [channel, setChannel] = useState<IChannel[]>([]);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [isShow, setIsShow] = useState<boolean>(false);\n\n  const [name, setName] = useState<string>('');\n  const [desc, setDesc] = useState<string>('');\n  const [cId, setCid] = useState<string>('');\n\n  const [prevImgURL, setPrevImg] = useState<string>('');\n  const [imgFile, setImgFile] = useState<File>();\n  const [isShowPrev, setIsShowPrev] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getAllChannel().then((data: any) => {\n      setChannel(data);\n      setCid(data[0].id);\n    });\n  }, []);\n  const liClick = (item: IChannel, index: number) => {\n    setCurrentIndex(index);\n    setCid(item.id);\n  };\n  const uploadBtn = () => {\n    setIsShow(true);\n  };\n  const inpChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.files) {\n      const url = URL.createObjectURL(e.currentTarget.files[0]);\n      setPrevImg(url);\n      setIsShowPrev(true);\n      setImgFile(e.currentTarget.files[0]);\n    }\n  };\n  const nameChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setName(e.currentTarget.value);\n  };\n  const descChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setDesc(e.currentTarget.value);\n  };\n  const define = () => {\n    if (name.trim().length === 0) {\n      dispatch(changeShow('名称不能为空', 1500));\n    } else if (desc.trim().length === 0) {\n      dispatch(changeShow('简介不能为空', 1500));\n    } else if (!imgFile) {\n      dispatch(changeShow('请选择文件', 1500));\n    } else if (cId.trim().length === 0) {\n      dispatch(changeShow('请选择文件', 1500));\n    } else {\n      addContent(cId, name, desc).then((data: any) => {\n        if (data) {\n          const { id } = data;\n          let formData: FormData = new FormData();\n          formData.append('cover', imgFile);\n          formData.append('id', id);\n          uploadContentCover(formData).then((data: any) => {\n            setCid('');\n            setDesc('');\n            setName('');\n            setImgFile(undefined);\n            setPrevImg('');\n            setIsShow(false);\n            setIsShowPrev(false);\n          });\n          publishMessage('/channel', '发布了', 'ccId', id);\n        }\n      });\n    }\n  };\n  const cancel = () => {\n    setIsShow(false);\n    setCid('');\n    setDesc('');\n    setName('');\n    setImgFile(undefined);\n    setPrevImg('');\n    setIsShowPrev(false);\n  };\n  return (\n    <RadioWrapper>\n      <div className=\"upload-radio\">\n        <img src={radioImg} alt=\"radio-img\" />\n        <p className=\"tip\" onClick={(e) => uploadBtn()}>\n          点击添加\n        </p>\n      </div>\n      {/*上传组件*/}\n      {isShow && (\n        <div className=\"upload-content\">\n          <div className=\"name\">\n            <span>名称:</span>\n            <textarea rows={2} cols={50} value={name} onChange={(e) => nameChange(e)}>\n              {' '}\n            </textarea>\n          </div>\n          <div className=\"desc\">\n            <span>简介:</span>\n            <textarea rows={5} cols={50} value={desc} onChange={(e) => descChange(e)}>\n              {' '}\n            </textarea>\n          </div>\n          {/*图片预览*/}\n          <div className=\"prev-img\">\n            {!isShowPrev && <input type=\"file\" onChange={(e) => inpChange(e)} />}\n            {!isShowPrev && <i className=\"iconfont icon-tupian\"> </i>}\n            {isShowPrev && <img src={prevImgURL} alt=\"图片预览\" />}\n          </div>\n\n          <ul className=\"channel-list\">\n            {channel.length !== 0 &&\n              channel.map((item, index) => {\n                return (\n                  <li\n                    key={item.id}\n                    onClick={(e) => liClick(item, index)}\n                    className={currentIndex === index ? 'active' : ''}\n                  >\n                    {item.name}\n                  </li>\n                );\n              })}\n          </ul>\n          <div className=\"control-btn\">\n            <button className=\"define\" onClick={(e) => define()}>\n              确定\n            </button>\n            <button className=\"cancel\" onClick={(e) => cancel()}>\n              取消\n            </button>\n          </div>\n        </div>\n      )}\n    </RadioWrapper>\n  );\n};\nexport default memo(Radio);\n","/*\n@Name guobin\n@Description gb-music\n@author guobin\n@date 2021/9/21\n*/\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { HOST_NAME } from '../config';\nimport store from '../store';\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\nimport { createBrowserHistory } from 'history';\nfunction request<T>(config: AxiosRequestConfig) {\n  const instance: AxiosInstance = axios.create({\n    baseURL: HOST_NAME,\n    timeout: 15000\n  });\n  instance.interceptors.request.use(\n    (config) => {\n      return config;\n    },\n    (err) => {\n      console.log(err);\n      return err;\n    }\n  );\n  instance.interceptors.response.use(\n    (res) => {\n      return res.data;\n    },\n    (err) => {\n      if (err.response) {\n        const { status, data } = err.response;\n        if (status * 1 === 403 && data.message === '请登录') {\n          // @ts-ignore\n          store.dispatch(logoutAction());\n          store.dispatch(\n            changeUserMsg({\n              token: '',\n              userName: '',\n              userId: '',\n              avatarUrl: '',\n              createTime: '',\n              updateTime: '',\n              manage: -1,\n              auth: -1\n            })\n          );\n          createBrowserHistory().push({\n            pathname: '/Login'\n          });\n        } else {\n          throw err;\n        }\n      }\n    }\n  );\n  return instance.request<any, T>(config);\n}\nexport default request;\n"],"sourceRoot":""}