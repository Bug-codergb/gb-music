{"version":3,"sources":["constant/NavList.ts","views/discover/style.tsx","views/discover/index.tsx"],"names":["navList","path","name","disCoverList","DiscoverWrapper","styled","div","Discover","props","useState","currentIndex","setCurrentIndex","className","length","map","item","index","onClick","e","history","push","pathname","liClick","renderRoutes","route","routes","withRouter","memo"],"mappings":"yHAIA,wEAAMA,EAAyB,CAC7B,CACEC,KAAM,iBACNC,KAAM,4BAER,CACED,KAAM,cACNC,KAAM,gBAER,CACED,KAAM,gBACNC,KAAM,gBAER,CACED,KAAM,eACNC,KAAM,gBAER,CACED,KAAM,gBACNC,KAAM,6BAGJC,EAA8B,CAClC,CACEF,KAAM,2BACNC,KAAM,4BAER,CACED,KAAM,0BACNC,KAAM,gBAER,CACED,KAAM,yBACNC,KAAM,sBAER,CACED,KAAM,wBACNC,KAAM,gBAER,CACED,KAAM,uBACNC,KAAM,kB,oFC5CGE,E,MAAkBC,EAAOC,IAAV,6mB,gBCQtBC,EAA6B,SAACC,GAAW,IAAD,EACJC,mBAAiB,GADb,mBACrCC,EADqC,KACvBC,EADuB,KAQ5C,OACE,eAACP,EAAD,WACE,qBAAKQ,UAAU,aAAf,SACE,oBAAIA,UAAU,gBAAd,SAC2B,IAAxBT,IAAaU,QACZV,IAAaW,KAAI,SAACC,EAAMC,GACtB,OACE,oBAEEC,QAAS,SAACC,GAAD,OAfT,SAACH,EAAmBC,GAClCL,EAAgBK,GAChBR,EAAMW,QAAQC,KAAK,CACjBC,SAAUN,EAAKd,OAYaqB,CAAQP,EAAMC,IAC9BJ,UAAWF,IAAiBM,EAAQ,SAAW,GAHjD,SAKE,+BAAOD,EAAKb,QAJPa,EAAKd,aAUtB,8BAAMsB,YAAaf,EAAMgB,MAAMC,cAItBC,sBAAWC,eAAKpB","file":"static/js/55.cf57d6a6.chunk.js","sourcesContent":["interface navListType {\n  path: string;\n  name: string;\n}\nconst navList: navListType[] = [\n  {\n    path: '/Home/discover',\n    name: '发现音乐'\n  },\n  {\n    path: '/Home/video',\n    name: '视频'\n  },\n  {\n    path: '/Home/channel',\n    name: '播客'\n  },\n  {\n    path: '/Home/moment',\n    name: '动态'\n  },\n  {\n    path: '/Home/myMusic',\n    name: '我的音乐'\n  }\n];\nconst disCoverList: navListType[] = [\n  {\n    path: '/Home/discover/recommend',\n    name: '热门音乐'\n  },\n  {\n    path: '/Home/discover/playlist',\n    name: '歌单'\n  },\n  {\n    path: '/Home/discover/toplist',\n    name: '排行榜'\n  },\n  {\n    path: '/Home/discover/artist',\n    name: '歌手'\n  },\n  {\n    path: '/Home/discover/album',\n    name: '专辑'\n  }\n];\nexport { navList, disCoverList };\nexport type { navListType };\n","import styled from 'styled-components';\nexport const DiscoverWrapper = styled.div`\n  background-color: #f5f5f5;\n  .list-outer {\n    background-color: #2c323b;\n    height: 55px;\n  }\n  .discover-list {\n    width: 1190px;\n    margin: 0 auto;\n    display: flex;\n    height: 100%;\n    li {\n      cursor: pointer;\n      height: 100%;\n      span {\n        font-size: 16px;\n        padding: 0 15px;\n        display: flex;\n        align-items: center;\n        height: 100%;\n        color: #dddddd;\n      }\n      &.active {\n        span {\n          font-weight: bold;\n          background-color: #ec4141;\n          color: #fff;\n        }\n      }\n    }\n  }\n`;\n","import React, { memo, useState } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\nimport { DiscoverWrapper } from './style';\nimport { disCoverList, navListType } from '../../constant/NavList';\n\ninterface IProps extends RouteComponentProps {\n  route: any;\n}\nconst Discover: React.FC<IProps> = (props) => {\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const liClick = (item: navListType, index: number): void => {\n    setCurrentIndex(index);\n    props.history.push({\n      pathname: item.path\n    });\n  };\n  return (\n    <DiscoverWrapper>\n      <div className=\"list-outer\">\n        <ul className=\"discover-list\">\n          {disCoverList.length !== 0 &&\n            disCoverList.map((item, index) => {\n              return (\n                <li\n                  key={item.path}\n                  onClick={(e) => liClick(item, index)}\n                  className={currentIndex === index ? 'active' : ''}\n                >\n                  <span>{item.name}</span>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n      <div>{renderRoutes(props.route.routes)}</div>\n    </DiscoverWrapper>\n  );\n};\nexport default withRouter(memo(Discover));\n"],"sourceRoot":""}