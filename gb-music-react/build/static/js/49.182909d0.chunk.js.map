{"version":3,"sources":["views/Login/store/actionCreators.tsx","network/user/index.ts","network/login/index.tsx","utils/format.ts","network/channel/index.ts","views/manage/innovate/pages/channelPlay/style.tsx","views/manage/innovate/pages/channelPlay/index.tsx","network/request.tsx"],"names":["changeUserMsg","res","type","userMsg","changeLoginType","loginType","changeUserDetailAction","dispatch","getUserDetail","then","data","love","follow","window","localStorage","setItem","JSON","stringify","userDetail","loginAction","userName","password","props","a","login","token","updateUserExpire","code","changeShow","auth","vip","history","push","pathname","console","log","message","warning","content","style","fontSize","marginTop","logoutAction","clear","userId","avatarUrl","createTime","updateTime","manage","subscriber","thumb","songId","setUserFavorite","id","request","url","method","headers","authorization","store","getState","getIn","getUserFavorite","offset","limit","params","cancelFavorite","getUserSub","uploadAvatar","formData","getOtherUserDetail","getUserChannel","getUserSubPlaylist","getUserMomentData","getUserAllMoment","getSimpleUserInfo","register","formatTime","dateS","fmt","date","Date","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","getAllChannel","getContent","getChannelDetail","addContent","cId","name","description","uploadContentCover","getUserChannelCount","addProgram","addProgramSource","addProgramPlayCount","getHotChannel","getHotChannelContent","getProgramDetail","getProgramURL","getChannelSubUser","getUserChannelPlaylist","ChannelPlayWrapper","styled","div","ChannelPlay","useState","channel","setChannel","useEffect","channelRouter","item","state","category","className","map","index","toString","padStart","onClick","e","src","coverUrl","alt","playCount","withRouter","memo","config","instance","axios","create","baseURL","HOST_NAME","timeout","interceptors","use","err","response","status","createBrowserHistory"],"mappings":"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","file":"static/js/49.182909d0.chunk.js","sourcesContent":["import { message } from 'antd';\r\nimport { login } from '../../../network/login';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { getUserDetail, updateUserExpire } from '../../../network/user';\r\nimport { changeShow } from '../../../components/common/toast/store/actionCreators';\r\nimport { ILoginUserAction } from './type';\r\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\r\n\r\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserMsg',\r\n    userMsg: res\r\n  };\r\n}\r\nfunction changeLoginType(res: number): ILoginUserAction {\r\n  return {\r\n    type: 'changeLoginType',\r\n    loginType: res\r\n  };\r\n}\r\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserDetail',\r\n    userDetail: res\r\n  };\r\n}\r\nfunction deleteUserDetail(): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserDetail',\r\n    userDetail: {\r\n      userId: '',\r\n      userName: '',\r\n      avatarUrl: '',\r\n      subscriber: [],\r\n      thumb: [],\r\n      follow: [{ userId: '' }],\r\n      love: [{ songId: '' }]\r\n    }\r\n  };\r\n}\r\nexport function changeUserDetailAction() {\r\n  return (dispatch: any) => {\r\n    getUserDetail().then((data: any) => {\r\n      const { love, follow } = data;\r\n      if (!love) {\r\n        data.love = [];\r\n      }\r\n      if (!follow) {\r\n        data.follow = [];\r\n      }\r\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\r\n      dispatch(changeUserDetail(data));\r\n    });\r\n  };\r\n}\r\n\r\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const data: any = await login(userName, password);\r\n      if (data) {\r\n        const { token } = data;\r\n        const res: any = await updateUserExpire(token);\r\n        if (res.code * 1 === 200) {\r\n          dispatch(changeShow('您的VIP已经过期，开通VIP后畅想', 3500));\r\n          data.auth = 0;\r\n          delete data.vip;\r\n        }\r\n        await dispatch(changeUserMsg(data));\r\n        await dispatch(changeLoginType(1));\r\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\r\n        window.localStorage.setItem('loginType', '1');\r\n        await dispatch(changeUserDetailAction());\r\n        props.history.push({\r\n          pathname: '/Home'\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      message.warning({\r\n        content: '用户名或者密码错误',\r\n        style: {\r\n          fontSize: '20px',\r\n          marginTop: '5vh'\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n//退出登录\r\nexport function logoutAction() {\r\n  return (dispatch: any) => {\r\n    window.localStorage.clear();\r\n    dispatch(changeLoginType(0));\r\n    dispatch(\r\n      changeUserMsg({\r\n        token: '',\r\n        userName: '',\r\n        userId: '',\r\n        avatarUrl: '',\r\n        createTime: '',\r\n        updateTime: '',\r\n        manage: -1,\r\n        auth: -1\r\n      })\r\n    );\r\n    dispatch(deleteUserDetail());\r\n  };\r\n}\r\n","import request from '../request';\r\nimport store from '../../store/index';\r\n//用户喜欢歌曲\r\nexport function setUserFavorite(id: string) {\r\n  return request({\r\n    url: '/user/favorite',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户喜欢歌曲\r\nexport function getUserFavorite(offset: number, limit: number) {\r\n  return request({\r\n    url: '/user/favorite',\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//取消用户喜欢\r\nexport function cancelFavorite(songId: string) {\r\n  return request({\r\n    url: '/user/favorite/cancel',\r\n    method: 'post',\r\n    data: {\r\n      songId: songId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户收藏\r\nexport function getUserSub(url: string, offset: number, limit: number) {\r\n  return request({\r\n    url: `/sub/user/${url}`,\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取当前登录用户详情\r\nexport function getUserDetail() {\r\n  return request({\r\n    url: '/user/detail',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//上传用户头像\r\nexport function uploadAvatar(formData: FormData) {\r\n  return request({\r\n    url: '/user/upload/avatar',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\r\n      'Content-Type': 'multipart/form-data'\r\n    },\r\n    data: formData\r\n  });\r\n}\r\n//获取其它用户详情\r\nexport function getOtherUserDetail<T>(userId: string) {\r\n  return request<T>({\r\n    url: '/user/other/detail',\r\n    method: 'post',\r\n    data: {\r\n      userId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n\r\n//获取用户创建的电台\r\nexport function getUserChannel(userId: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/user/channel',\r\n    method: 'post',\r\n    data: {\r\n      userId,\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n\r\n//获取用户收藏的歌单\r\nexport function getUserSubPlaylist<T>(userId: string, offset: number, limit: number) {\r\n  return request<T>({\r\n    url: '/sub/user/playlist',\r\n    method: 'post',\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    data: {\r\n      userId\r\n    }\r\n  });\r\n}\r\n//用户VIP是否·过期\r\nexport function updateUserExpire(token: string) {\r\n  return request({\r\n    url: '/user/expire',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: token\r\n    }\r\n  });\r\n}\r\n//获取用户动态数据\r\nexport function getUserMomentData() {\r\n  return request({\r\n    url: '/user/data/moment',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户全部动态\r\nexport function getUserAllMoment(offset: string, limit: string) {\r\n  return request({\r\n    url: '/user/moment',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户简略信息\r\nexport function getSimpleUserInfo<T>(userId: string) {\r\n  return request<T>({\r\n    url: '/user/simple',\r\n    params: {\r\n      userId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n","import request from '../request';\r\n//登录\r\nexport function login(userName: string, password: string) {\r\n  return request({\r\n    url: '/login',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n//注册\r\nexport function register(userName: string, password: string) {\r\n  return request({\r\n    url: '/register',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n","/*格式化时间*/\r\nexport function formatTime(dateS: number | string, fmt: string) {\r\n  let date: Date = new Date(dateS);\r\n  if (/(y+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n  }\r\n  let o = {\r\n    'M+': date.getMonth() + 1,\r\n    'd+': date.getDate(),\r\n    'h+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds()\r\n  };\r\n  for (let k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      // @ts-ignore\r\n      let str = o[k] + '';\r\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\r\n    }\r\n  }\r\n  return fmt || '';\r\n}\r\n\r\nfunction padLeftZero(str: string) {\r\n  return ('00' + str).substr(str.length);\r\n}\r\n","import request from '../request';\r\nimport store from '../../store';\r\n//获取所有频道\r\nexport function getAllChannel() {\r\n  return request({\r\n    url: '/channel/all'\r\n  });\r\n}\r\n//获取频道下内容\r\nexport function getContent(id: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/channel/content',\r\n    params: {\r\n      id,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//获取频道详情\r\nexport function getChannelDetail(id: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/channel/detail',\r\n    params: {\r\n      id,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//添加频道内容\r\nexport function addContent(cId: string, name: string, description: string) {\r\n  return request({\r\n    url: '/channel/content/add',\r\n    method: 'post',\r\n    data: {\r\n      cId,\r\n      name,\r\n      description\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//上传频道内容图片\r\nexport function uploadContentCover(formData: FormData) {\r\n  return request({\r\n    url: '/channel/content/upload',\r\n    data: formData,\r\n    method: 'post',\r\n    headers: {\r\n      'Content-type': 'multipart/form-data',\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户电台数据\r\nexport function getUserChannelCount(userId: string) {\r\n  return request({\r\n    url: '/channel/count',\r\n    params: {\r\n      userId\r\n    }\r\n  });\r\n}\r\n//获取用户电台\r\nexport function getUserChannel(userId: string, cId: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/channel/user',\r\n    params: {\r\n      userId,\r\n      cId,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//添加节目\r\nexport function addProgram(name: string, cId: string) {\r\n  return request({\r\n    url: '/channel/program',\r\n    method: 'post',\r\n    data: {\r\n      name,\r\n      cId\r\n    },\r\n    headers: {\r\n      //@ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//上传节目\r\nexport function addProgramSource(id: string, formData: FormData) {\r\n  return request({\r\n    url: '/channel/program/source',\r\n    method: 'post',\r\n    params: {\r\n      id\r\n    },\r\n    data: formData,\r\n    headers: {\r\n      'Content-type': 'multipart/form-data',\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//为节目添加播放量\r\nexport function addProgramPlayCount(id: string) {\r\n  return request({\r\n    url: '/channel/playCount',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取热门电台\r\nexport function getHotChannel<T>() {\r\n  return request<T>({\r\n    url: '/channel/hot'\r\n  });\r\n}\r\n//获取热门电台内容(电台页)\r\nexport function getHotChannelContent() {\r\n  return request({\r\n    url: '/channel/content/hot'\r\n  });\r\n}\r\n\r\n//获取节目详情(播放)\r\nexport function getProgramDetail(id: string) {\r\n  return request({\r\n    url: '/channel/program/detail',\r\n    params: {\r\n      id\r\n    }\r\n  });\r\n}\r\n//获取节目URL\r\nexport function getProgramURL(id: string) {\r\n  return request({\r\n    url: '/channel/program/url',\r\n    params: {\r\n      id\r\n    }\r\n  });\r\n}\r\n//获取电台收藏者\r\nexport function getChannelSubUser(cId: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/channel/sub/user',\r\n    params: {\r\n      cId,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//获取用户播单\r\nexport function getUserChannelPlaylist<T>() {\r\n  return request<T>({\r\n    url: '/channel/program/list',\r\n    method: 'post',\r\n    data: {},\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n","import styled from 'styled-components';\r\nexport const ChannelPlayWrapper = styled.div`\r\n  background-color: #fff;\r\n  padding: 20px 20px 30px 20px;\r\n  .program-list {\r\n    & > li {\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 10px 0 10px 10px;\r\n      &:nth-child(odd) {\r\n        background-color: #f9f9f9;\r\n      }\r\n      &:nth-child(1),\r\n      &:nth-child(2),\r\n      &:nth-child(3) {\r\n        .index {\r\n          background-color: #ff3a3a;\r\n        }\r\n      }\r\n      .index {\r\n        margin: 0 15px 0 0;\r\n        background-color: #cccccc;\r\n        padding: 5px 6px;\r\n        border-radius: 8px;\r\n        font-size: 13px;\r\n        color: #fff;\r\n        font-weight: bold;\r\n      }\r\n      .img-container {\r\n        width: 50px;\r\n        cursor: pointer;\r\n        img {\r\n          width: 100%;\r\n        }\r\n      }\r\n      .name {\r\n        margin: 0 0 0 20px;\r\n        font-size: 14px;\r\n        color: #656565;\r\n        width: 20%;\r\n        cursor: pointer;\r\n      }\r\n      .channel-name {\r\n        width: 15%;\r\n        color: #656565;\r\n      }\r\n      .cate {\r\n        width: 15%;\r\n        font-size: 13px;\r\n        color: #0086b3;\r\n      }\r\n      .create-time {\r\n        color: #ccc;\r\n        font-size: 13px;\r\n        width: 15%;\r\n      }\r\n      .play-count {\r\n        & > span {\r\n          color: #ccc;\r\n          margin: 0 0 0 5px;\r\n        }\r\n        i {\r\n          color: #ccc;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .empty {\r\n    padding: 180px 0;\r\n  }\r\n`;\r\n","import React, { memo, FC, ReactElement, useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { getUserChannelPlaylist } from '../../../../../network/channel';\r\nimport { ChannelPlayWrapper } from './style';\r\nimport { IChannel } from '../../../../../constant/channel';\r\nimport { formatTime } from '../../../../../utils/format';\r\nimport { Empty } from 'antd';\r\n\r\ninterface IChannelPlaylist {\r\n  id: string;\r\n  name: string;\r\n  playCount: string;\r\n  createTime: string;\r\n  dt: string;\r\n  category: IChannel;\r\n}\r\nconst ChannelPlay: FC<RouteComponentProps> = (props): ReactElement => {\r\n  const [channel, setChannel] = useState<IChannelPlaylist[]>([]);\r\n  useEffect(() => {\r\n    getUserChannelPlaylist<IChannelPlaylist[]>().then((data) => {\r\n      setChannel(data);\r\n    });\r\n  }, []);\r\n  const channelRouter = (item: IChannelPlaylist) => {\r\n    props.history.push({\r\n      pathname: '/Home/channelDetail',\r\n      state: {\r\n        id: item.category.id\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <ChannelPlayWrapper>\r\n      <ul className=\"program-list\">\r\n        {channel &&\r\n          channel.length !== 0 &&\r\n          channel.map((item, index) => {\r\n            return (\r\n              <li key={item.id}>\r\n                <div className=\"index\">{(index + 1).toString().padStart(2, '0')}</div>\r\n                <div className=\"img-container\" onClick={(e) => channelRouter(item)}>\r\n                  <img src={item.category.coverUrl} alt={item.category.name} />\r\n                </div>\r\n                <div className=\"name text-nowrap\" onClick={(e) => channelRouter(item)}>\r\n                  {item.name}\r\n                </div>\r\n                <div className=\"channel-name\">{item.category.name}</div>\r\n                <div className=\"cate\">{item.category.channel?.name}</div>\r\n                <div className=\"create-time\">{formatTime(item.createTime, 'yyyy-MM-dd hh:mm')}</div>\r\n                <div className=\"play-count\">\r\n                  <i className=\"iconfont icon-play2\"> </i>\r\n                  <span>{item.playCount}</span>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n      {channel && channel.length < 1 && (\r\n        <div className=\"empty\">\r\n          <Empty description={'暂无声音'} />\r\n        </div>\r\n      )}\r\n    </ChannelPlayWrapper>\r\n  );\r\n};\r\nexport default withRouter(memo(ChannelPlay));\r\n","/*\r\n@Name guobin\r\n@Description gb-music\r\n@author guobin\r\n@date 2021/9/21\r\n*/\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport { HOST_NAME } from '../config';\r\nimport store from '../store';\r\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\r\nimport { createBrowserHistory } from 'history';\r\nfunction request<T>(config: AxiosRequestConfig) {\r\n  const instance: AxiosInstance = axios.create({\r\n    baseURL: HOST_NAME,\r\n    timeout: 15000\r\n  });\r\n  instance.interceptors.request.use(\r\n    (config) => {\r\n      return config;\r\n    },\r\n    (err) => {\r\n      console.log(err);\r\n      return err;\r\n    }\r\n  );\r\n  instance.interceptors.response.use(\r\n    (res) => {\r\n      return res.data;\r\n    },\r\n    (err) => {\r\n      if (err.response) {\r\n        const { status, data } = err.response;\r\n        if (status * 1 === 403 && data.message === '请登录') {\r\n          // @ts-ignore\r\n          store.dispatch(logoutAction());\r\n          store.dispatch(\r\n            changeUserMsg({\r\n              token: '',\r\n              userName: '',\r\n              userId: '',\r\n              avatarUrl: '',\r\n              createTime: '',\r\n              updateTime: '',\r\n              manage: -1,\r\n              auth: -1\r\n            })\r\n          );\r\n          createBrowserHistory().push({\r\n            pathname: '/Login'\r\n          });\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n  );\r\n  return instance.request<any, T>(config);\r\n}\r\nexport default request;\r\n"],"sourceRoot":""}