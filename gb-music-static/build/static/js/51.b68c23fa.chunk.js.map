{"version":3,"sources":["views/Login/store/actionCreators.tsx","network/user/index.ts","network/login/index.tsx","views/manage/innovate/pages/fans/style.tsx","views/manage/innovate/pages/fans/index.tsx","network/manage/fans.ts","network/request.tsx"],"names":["changeUserMsg","res","type","userMsg","changeLoginType","loginType","changeUserDetailAction","dispatch","getUserDetail","then","data","love","follow","window","localStorage","setItem","JSON","stringify","userDetail","loginAction","userName","password","props","a","login","token","updateUserExpire","code","changeShow","auth","vip","history","push","pathname","console","log","message","warning","content","style","fontSize","marginTop","logoutAction","clear","userId","avatarUrl","createTime","updateTime","manage","subscriber","thumb","songId","setUserFavorite","id","request","url","method","headers","authorization","store","getState","getIn","getUserFavorite","offset","limit","params","cancelFavorite","getUserSub","uploadAvatar","formData","getOtherUserDetail","getUserChannel","getUserSubPlaylist","getUserMomentData","getUserAllMoment","getSimpleUserInfo","register","FansWrapper","styled","div","Fans","useState","fans","setFans","setCount","useEffect","count","className","length","map","item","index","onClick","e","state","user","userRouter","src","alt","videoCount","momentCount","channelCount","image","Empty","PRESENTED_IMAGE_SIMPLE","description","withRouter","memo","config","instance","axios","create","baseURL","HOST_NAME","timeout","interceptors","use","err","response","status","createBrowserHistory"],"mappings":"mUAQO,SAASA,EAAcC,GAC5B,MAAO,CACLC,KAAM,gBACNC,QAASF,GAGb,SAASG,EAAgBH,GACvB,MAAO,CACLC,KAAM,kBACNG,UAAWJ,GAuBR,SAASK,IACd,OAAO,SAACC,GACNC,cAAgBC,MAAK,SAACC,GAAe,IAC3BC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OACTD,IACHD,EAAKC,KAAO,IAETC,IACHF,EAAKE,OAAS,IAEhBC,OAAOC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUP,IACzDH,EA9BG,CACLL,KAAM,mBACNgB,WA4B4BR,QAKzB,SAASS,EAAYC,EAAkBC,EAAkBC,GAC9D,8CAAO,WAAOf,GAAP,iBAAAgB,EAAA,+EAEqBC,YAAMJ,EAAUC,GAFrC,YAEGX,EAFH,gCAIOe,EAAUf,EAAVe,MAJP,SAKsBC,YAAiBD,GALvC,cAMc,EANd,OAMOE,OAAa,MACnBpB,EAASqB,YAAW,iFAAsB,OAC1ClB,EAAKmB,KAAO,SACLnB,EAAKoB,KATb,UAWKvB,EAASP,EAAcU,IAX5B,yBAYKH,EAASH,EAAgB,IAZ9B,eAaDS,OAAOC,aAAaC,QAAQ,UAAWC,KAAKC,UAAUP,IACtDG,OAAOC,aAAaC,QAAQ,YAAa,KAdxC,UAeKR,EAASD,KAfd,QAgBDgB,EAAMS,QAAQC,KAAK,CACjBC,SAAU,UAjBX,0DAqBHC,QAAQC,IAAR,MACAC,IAAQC,QAAQ,CACdC,QAAS,yDACTC,MAAO,CACLC,SAAU,OACVC,UAAW,SA1BZ,0DAAP,sDAiCK,SAASC,IACd,OAAO,SAACnC,GACNM,OAAOC,aAAa6B,QACpBpC,EAASH,EAAgB,IACzBG,EACEP,EAAc,CACZyB,MAAO,GACPL,SAAU,GACVwB,OAAQ,GACRC,UAAW,GACXC,WAAY,GACZC,WAAY,GACZC,QAAS,EACTnB,MAAO,KAGXtB,EA/EK,CACLL,KAAM,mBACNgB,WAAY,CACV0B,OAAQ,GACRxB,SAAU,GACVyB,UAAW,GACXI,WAAY,GACZC,MAAO,GACPtC,OAAQ,CAAC,CAAEgC,OAAQ,KACnBjC,KAAM,CAAC,CAAEwC,OAAQ,W,iCCpCvB,8cAGO,SAASC,EAAgBC,GAC9B,OAAOC,YAAQ,CACbC,IAAK,iBACLC,OAAQ,OACR9C,KAAM,CACJ2C,MAEFI,QAAS,CAEPC,cAAeC,IAAMC,WAAWC,MAAM,CAAC,eAAgB,QAAS,YAAYpC,SAK3E,SAASqC,EAAgBC,EAAgBC,GAC9C,OAAOV,YAAQ,CACbC,IAAK,iBACLU,OAAQ,CACNF,SACAC,SAEFP,QAAS,CAEPC,cAAeC,IAAMC,WAAWC,MAAM,CAAC,eAAgB,QAAS,YAAYpC,SAK3E,SAASyC,EAAef,GAC7B,OAAOG,YAAQ,CACbC,IAAK,wBACLC,OAAQ,OACR9C,KAAM,CACJyC,OAAQA,GAEVM,QAAS,CAEPC,cAAeC,IAAMC,WAAWC,MAAM,CAAC,eAAgB,QAAS,YAAYpC,SAK3E,SAAS0C,EAAWZ,EAAaQ,EAAgBC,GACtD,OAAOV,YAAQ,CACbC,IAAI,aAAD,OAAeA,GAClBU,OAAQ,CACNF,SACAC,SAEFP,QAAS,CAEPC,cAAeC,IAAMC,WAAWC,MAAM,CAAC,eAAgB,QAAS,YAAYpC,SAK3E,SAASjB,IACd,OAAO8C,YAAQ,CACbC,IAAK,eACLE,QAAS,CAEPC,cAAeC,IAAMC,WAAWC,MAAM,CAAC,eAAgB,QAAS,YAAYpC,SAK3E,SAAS2C,EAAaC,GAC3B,OAAOf,YAAQ,CACbC,IAAK,sBACLC,OAAQ,OACRC,QAAS,CAEPC,cAAeC,IAAMC,WAAWC,MAAM,CAAC,eAAgB,QAAS,YAAYpC,MAC5E,eAAgB,uBAElBf,KAAM2D,IAIH,SAASC,EAAsB1B,GACpC,OAAOU,YAAW,CAChBC,IAAK,qBACLC,OAAQ,OACR9C,KAAM,CACJkC,UAEFa,QAAS,CAEPC,cAAeC,IAAMC,WAAWC,MAAM,CAAC,eAAgB,QAAS,YAAYpC,SAM3E,SAAS8C,EAAe3B,EAAgBmB,EAAgBC,GAC7D,OAAOV,YAAQ,CACbC,IAAK,gBACLC,OAAQ,OACR9C,KAAM,CACJkC,SACAmB,SACAC,SAEFP,QAAS,CAEPC,cAAeC,IAAMC,WAAWC,MAAM,CAAC,eAAgB,QAAS,YAAYpC,SAM3E,SAAS+C,EAAsB5B,EAAgBmB,EAAgBC,GACpE,OAAOV,YAAW,CAChBC,IAAK,qBACLC,OAAQ,OACRS,OAAQ,CACNF,SACAC,SAEFtD,KAAM,CACJkC,YAKC,SAASlB,EAAiBD,GAC/B,OAAO6B,YAAQ,CACbC,IAAK,eACLC,OAAQ,OACRC,QAAS,CAEPC,cAAejC,KAKd,SAASgD,IACd,OAAOnB,YAAQ,CACbC,IAAK,oBACLC,OAAQ,OACRC,QAAS,CAEPC,cAAeC,IAAMC,WAAWC,MAAM,CAAC,eAAgB,QAAS,YAAYpC,SAK3E,SAASiD,EAAiBX,EAAgBC,GAC/C,OAAOV,YAAQ,CACbC,IAAK,eACLC,OAAQ,OACR9C,KAAM,CACJqD,SACAC,SAEFP,QAAS,CAEPC,cAAeC,IAAMC,WAAWC,MAAM,CAAC,eAAgB,QAAS,YAAYpC,SAK3E,SAASkD,EAAqB/B,GACnC,OAAOU,YAAW,CAChBC,IAAK,eACLU,OAAQ,CACNrB,UAEFa,QAAS,CAEPC,cAAeC,IAAMC,WAAWC,MAAM,CAAC,eAAgB,QAAS,YAAYpC,W,iCC7KlF,gFAEO,SAASD,EAAMJ,EAAkBC,GACtC,OAAOiC,YAAQ,CACbC,IAAK,SACLC,OAAQ,OACR9C,KAAM,CACJU,WACAC,cAKC,SAASuD,EAASxD,EAAkBC,GACzC,OAAOiC,YAAQ,CACbC,IAAK,YACLC,OAAQ,OACR9C,KAAM,CACJU,WACAC,gB,yFClBOwD,E,MAAcC,EAAOC,IAAV,2jC,sBCYlBC,EAAgC,SAAC1D,GAAyB,IAAD,EACrC2D,mBAAkB,IADmB,mBACtDC,EADsD,KAChDC,EADgD,OAEnCF,mBAAiB,GAFkB,mBAE/CG,GAF+C,WAG7DC,qBAAU,WCdL,IAAqBtB,EAAgBC,GAAhBD,EDeZ,ECf4BC,EDezB,GCdVV,YAAQ,CACbC,IAAK,aACLC,OAAQ,OACRC,QAAS,CAEPC,cAAeC,IAAMC,WAAWC,MAAM,CAAC,eAAgB,QAAS,YAAYpC,OAE9EwC,OAAQ,CACNF,SACAC,YDKiBvD,MAAK,SAACC,GACvByE,EAAQzE,EAAKwE,MACbE,EAAS1E,EAAK4E,YAEf,IASH,OACE,eAACT,EAAD,WACE,oBAAIU,UAAU,WAAd,SACGL,GACiB,IAAhBA,EAAKM,QACLN,EAAKO,KAAI,SAACC,EAAMC,GAAW,IAAD,IACxB,OACE,+BACE,qBAAKJ,UAAU,gBAAgBK,QAAS,SAACC,GAAD,OAhBnC,SAACH,GAClBpE,EAAMS,QAAQC,KAAK,CACjBC,SAAU,mBACV6D,MAAO,CACLlD,OAAQ8C,EAAKK,KAAKnD,UAYqCoD,CAAWN,IAA1D,SACE,qBAAKO,IAAG,UAAEP,EAAKK,YAAP,aAAE,EAAWlD,UAAWqD,IAAG,UAAER,EAAKK,YAAP,aAAE,EAAW3E,aAElD,sBAAKmE,UAAU,YAAf,UACE,gCACE,mBAAGA,UAAU,OAAb,gCACA,mBAAGA,UAAU,QAAb,SAAsBG,EAAKS,gBAE7B,gCACE,mBAAGZ,UAAU,OAAb,gCACA,mBAAGA,UAAU,QAAb,SAAsBG,EAAKU,iBAE7B,gCACE,mBAAGb,UAAU,OAAb,gCACA,mBAAGA,UAAU,QAAb,SAAsBG,EAAKW,uBAfxBX,EAAKrC,SAsBrB6B,GAAwB,IAAhBA,EAAKM,QACZ,qBAAKD,UAAU,aAAf,SACE,cAAC,IAAD,CAAOe,MAAOC,IAAMC,uBAAwBC,YAAa,yCAMpDC,sBAAWC,eAAK3B,K,gCEnE/B,sDA0De1B,IA/Cf,SAAoBsD,GAClB,IAAMC,EAA0BC,IAAMC,OAAO,CAC3CC,QAASC,IACTC,QAAS,OA0CX,OAxCAL,EAASM,aAAa7D,QAAQ8D,KAC5B,SAACR,GACC,OAAOA,KAET,SAACS,GAEC,OADAnF,QAAQC,IAAIkF,GACLA,KAGXR,EAASM,aAAaG,SAASF,KAC7B,SAACnH,GACC,OAAOA,EAAIS,QAEb,SAAC2G,GACC,GAAIA,EAAIC,SAAU,CAAC,IAAD,EACSD,EAAIC,SAArBC,EADQ,EACRA,OAAQ7G,EADA,EACAA,KAChB,GAAa,EAAT6G,IAAe,KAAwB,uBAAjB7G,EAAK0B,QAmB7B,MAAMiF,EAjBN1D,IAAMpD,SAASmC,eACfiB,IAAMpD,SACJP,YAAc,CACZyB,MAAO,GACPL,SAAU,GACVwB,OAAQ,GACRC,UAAW,GACXC,WAAY,GACZC,WAAY,GACZC,QAAS,EACTnB,MAAO,KAGX2F,cAAuBxF,KAAK,CAC1BC,SAAU,eAQb4E,EAASvD,QAAgBsD","file":"static/js/51.b68c23fa.chunk.js","sourcesContent":["import { message } from 'antd';\nimport { login } from '../../../network/login';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { getUserDetail, updateUserExpire } from '../../../network/user';\nimport { changeShow } from '../../../components/common/toast/store/actionCreators';\nimport { ILoginUserAction } from './type';\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\n\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\n  return {\n    type: 'changeUserMsg',\n    userMsg: res\n  };\n}\nfunction changeLoginType(res: number): ILoginUserAction {\n  return {\n    type: 'changeLoginType',\n    loginType: res\n  };\n}\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: res\n  };\n}\nfunction deleteUserDetail(): ILoginUserAction {\n  return {\n    type: 'changeUserDetail',\n    userDetail: {\n      userId: '',\n      userName: '',\n      avatarUrl: '',\n      subscriber: [],\n      thumb: [],\n      follow: [{ userId: '' }],\n      love: [{ songId: '' }]\n    }\n  };\n}\nexport function changeUserDetailAction() {\n  return (dispatch: any) => {\n    getUserDetail().then((data: any) => {\n      const { love, follow } = data;\n      if (!love) {\n        data.love = [];\n      }\n      if (!follow) {\n        data.follow = [];\n      }\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\n      dispatch(changeUserDetail(data));\n    });\n  };\n}\n\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\n  return async (dispatch: any) => {\n    try {\n      const data: any = await login(userName, password);\n      if (data) {\n        const { token } = data;\n        const res: any = await updateUserExpire(token);\n        if (res.code * 1 === 200) {\n          dispatch(changeShow('您的VIP已经过期，开通VIP后畅想', 3500));\n          data.auth = 0;\n          delete data.vip;\n        }\n        await dispatch(changeUserMsg(data));\n        await dispatch(changeLoginType(1));\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\n        window.localStorage.setItem('loginType', '1');\n        await dispatch(changeUserDetailAction());\n        props.history.push({\n          pathname: '/Home'\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      message.warning({\n        content: '用户名或者密码错误',\n        style: {\n          fontSize: '20px',\n          marginTop: '5vh'\n        }\n      });\n    }\n  };\n}\n//退出登录\nexport function logoutAction() {\n  return (dispatch: any) => {\n    window.localStorage.clear();\n    dispatch(changeLoginType(0));\n    dispatch(\n      changeUserMsg({\n        token: '',\n        userName: '',\n        userId: '',\n        avatarUrl: '',\n        createTime: '',\n        updateTime: '',\n        manage: -1,\n        auth: -1\n      })\n    );\n    dispatch(deleteUserDetail());\n  };\n}\n","import request from '../request';\nimport store from '../../store/index';\n//用户喜欢歌曲\nexport function setUserFavorite(id: string) {\n  return request({\n    url: '/user/favorite',\n    method: 'post',\n    data: {\n      id\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户喜欢歌曲\nexport function getUserFavorite(offset: number, limit: number) {\n  return request({\n    url: '/user/favorite',\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//取消用户喜欢\nexport function cancelFavorite(songId: string) {\n  return request({\n    url: '/user/favorite/cancel',\n    method: 'post',\n    data: {\n      songId: songId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户收藏\nexport function getUserSub(url: string, offset: number, limit: number) {\n  return request({\n    url: `/sub/user/${url}`,\n    params: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取当前登录用户详情\nexport function getUserDetail() {\n  return request({\n    url: '/user/detail',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//上传用户头像\nexport function uploadAvatar(formData: FormData) {\n  return request({\n    url: '/user/upload/avatar',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\n      'Content-Type': 'multipart/form-data'\n    },\n    data: formData\n  });\n}\n//获取其它用户详情\nexport function getOtherUserDetail<T>(userId: string) {\n  return request<T>({\n    url: '/user/other/detail',\n    method: 'post',\n    data: {\n      userId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户创建的电台\nexport function getUserChannel(userId: string, offset: number, limit: number) {\n  return request({\n    url: '/user/channel',\n    method: 'post',\n    data: {\n      userId,\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n\n//获取用户收藏的歌单\nexport function getUserSubPlaylist<T>(userId: string, offset: number, limit: number) {\n  return request<T>({\n    url: '/sub/user/playlist',\n    method: 'post',\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      userId\n    }\n  });\n}\n//用户VIP是否·过期\nexport function updateUserExpire(token: string) {\n  return request({\n    url: '/user/expire',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: token\n    }\n  });\n}\n//获取用户动态数据\nexport function getUserMomentData() {\n  return request({\n    url: '/user/data/moment',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户全部动态\nexport function getUserAllMoment(offset: string, limit: string) {\n  return request({\n    url: '/user/moment',\n    method: 'post',\n    data: {\n      offset,\n      limit\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n//获取用户简略信息\nexport function getSimpleUserInfo<T>(userId: string) {\n  return request<T>({\n    url: '/user/simple',\n    params: {\n      userId\n    },\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    }\n  });\n}\n","import request from '../request';\n//登录\nexport function login(userName: string, password: string) {\n  return request({\n    url: '/login',\n    method: 'post',\n    data: {\n      userName,\n      password\n    }\n  });\n}\n//注册\nexport function register(userName: string, password: string) {\n  return request({\n    url: '/register',\n    method: 'post',\n    data: {\n      userName,\n      password\n    }\n  });\n}\n","import styled from 'styled-components';\nexport const FansWrapper = styled.div`\n  background-color: #fff;\n  padding: 20px 0;\n  .fan-list {\n    display: flex;\n    flex-wrap: wrap;\n    & > li {\n      display: flex;\n      align-items: center;\n      padding: 20px 30px 20px 20px;\n      border-left: 2px solid #f3f3f3;\n      border-bottom: 2px solid #f3f3f3;\n      .right-msg {\n        display: flex;\n        & > div {\n          padding: 0 10px;\n          .name {\n            font-size: 14px;\n            color: #999999;\n          }\n          .value {\n            font-weight: bold;\n            font-size: 18px;\n            color: #333;\n          }\n        }\n      }\n    }\n    .img-container {\n      width: 120px;\n      height: 120px;\n      background-color: #000c17;\n      position: relative;\n      border-radius: 8px;\n      overflow: hidden;\n      img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n      }\n    }\n  }\n  .fans-empty {\n    padding: 200px 0;\n    display: flex;\n    justify-content: center;\n  }\n`;\n","import React, { memo, FC, ReactElement, useEffect, useState } from 'react';\nimport { getUserFans } from '../../../../../network/manage/fans';\nimport { IUser } from '../../../../../constant/user';\nimport { FansWrapper } from './style';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { Empty } from 'antd';\ninterface IFans {\n  id: string;\n  user: IUser;\n  channelCount: number;\n  momentCount: number;\n  videoCount: number;\n}\nconst Fans: FC<RouteComponentProps> = (props): ReactElement => {\n  const [fans, setFans] = useState<IFans[]>([]);\n  const [count, setCount] = useState<number>(0);\n  useEffect(() => {\n    getUserFans(0, 30).then((data: any) => {\n      setFans(data.fans);\n      setCount(data.count);\n    });\n  }, []);\n  const userRouter = (item: IFans) => {\n    props.history.push({\n      pathname: '/Home/userDetail',\n      state: {\n        userId: item.user.userId\n      }\n    });\n  };\n  return (\n    <FansWrapper>\n      <ul className=\"fan-list\">\n        {fans &&\n          fans.length !== 0 &&\n          fans.map((item, index) => {\n            return (\n              <li key={item.id}>\n                <div className=\"img-container\" onClick={(e) => userRouter(item)}>\n                  <img src={item.user?.avatarUrl} alt={item.user?.userName} />\n                </div>\n                <div className=\"right-msg\">\n                  <div>\n                    <p className=\"name\">视频数</p>\n                    <p className=\"value\">{item.videoCount}</p>\n                  </div>\n                  <div>\n                    <p className=\"name\">动态数</p>\n                    <p className=\"value\">{item.momentCount}</p>\n                  </div>\n                  <div>\n                    <p className=\"name\">声音数</p>\n                    <p className=\"value\">{item.channelCount}</p>\n                  </div>\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n      {fans && fans.length === 0 && (\n        <div className=\"fans-empty\">\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'暂无粉丝哦'} />\n        </div>\n      )}\n    </FansWrapper>\n  );\n};\nexport default withRouter(memo(Fans));\n","import request from '../request';\nimport store from '../../store';\nexport function getUserFans(offset: number, limit: number) {\n  return request({\n    url: '/user/fans',\n    method: 'post',\n    headers: {\n      // @ts-ignore\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\n    },\n    params: {\n      offset,\n      limit\n    }\n  });\n}\n","/*\n@Name guobin\n@Description gb-music\n@author guobin\n@date 2021/9/21\n*/\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { HOST_NAME } from '../config';\nimport store from '../store';\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\nimport { createBrowserHistory } from 'history';\nfunction request<T>(config: AxiosRequestConfig) {\n  const instance: AxiosInstance = axios.create({\n    baseURL: HOST_NAME,\n    timeout: 15000\n  });\n  instance.interceptors.request.use(\n    (config) => {\n      return config;\n    },\n    (err) => {\n      console.log(err);\n      return err;\n    }\n  );\n  instance.interceptors.response.use(\n    (res) => {\n      return res.data;\n    },\n    (err) => {\n      if (err.response) {\n        const { status, data } = err.response;\n        if (status * 1 === 403 && data.message === '请登录') {\n          // @ts-ignore\n          store.dispatch(logoutAction());\n          store.dispatch(\n            changeUserMsg({\n              token: '',\n              userName: '',\n              userId: '',\n              avatarUrl: '',\n              createTime: '',\n              updateTime: '',\n              manage: -1,\n              auth: -1\n            })\n          );\n          createBrowserHistory().push({\n            pathname: '/Login'\n          });\n        } else {\n          throw err;\n        }\n      }\n    }\n  );\n  return instance.request<any, T>(config);\n}\nexport default request;\n"],"sourceRoot":""}