{"version":3,"sources":["views/Login/store/actionCreators.tsx","network/user/index.ts","network/login/index.tsx","network/channel/index.ts","views/manage/innovate/pages/radio/style.tsx","views/manage/innovate/pages/radio/index.tsx","network/request.tsx"],"names":["changeUserMsg","res","type","userMsg","changeLoginType","loginType","changeUserDetailAction","dispatch","getUserDetail","then","data","love","follow","window","localStorage","setItem","JSON","stringify","userDetail","loginAction","userName","password","props","a","login","token","updateUserExpire","code","changeShow","auth","vip","history","push","pathname","console","log","message","warning","content","style","fontSize","marginTop","logoutAction","clear","userId","avatarUrl","createTime","updateTime","manage","subscriber","thumb","songId","setUserFavorite","id","request","url","method","headers","authorization","store","getState","getIn","getUserFavorite","offset","limit","params","cancelFavorite","getUserSub","uploadAvatar","formData","getOtherUserDetail","getUserChannel","getUserSubPlaylist","getUserMomentData","getUserAllMoment","getSimpleUserInfo","register","getAllChannel","getContent","getChannelDetail","addContent","cId","name","description","uploadContentCover","getUserChannelCount","addProgram","addProgramSource","addProgramPlayCount","getHotChannel","getHotChannelContent","getProgramDetail","getProgramURL","getChannelSubUser","getUserChannelPlaylist","RadioWrapper","styled","div","memo","withRouter","useState","channel","setChannel","userChannel","setUserChannel","useSelector","state","useEffect","liClick","e","item","index","stopPropagation","className","length","map","backgroundImage","picUrl","onClick","filter","iten","it","count","config","instance","axios","create","baseURL","HOST_NAME","timeout","interceptors","use","err","response","status","createBrowserHistory"],"mappings":"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","file":"static/js/50.405760b3.chunk.js","sourcesContent":["import { message } from 'antd';\r\nimport { login } from '../../../network/login';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { getUserDetail, updateUserExpire } from '../../../network/user';\r\nimport { changeShow } from '../../../components/common/toast/store/actionCreators';\r\nimport { ILoginUserAction } from './type';\r\nimport { IUserDetail, IUserMsg } from '../../../constant/store/login';\r\n\r\nexport function changeUserMsg(res: IUserMsg): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserMsg',\r\n    userMsg: res\r\n  };\r\n}\r\nfunction changeLoginType(res: number): ILoginUserAction {\r\n  return {\r\n    type: 'changeLoginType',\r\n    loginType: res\r\n  };\r\n}\r\nfunction changeUserDetail(res: IUserDetail): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserDetail',\r\n    userDetail: res\r\n  };\r\n}\r\nfunction deleteUserDetail(): ILoginUserAction {\r\n  return {\r\n    type: 'changeUserDetail',\r\n    userDetail: {\r\n      userId: '',\r\n      userName: '',\r\n      avatarUrl: '',\r\n      subscriber: [],\r\n      thumb: [],\r\n      follow: [{ userId: '' }],\r\n      love: [{ songId: '' }]\r\n    }\r\n  };\r\n}\r\nexport function changeUserDetailAction() {\r\n  return (dispatch: any) => {\r\n    getUserDetail().then((data: any) => {\r\n      const { love, follow } = data;\r\n      if (!love) {\r\n        data.love = [];\r\n      }\r\n      if (!follow) {\r\n        data.follow = [];\r\n      }\r\n      window.localStorage.setItem('userDetail', JSON.stringify(data));\r\n      dispatch(changeUserDetail(data));\r\n    });\r\n  };\r\n}\r\n\r\nexport function loginAction(userName: string, password: string, props: RouteComponentProps) {\r\n  return async (dispatch: any) => {\r\n    try {\r\n      const data: any = await login(userName, password);\r\n      if (data) {\r\n        const { token } = data;\r\n        const res: any = await updateUserExpire(token);\r\n        if (res.code * 1 === 200) {\r\n          dispatch(changeShow('您的VIP已经过期，开通VIP后畅想', 3500));\r\n          data.auth = 0;\r\n          delete data.vip;\r\n        }\r\n        await dispatch(changeUserMsg(data));\r\n        await dispatch(changeLoginType(1));\r\n        window.localStorage.setItem('userMsg', JSON.stringify(data));\r\n        window.localStorage.setItem('loginType', '1');\r\n        await dispatch(changeUserDetailAction());\r\n        props.history.push({\r\n          pathname: '/Home'\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      message.warning({\r\n        content: '用户名或者密码错误',\r\n        style: {\r\n          fontSize: '20px',\r\n          marginTop: '5vh'\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n//退出登录\r\nexport function logoutAction() {\r\n  return (dispatch: any) => {\r\n    window.localStorage.clear();\r\n    dispatch(changeLoginType(0));\r\n    dispatch(\r\n      changeUserMsg({\r\n        token: '',\r\n        userName: '',\r\n        userId: '',\r\n        avatarUrl: '',\r\n        createTime: '',\r\n        updateTime: '',\r\n        manage: -1,\r\n        auth: -1\r\n      })\r\n    );\r\n    dispatch(deleteUserDetail());\r\n  };\r\n}\r\n","import request from '../request';\r\nimport store from '../../store/index';\r\n//用户喜欢歌曲\r\nexport function setUserFavorite(id: string) {\r\n  return request({\r\n    url: '/user/favorite',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户喜欢歌曲\r\nexport function getUserFavorite(offset: number, limit: number) {\r\n  return request({\r\n    url: '/user/favorite',\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//取消用户喜欢\r\nexport function cancelFavorite(songId: string) {\r\n  return request({\r\n    url: '/user/favorite/cancel',\r\n    method: 'post',\r\n    data: {\r\n      songId: songId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户收藏\r\nexport function getUserSub(url: string, offset: number, limit: number) {\r\n  return request({\r\n    url: `/sub/user/${url}`,\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取当前登录用户详情\r\nexport function getUserDetail() {\r\n  return request({\r\n    url: '/user/detail',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//上传用户头像\r\nexport function uploadAvatar(formData: FormData) {\r\n  return request({\r\n    url: '/user/upload/avatar',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token,\r\n      'Content-Type': 'multipart/form-data'\r\n    },\r\n    data: formData\r\n  });\r\n}\r\n//获取其它用户详情\r\nexport function getOtherUserDetail<T>(userId: string) {\r\n  return request<T>({\r\n    url: '/user/other/detail',\r\n    method: 'post',\r\n    data: {\r\n      userId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n\r\n//获取用户创建的电台\r\nexport function getUserChannel(userId: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/user/channel',\r\n    method: 'post',\r\n    data: {\r\n      userId,\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n\r\n//获取用户收藏的歌单\r\nexport function getUserSubPlaylist<T>(userId: string, offset: number, limit: number) {\r\n  return request<T>({\r\n    url: '/sub/user/playlist',\r\n    method: 'post',\r\n    params: {\r\n      offset,\r\n      limit\r\n    },\r\n    data: {\r\n      userId\r\n    }\r\n  });\r\n}\r\n//用户VIP是否·过期\r\nexport function updateUserExpire(token: string) {\r\n  return request({\r\n    url: '/user/expire',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: token\r\n    }\r\n  });\r\n}\r\n//获取用户动态数据\r\nexport function getUserMomentData() {\r\n  return request({\r\n    url: '/user/data/moment',\r\n    method: 'post',\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户全部动态\r\nexport function getUserAllMoment(offset: string, limit: string) {\r\n  return request({\r\n    url: '/user/moment',\r\n    method: 'post',\r\n    data: {\r\n      offset,\r\n      limit\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户简略信息\r\nexport function getSimpleUserInfo<T>(userId: string) {\r\n  return request<T>({\r\n    url: '/user/simple',\r\n    params: {\r\n      userId\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n","import request from '../request';\r\n//登录\r\nexport function login(userName: string, password: string) {\r\n  return request({\r\n    url: '/login',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n//注册\r\nexport function register(userName: string, password: string) {\r\n  return request({\r\n    url: '/register',\r\n    method: 'post',\r\n    data: {\r\n      userName,\r\n      password\r\n    }\r\n  });\r\n}\r\n","import request from '../request';\r\nimport store from '../../store';\r\n//获取所有频道\r\nexport function getAllChannel() {\r\n  return request({\r\n    url: '/channel/all'\r\n  });\r\n}\r\n//获取频道下内容\r\nexport function getContent(id: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/channel/content',\r\n    params: {\r\n      id,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//获取频道详情\r\nexport function getChannelDetail(id: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/channel/detail',\r\n    params: {\r\n      id,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//添加频道内容\r\nexport function addContent(cId: string, name: string, description: string) {\r\n  return request({\r\n    url: '/channel/content/add',\r\n    method: 'post',\r\n    data: {\r\n      cId,\r\n      name,\r\n      description\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//上传频道内容图片\r\nexport function uploadContentCover(formData: FormData) {\r\n  return request({\r\n    url: '/channel/content/upload',\r\n    data: formData,\r\n    method: 'post',\r\n    headers: {\r\n      'Content-type': 'multipart/form-data',\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取用户电台数据\r\nexport function getUserChannelCount(userId: string) {\r\n  return request({\r\n    url: '/channel/count',\r\n    params: {\r\n      userId\r\n    }\r\n  });\r\n}\r\n//获取用户电台\r\nexport function getUserChannel(userId: string, cId: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/channel/user',\r\n    params: {\r\n      userId,\r\n      cId,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//添加节目\r\nexport function addProgram(name: string, cId: string) {\r\n  return request({\r\n    url: '/channel/program',\r\n    method: 'post',\r\n    data: {\r\n      name,\r\n      cId\r\n    },\r\n    headers: {\r\n      //@ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//上传节目\r\nexport function addProgramSource(id: string, formData: FormData) {\r\n  return request({\r\n    url: '/channel/program/source',\r\n    method: 'post',\r\n    params: {\r\n      id\r\n    },\r\n    data: formData,\r\n    headers: {\r\n      'Content-type': 'multipart/form-data',\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//为节目添加播放量\r\nexport function addProgramPlayCount(id: string) {\r\n  return request({\r\n    url: '/channel/playCount',\r\n    method: 'post',\r\n    data: {\r\n      id\r\n    },\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n//获取热门电台\r\nexport function getHotChannel<T>() {\r\n  return request<T>({\r\n    url: '/channel/hot'\r\n  });\r\n}\r\n//获取热门电台内容(电台页)\r\nexport function getHotChannelContent() {\r\n  return request({\r\n    url: '/channel/content/hot'\r\n  });\r\n}\r\n\r\n//获取节目详情(播放)\r\nexport function getProgramDetail(id: string) {\r\n  return request({\r\n    url: '/channel/program/detail',\r\n    params: {\r\n      id\r\n    }\r\n  });\r\n}\r\n//获取节目URL\r\nexport function getProgramURL(id: string) {\r\n  return request({\r\n    url: '/channel/program/url',\r\n    params: {\r\n      id\r\n    }\r\n  });\r\n}\r\n//获取电台收藏者\r\nexport function getChannelSubUser(cId: string, offset: number, limit: number) {\r\n  return request({\r\n    url: '/channel/sub/user',\r\n    params: {\r\n      cId,\r\n      offset,\r\n      limit\r\n    }\r\n  });\r\n}\r\n//获取用户播单\r\nexport function getUserChannelPlaylist<T>() {\r\n  return request<T>({\r\n    url: '/channel/program/list',\r\n    method: 'post',\r\n    data: {},\r\n    headers: {\r\n      // @ts-ignore\r\n      authorization: store.getState().getIn(['loginReducer', 'login', 'userMsg']).token\r\n    }\r\n  });\r\n}\r\n","import styled from 'styled-components';\r\nexport const RadioWrapper = styled.div`\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  .channel-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    & > li {\r\n      width: 30%;\r\n      padding: 0 0 0 20px;\r\n      display: flex;\r\n      align-items: center;\r\n      border-right: 2px solid #f3f3f3;\r\n      border-bottom: 2px solid #f3f3f3;\r\n      margin: 0 0 15px 0;\r\n      .right-msg {\r\n        margin: 0 0 0 40px;\r\n        flex: 1;\r\n        height: 100%;\r\n        .msg {\r\n          color: #de5e5e;\r\n          display: flex;\r\n          align-items: center;\r\n          height: 100%;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n    .img-container {\r\n      width: 65px;\r\n      height: 65px;\r\n      background-repeat: no-repeat;\r\n      background-size: 100px;\r\n      background-position: -45px 0;\r\n    }\r\n    .channel-name {\r\n      text-align: center;\r\n      width: 65px;\r\n      color: #db5e5e;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n","import React, { memo, FC, ReactElement, useEffect, useState, MouseEvent } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Map } from 'immutable';\r\nimport { getAllChannel, getUserChannelCount } from '../../../../../network/channel';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { RadioWrapper } from './style';\r\nimport { ILogin, IUserMsg } from '../../../../../constant/store/login';\r\n\r\ninterface IUserChannel {\r\n  id: string;\r\n  name: string;\r\n  count: number;\r\n  channels: { id: string; name: string }[];\r\n}\r\nconst Radio: FC<RouteComponentProps> = (props): ReactElement => {\r\n  const [channel, setChannel] = useState<{ id: string; name: string; picUrl: string }[]>([]);\r\n  const [userChannel, setUserChannel] = useState<IUserChannel[]>([]);\r\n  const { userMsg } = useSelector<Map<string, ILogin>, ILogin>((state) => {\r\n    return state.getIn(['loginReducer', 'login']);\r\n  });\r\n  useEffect(() => {\r\n    getAllChannel().then((data: any) => {\r\n      setChannel(data);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    getUserChannelCount(userMsg.userId).then((data: any) => {\r\n      setUserChannel(data);\r\n    });\r\n  }, [userMsg.userId]);\r\n  const liClick = (\r\n    e: MouseEvent<HTMLDivElement> | MouseEvent<HTMLSpanElement>,\r\n    item: { id: string; name: string; count?: number },\r\n    index: number\r\n  ) => {\r\n    e.stopPropagation();\r\n    props.history.push({\r\n      pathname: '/innovate/innovateCon',\r\n      state: {\r\n        id: item.id\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <RadioWrapper>\r\n      <ul className=\"channel-list\">\r\n        {channel.length !== 0 &&\r\n          channel.map((item, index) => {\r\n            return (\r\n              <li key={item.id}>\r\n                <div>\r\n                  <div style={{ backgroundImage: `url(${item.picUrl})` }} className=\"img-container\"></div>\r\n                  <p className=\"channel-name\">{item.name}</p>\r\n                </div>\r\n                <div className=\"right-msg\" onClick={(e) => liClick(e, item, index)}>\r\n                  {userChannel\r\n                    .filter((iten, index) => {\r\n                      return iten.id === item.id;\r\n                    })\r\n                    .map((it, index) => {\r\n                      return (\r\n                        <span className=\"msg\" key={it.id} onClick={(e) => liClick(e, it, index)}>\r\n                          共有{it.count}个声音\r\n                        </span>\r\n                      );\r\n                    })}\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </RadioWrapper>\r\n  );\r\n};\r\nexport default memo(withRouter(Radio));\r\n","/*\r\n@Name guobin\r\n@Description gb-music\r\n@author guobin\r\n@date 2021/9/21\r\n*/\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport { HOST_NAME } from '../config';\r\nimport store from '../store';\r\nimport { changeUserMsg, logoutAction } from '../views/Login/store/actionCreators';\r\nimport { createBrowserHistory } from 'history';\r\nfunction request<T>(config: AxiosRequestConfig) {\r\n  const instance: AxiosInstance = axios.create({\r\n    baseURL: HOST_NAME,\r\n    timeout: 15000\r\n  });\r\n  instance.interceptors.request.use(\r\n    (config) => {\r\n      return config;\r\n    },\r\n    (err) => {\r\n      console.log(err);\r\n      return err;\r\n    }\r\n  );\r\n  instance.interceptors.response.use(\r\n    (res) => {\r\n      return res.data;\r\n    },\r\n    (err) => {\r\n      if (err.response) {\r\n        const { status, data } = err.response;\r\n        if (status * 1 === 403 && data.message === '请登录') {\r\n          // @ts-ignore\r\n          store.dispatch(logoutAction());\r\n          store.dispatch(\r\n            changeUserMsg({\r\n              token: '',\r\n              userName: '',\r\n              userId: '',\r\n              avatarUrl: '',\r\n              createTime: '',\r\n              updateTime: '',\r\n              manage: -1,\r\n              auth: -1\r\n            })\r\n          );\r\n          createBrowserHistory().push({\r\n            pathname: '/Login'\r\n          });\r\n        } else {\r\n          throw err;\r\n        }\r\n      }\r\n    }\r\n  );\r\n  return instance.request<any, T>(config);\r\n}\r\nexport default request;\r\n"],"sourceRoot":""}